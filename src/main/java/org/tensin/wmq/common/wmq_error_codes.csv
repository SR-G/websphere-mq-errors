MQRCCF_ACTION_VALUE_ERROR;3091;0C13;RC3091;Action value not valid.;The value specified for Action is not valid. There is only one valid value.;Specify MQACT_FORCE_REMOVE as the value of the Action parameter.;;
MQRCCF_ALLOCATE_FAILED;4009;0FA9;RC4009;Allocation failed.;An attempt to allocate a conversation to a remote system failed. The error may be due to an entry in the channel definition that is not valid, or it might be that the listening program at the remote system is not running.;Ensure that the channel definition is correct, and start the listening program if necessary. If the error persists, consult your systems administrator.;;
MQRCCF_ALLOC_FAST_TIMER_ERROR;3166;0C5E;RC3166;Allocation fast retry timer value not valid.;The AllocRetryFastTimer value was not valid.;Specify a valid value.;;
MQRCCF_ALLOC_RETRY_ERROR;3164;0C5C;RC3164;Allocation retry count not valid.;The AllocRetryCount value was not valid.;Specify a valid count.;;
MQRCCF_ALLOC_SLOW_TIMER_ERROR;3165;0C5D;RC3165;Allocation slow retry timer value not valid.;The AllocRetrySlowTimer value was not valid.;Specify a valid timer value.;;
MQRCCF_ALREADY_JOINED;3157;0C55;RC3157;The identity already has an entry for this subscription.;A Join registration option was specified but the subscriber identity was already a member of the subscription's identity set.;None. The command completed, this reason code is a warning.;;
MQRCCF_ATTR_VALUE_ERROR;4005;0FA5;RC4005;Attribute value not valid or repeated.;One or more of the attribute values specified was not valid or was repeated. The error response message contains the failing attribute selectors (with parameter identifier MQIACF_PARAMETER_ID).;Specify the attribute values correctly.;;
MQRCCF_ATTR_VALUE_FIXED;3213;0C8D;RC3213;Parameter value cannot be changed.;The value for a parameter cannot be changed. The parameter in question may be returned in the message (with parameter identifier MQIACF_PARAMETER_ID).;To change the parameter, the object must be deleted and then created again with the new value.;;
MQRCCF_AUTH_VALUE_ERROR;3171;0C63;RC3171;Authorization value not valid.;A value for the AuthorizationList or AuthorityRemove or AuthorityAdd parameter was not valid.;Specify a valid value.;;
MQRCCF_AUTH_VALUE_MISSING;3172;0C64;RC3172;Authorization value required but missing.;A parameter specifying authorization values must be supplied.;Specify the required parameter.;;
MQRCCF_BATCH_INT_ERROR;4086;0FF6;RC4086;Batch interval not valid.;The batch interval specified was not valid.;Specify a valid batch interval value.;;
MQRCCF_BATCH_INT_WRONG_TYPE;4087;0FF7;RC4087;Batch interval parameter not allowed for this channel type.;The BatchInterval parameter is allowed only for sender and server channels.;Remove the parameter.;;
MQRCCF_BATCH_SIZE_ERROR;3037;0BDD;RC3037;Batch size not valid.;The batch size specified was not valid.;Specify a valid batch size value.;;
MQRCCF_BIND_FAILED;4024;0FB8;RC4024;Bind failed.;The bind to a remote system during session negotiation has failed.;Consult your systems administrator.;;
MQRCCF_BROKER_COMMAND_FAILED;3094;0C16;RC3094;The broker command failed to complete.;A broker command was issued but it failed to complete.;Diagnose the problem using the provided information and issue a corrected command.;;
MQRCCF_BROKER_DELETED;3070;0BFE;RC3070;Broker has been deleted.;When a broker is deleted using the dltmqbrk command, all broker queues created by the broker are deleted. Before this can be done the queues are emptied of all command messages; any that are found are placed on the dead-letter queue with this reason code.;Process the command messages that were placed on the dead-letter queue.;;
MQRCCF_CCSID_ERROR;3049;0BE9;RC3049;Coded character-set identifier error.;In a command message, one of the following occurred: The CodedCharSetId field in the message descriptor of the command does not match the coded character-set identifier of the queue manager at which the command is being processed, or The CodedCharSetId field in a string parameter structure within the message text of the command is not MQCCSI_DEFAULT, or the coded character-set identifier of the queue manager at which the command is being processed, as in the CodedCharSetId field in the message descriptor. The error response message contains the correct value.;This reason can also occur if a ping cannot be performed because the coded character-set identifiers are not compatible. In this case the correct value is not returned.;Construct the command with the correct coded character-set identifier, and specify this in the message descriptor when sending the command. For ping, use a suitable coded character-set identifier.;;
MQRCCF_CELL_DIR_NOT_AVAILABLE;4068;0FE4;RC4068;Cell directory is not available.;The Scope attribute of the queue is to be MQSCO_CELL, but no name service supporting a cell directory has been configured.;Configure the queue manager with a suitable name service.;;
MQRCCF_CFBF_FILTER_VAL_LEN_ERR;3266;0CC2;RC3266;Filter value length not valid.;The MQCFBF FilterValueLength field value was not valid.;Specify a valid length.;;
MQRCCF_CFBF_LENGTH_ERROR;3264;0CC0;RC3264;Structure length not valid.;The MQCFBF StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFBF_OPERATOR_ERROR;3267;0CC3;RC3267;Parameter count not valid.;The MQCFBF Operator field value was not valid.;Specify a valid operator value.;;
MQRCCF_CFBF_PARM_ID_ERROR;3265;0CC1;RC3265;Parameter identifier is not valid.;The MQCFBF Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFBS_DUPLICATE_PARM;3254;0CB6;RC3254;Duplicate parameter.;Two MQCFBS structures with the same parameter identifier were present.;Check for and remove duplicate parameters.;;
MQRCCF_CFBS_LENGTH_ERROR;3255;0CB7;RC3255;Structure length not valid.;The MQCFBS StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFBS_PARM_ID_ERROR;3256;0CB8;RC3256;Parameter identifier is not valid.;The MQCFBS Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFBS_STRING_LENGTH_ERR;3257;0CB9;RC3257;String length not valid.;The MQCFBS StringLength field value was not valid. The value was negative or greater than the maximum permitted length of the parameter specified in the Parameter field.;Specify a valid string length for the parameter.;;
MQRCCF_CFGR_LENGTH_ERROR;3258;0CBA;RC3258;Structure length not valid.;The MQCFGR StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFGR_PARM_COUNT_ERROR;3259;0CBB;RC3259;Parameter count not valid.;The MQCFGR ParameterCount field value was not valid. The value was negative or greater than the maximum permitted for the parameter identifier specified in the Parameter field.;Specify a valid count for the parameter.;;
MQRCCF_CFGR_PARM_ID_ERROR;3240;0CA8;RC3240;Parameter identifier is not valid.;The MQCFGR Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFH_COMMAND_ERROR;3007;0BBF;RC3007;Command identifier not valid.;The MQCFH Command field value was not valid.;Specify a valid command identifier.;;
MQRCCF_CFH_CONTROL_ERROR;3005;0BBD;RC3005;Control option not valid.;The MQCFH Control field value was not valid.;Specify a valid control option.;;
MQRCCF_CFH_LENGTH_ERROR;3002;0BBA;RC3002;Structure length not valid.;The MQCFH StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFH_MSG_SEQ_NUMBER_ERR;3004;0BBC;RC3004;Message sequence number not valid.;The MQCFH MsgSeqNumber field value was not valid.;Specify a valid message sequence number.;;
MQRCCF_CFH_PARM_COUNT_ERROR;3006;0BBE;RC3006;Parameter count not valid.;The MQCFH ParameterCount field value was not valid.;Specify a valid parameter count.;;
MQRCCF_CFH_TYPE_ERROR;3001;0BB9;RC3001;Type not valid.;The MQCFH Type field value was not valid.;Specify a valid type.;;
MQRCCF_CFH_VERSION_ERROR;3003;0BBB;RC3003;Structure version number is not valid.;The MQCFH Version field value was not valid.;Specify a valid structure version number.;;
MQRCCF_CFIF_LENGTH_ERROR;3241;0CA9;RC3241;Structure length not valid.;The MQCFIF StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFIF_OPERATOR_ERROR;3242;0CAA;RC3242;Parameter count not valid.;The MQCFIF Operator field value was not valid.;Specify a valid operator value.;;
MQRCCF_CFIF_PARM_ID_ERROR;3243;0CAB;RC3243;Parameter identifier is not valid.;The MQCFIF Parameter field value was not valid, or specifies a parameter that cannot be filtered, or that is also specified as a parameter to select a subset of objects.;Specify a valid parameter identifier.;;
MQRCCF_CFIL_COUNT_ERROR;3027;0BD3;RC3027;Count of parameter values not valid.;The MQCFIL or MQCFIL64 Count field value was not valid. The value was negative or greater than the maximum permitted for the parameter specified in the Parameter field.;Specify a valid count for the parameter.;;
MQRCCF_CFIL_DUPLICATE_VALUE;3026;0BD2;RC3026;Duplicate parameter value.;In the MQCFIL or MQCFIL64 structure, there was a duplicate parameter value in the list.;Check for and remove duplicate parameter values.;;
MQRCCF_CFIL_LENGTH_ERROR;3028;0BD4;RC3028;Structure length not valid.;The MQCFIL or MQCFIL64 StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFIL_PARM_ID_ERROR;3047;0BE7;RC3047;Parameter identifier is not valid.;The MQCFIL or MQCFIL64 Parameter field value was not valid, or specifies a parameter that cannot be filtered, or that is also specified as a parameter to select a subset of objects.;Specify a valid parameter identifier.;;
MQRCCF_CFIN_DUPLICATE_PARM;3017;0BC9;RC3017;Duplicate parameter.;Two MQCFIN or MQCFIN64 or MQCFIL or MQCFIL64 structures, or any two of those types of structure, with the same parameter identifier were present.;Check for and remove duplicate parameters.;;
MQRCCF_CFIN_LENGTH_ERROR;3009;0BC1;RC3009;Structure length not valid.;The MQCFIN or MQCFIN64 StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFIN_PARM_ID_ERROR;3014;0BC6;RC3014;Parameter identifier is not valid.;The MQCFIN or MQCFIN64 Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFSF_FILTER_VAL_LEN_ERR;3244;0CAC;RC3244;Filter value length not valid.;The MQCFSF FilterValueLength field value was not valid.;Specify a valid length.;;
MQRCCF_CFSF_LENGTH_ERROR;3245;0CAD;RC3245;Structure length not valid.;The MQCFSF StrucLength field value was not valid.;Specify a valid structure length.;;
MQRCCF_CFSF_OPERATOR_ERROR;3246;0CAE;RC3246;Parameter count not valid.;The MQCFSF Operator field value was not valid.;Specify a valid operator value.;;
MQRCCF_CFSF_PARM_ID_ERROR;3247;0CAF;RC3247;Parameter identifier is not valid.;The MQCFSF Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFSL_COUNT_ERROR;3068;0BFC;RC3068;Count of parameter values not valid.;The MQCFSL Count field value was not valid. The value was negative or greater than the maximum permitted for the parameter specified in the Parameter field.;Specify a valid count for the parameter.;;
MQRCCF_CFSL_DUPLICATE_PARM;3066;0BFA;RC3066;Duplicate parameter.;Two MQCFSL structures, or an MQCFST followed by an MQCFSL structure, with the same parameter identifier were present.;Check for and remove duplicate parameters.;;
MQRCCF_CFSL_LENGTH_ERROR;3024;0BD0;RC3024;Structure length not valid.;The MQCFSL StrucLength field value was not valid. The value was not a multiple of four or was inconsistent with the MQCFSL StringLength field value.;Specify a valid structure length.;;
MQRCCF_CFSL_PARM_ID_ERROR;3033;0BD9;RC3033;Parameter identifier is not valid.;The MQCFSL Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFSL_STRING_LENGTH_ERR;3069;0BFD;RC3069;String length not valid.;The MQCFSL StringLength field value was not valid. The value was negative or greater than the maximum permitted length of the parameter specified in the Parameter field.;Specify a valid string length for the parameter.;;
MQRCCF_CFSL_TOTAL_LENGTH_ERROR;3067;0BFB;RC3067;Total string length error.;The total length of the strings (not including trailing blanks) in a MQCFSL structure exceeds the maximum allowable for the parameter.;Check that the structure has been specified correctly, and if so reduce the number of strings.;;
MQRCCF_CFST_CONFLICTING_PARM;3095;0C17;RC3095;Conflicting parameters.;The command was rejected because the parameter identified in the error response was in conflict with another parameter in the command.;Consult the description of the parameter identified to ascertain the nature of the conflict, and the correct command.;;
MQRCCF_CFST_DUPLICATE_PARM;3018;0BCA;RC3018;Duplicate parameter.;Two MQCFST structures, or an MQCFSL followed by an MQCFST structure, with the same parameter identifier were present.;Check for and remove duplicate parameters.;;
MQRCCF_CFST_LENGTH_ERROR;3010;0BC2;RC3010;Structure length not valid.;The MQCFST StrucLength field value was not valid. The value was not a multiple of four or was inconsistent with the MQCFST StringLength field value.;Specify a valid structure length.;;
MQRCCF_CFST_PARM_ID_ERROR;3015;0BC7;RC3015;Parameter identifier is not valid.;The MQCFST Parameter field value was not valid.;Specify a valid parameter identifier.;;
MQRCCF_CFST_STRING_LENGTH_ERR;3011;0BC3;RC3011;String length not valid.;The MQCFST StringLength field value was not valid. The value was negative or greater than the maximum permitted length of the parameter specified in the Parameter field.;Specify a valid string length for the parameter.;;
MQRCCF_CF_STRUC_ERROR;3236;0CA4;RC3236;CF structure error.;A command could not be processed because of a coupling facility or CF structure error. It may be: A Backup CF Structure or Recover CF Structure command when the status of the CF structure is unsuitable. In this case, the CF structure status may be returned in the message together with the CF structure name (with parameter identifiers MQIACF_CF_STRUC_STATUS and MQCA_CF_STRUC_NAME). A command could not access an object because of an error in the coupling facility information, or because a CF structure has failed. In this case, the name of the object involved may be returned in the message (with parameter identifier MQCA_Q_NAME, for example). A command involving a shared channel could not access the channel status or synchronization key information.;In the case of a Backup CF Structure or Recover CF Structure command, take action appropriate to the CF struture status reported.;In other cases, check for error messages on the console log that might relate to the problem. Check whether the coupling facility structure has failed and check that DB2 is available.;;
MQRCCF_CHAD_ERROR;4079;0FEF;RC4079;Channel automatic definition error.;The ChannelAutoDef value was not valid.;Specify MQCHAD_ENABLED or MQCHAD_DISABLED.;;
MQRCCF_CHAD_EVENT_ERROR;4081;0FF1;RC4081;Channel automatic definition event error.;The ChannelAutoDefEvent value was not valid.;Specify MQEVR_ENABLED or MQEVR_DISABLED.;;
MQRCCF_CHAD_EVENT_WRONG_TYPE;4082;0FF2;RC4082;Channel automatic definition event parameter not allowed for this channel type.;The ChannelAutoDefEvent parameter is allowed only for receiver and server-connection channels.;Remove the parameter.;;
MQRCCF_CHAD_EXIT_ERROR;4083;0FF3;RC4083;Channel automatic definition exit name error.;The ChannelAutoDefExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_CHAD_EXIT_WRONG_TYPE;4084;0FF4;RC4084;Channel automatic definition exit parameter not allowed for this channel type.;The ChannelAutoDefExit parameter is allowed only for receiver and server-connection channels.;Remove the parameter.;;
MQRCCF_CHAD_WRONG_TYPE;4080;0FF0;RC4080;Channel automatic definition parameter not allowed for this channel type.;The ChannelAutoDef parameter is allowed only for receiver and server-connection channels.;Remove the parameter.;;
MQRCCF_CHANNEL_ALREADY_EXISTS;4042;0FCA;RC4042;Channel already exists.;An attempt was made to create a channel but the channel already existed and Replace was not specified as MQRP_YES.;Specify Replace as MQRP_YES or use a different name for the channel to be created.;;
MQRCCF_CHANNEL_CLOSED;4090;0FFA;RC4090;Channel closed.;The channel was closed prematurely. This can occur because a user stopped the channel while it was running, or a channel exit decided to close the channel.;Determine the reason that the channel was closed prematurely. Restart the channel if required.;;
MQRCCF_CHANNEL_DISABLED;4038;0FC6;RC4038;Channel disabled.;An attempt was made to use a channel, but the channel was disabled (that is, stopped).;Start the channel.;;
MQRCCF_CHANNEL_ERROR;3235;0CA3;RC3235;Channel command failed.;A channel command failed because of an error in the channel definition, or at the remote end of the channel, or in the communications system. An error identifier value nnn may be returned in the message (with parameter identifier MQIACF_ERROR_ID).;For information about the error, see the explanation of the corresponding error message. Error nnn generally corresponds to message CSQXnnn, although there are some exceptions. The section Distributed queuing message codes in the WebSphere MQ for z/OS® Messages and Codes book gives full details.;;
MQRCCF_CHANNEL_INDOUBT;4025;0FB9;RC4025;Channel in-doubt.;The requested operation cannot complete because the channel is in doubt.;Examine the status of the channel, and either restart a channel to resolve the in-doubt state, or resolve the channel.;;
MQRCCF_CHANNEL_INITIATOR_ERROR;3218;0C93;RC3218;Channel initiator cannot be started, or no suitable channel initiator is available.;One of the following: The channel initiator cannot be started because: It is already active. There are insufficient system resources. The queue manager was shutting down. The shared channel cannot be started because there was no suitable channel initiator available for any active queue manager in the queue-sharing group. This could be because: No channel initiators are running. The channel initiators that are running are too busy to allow any channel, or a channel of the particular type, to be started.;;;
MQRCCF_CHANNEL_IN_USE;4031;0FBF;RC4031;Channel in use.;An attempt was made to perform an operation on a channel, but the channel is currently active.;Stop the channel or wait for it to terminate.;;
MQRCCF_CHANNEL_NAME_ERROR;4044;0FCC;RC4044;Channel name error.;The ChannelName parameter contained characters that are not allowed for channel names.;Specify a valid name.;;
MQRCCF_CHANNEL_NOT_ACTIVE;4064;0FE0;RC4064;Channel not active.;An attempt was made to stop a channel, but the channel was already stopped.;No action is required.;;
MQRCCF_CHANNEL_NOT_FOUND;4032;0FC0;RC4032;Channel not found.;The channel specified does not exist.;Specify the name of a channel which exists.;;
MQRCCF_CHANNEL_TABLE_ERROR;3062;0BF6;RC3062;Channel table value not valid.;The ChannelTable specified was not valid, or was not appropriate for the channel type specified on an Inquire Channel or Inquire Channel Names command.;Specify a valid channel table value.;;
MQRCCF_CHANNEL_TYPE_ERROR;3034;0BDA;RC3034;Channel type not valid.;The ChannelType specified was not valid, or did not match the type of an existing channel being copied, changed or replaced, or the command and the specified disposition cannot be used with that type of channel.;Specify a valid channel name, type, or disposition.;;
MQRCCF_CHL_INST_TYPE_ERROR;3064;0BF8;RC3064;Channel instance type not valid.;The ChannelInstanceType specified was not valid.;Specify a valid channel instance type.;;
MQRCCF_CHL_STATUS_NOT_FOUND;3065;0BF9;RC3065;Channel status not found.;For Inquire Channel Status, no channel status is available for the specified channel. This may indicate that the channel has not been used.;None, unless this is unexpected, in which case consult your systems administrator.;;
MQRCCF_CHL_SYSTEM_NOT_ACTIVE;3168;0C60;RC3168;Channel system is not active.;An attempt was made to start a channel while the channel system was inactive.;Activate the channel system before starting a channel.;;
MQRCCF_CLUSTER_NAME_CONFLICT;3088;0C10;RC3088;ClusterName and ClusterNamelist attributes conflict.;The command was rejected because it would have resulted in the ClusterName attribute and the ClusterNamelist attribute both being nonblank. At least one of these attributes must be blank.;If the command specified one of these attributes only, you must also specify the other one, but with a value of blanks. If the command specified both attributes, ensure that one of them has a value of blanks.;;
MQRCCF_CLUSTER_Q_USAGE_ERROR;3090;0C12;RC3090;Queue cannot be a cluster queue.;The command was rejected because it would have resulted in a cluster queue also being a transmission queue, which is not permitted, or because the queue in question cannot be a cluster queue.;Ensure that the command specifies either: The Usage parameter with a value of MQUS_NORMAL, or The ClusterName and ClusterNamelist parameters with values of blanks. A QName parameter with a value that is not one of these reserved queues: SYSTEM.CHANNEL.INITQ SYSTEM.CHANNEL.SYNCQ SYSTEM.CLUSTER.COMMAND.QUEUE SYSTEM.CLUSTER.REPOSITORY.QUEUE SYSTEM.COMMAND.INPUT SYSTEM.QSG.CHANNEL.SYNCQ SYSTEM.QSG.TRANSMIT.QUEUE;;
MQRCCF_COMMAND_FAILED;3008;0BC0;RC3008;Command failed.;The command has failed.;Refer to the previous error messages for this command.;;
MQRCCF_COMMAND_INHIBITED;3204;0C84;RC3204;Commands not allowed at present time.;The queue manager cannot accept commands at the present time, because it is restarting or terminating, or because the command server is not running.;;;
MQRCCF_COMMAND_LENGTH_ERROR;3230;0C9E;RC3230;Command exceeds allowable length.;The command is so large that its internal form has exceeded the maximum length allowed. The size of the internal form of the command is affected by both the length, and the complexity of the command.;;;
MQRCCF_COMMAND_LEVEL_CONFLICT;3222;0C96;RC3222;Incompatible queue manager command levels.;Changing the CFLevel parameter of a CF structure, or deleting a CF structure, requires that all queue managers in the queue-sharing group have a command level of at least 530. Some of the queue managers have a lower level.;;;
MQRCCF_COMMAND_ORIGIN_ERROR;3231;0C9F;RC3231;Command issued incorrectly.;The command cannot be issued using command server. This is an internal error.;Notify your system programmer.;;
MQRCCF_COMMAND_REPLY_ERROR;3226;0C9A;RC3226;Error saving command reply information.;While processing a command that used the CommandScope parameter, or a command for the channel initiator, an error occurred while trying to save information about the command.;The most likely cause is insufficient storage. If the problem persists, you may need to restart the queue manager after making more storage available.;;
MQRCCF_COMMAND_SCOPE_ERROR;3225;0C99;RC3225;Queue-sharing group error.;While processing a command that used the CommandScope parameter, an error occurred while trying to send data to the coupling facility.;Notify your system programmer.;;
MQRCCF_COMMIT_FAILED;4040;0FC8;RC4040;Commit failed.;An error was received when an attempt was made to commit a unit of work.;Consult your systems administrator.;;
MQRCCF_COMMS_LIBRARY_ERROR;3092;0C14;RC3092;Library for requested communications protocol could not be loaded.;The library needed for the requested communications protocol could not be loaded.;Install the library for the required communications protocol, or specify a communications protocol that has already been installed.;;
MQRCCF_CONFIGURATION_ERROR;4011;0FAB;RC4011;Configuration error.;There was a configuration error in the channel definition or communication subsystem, and allocation of a conversation was not possible. This might be caused by one of the following: For LU 6.2, either the ModeName or the TpName is incorrect. The ModeName must match that on the remote system, and the TpName must be specified. (On i5/OS, these are held in the communications Side Object.) For LU 6.2, the session might not be established. For TCP, the ConnectionName in the channel definition cannot be resolved to a network address. This might be because the name has not been correctly specified, or because the name server is not available. The requested communications protocol might not be supported on the platform.;Identify the error and take appropriate action.;;
MQRCCF_CONNECTION_CLOSED;4017;0FB1;RC4017;Connection closed.;An error occurred while receiving data from a remote system. The connection to the remote system has unexpectedly terminated.;Contact your systems administrator.;;
MQRCCF_CONNECTION_ID_ERROR;3174;0C66;RC3174;Error in connection id parameter.;The ConnectionId specified was not valid.;Specify a valid connection id.;;
MQRCCF_CONNECTION_REFUSED;4012;0FAC;RC4012;Connection refused.;The attempt to establish a connection to a remote system was rejected. The remote system might not be configured to allow a connection from this system. For LU 6.2 either the user ID or the password supplied to the remote system is incorrect. For TCP the remote system might not recognize the local system as valid, or the TCP listener program might not be started.;Correct the error or restart the listener program.;;
MQRCCF_CONN_NAME_ERROR;4062;0FDE;RC4062;Error in connection name parameter.;The ConnectionName parameter contains one or more blanks at the start of the name.;Specify a valid connection name.;;
MQRCCF_CONN_NOT_STOPPED;3260;0CBC;RC3260;Connection not stopped.;The Stop Connection command could not be executed, so the connection was not stopped.;;;
MQRCCF_CORREL_ID_ERROR;3080;0C08;RC3080;Correlation identifier used as part of an identity is all binary zeroes.;Each publisher and subscriber is identified by a queue manager name, a queue name, and optionally a correlation identifier. The correlation identifier is typically used to allow multiple subscribers to share the same subscriber queue. In this instance a publisher or subscriber has indicated within the Registration or Publication options supplied on the command that their identity does include a correlation identifier, but a valid identifier has not been supplied.;Retry the command ensuring that the correlation identifier supplied in the message descriptor of the command message is not all binary zeroes.;;
MQRCCF_DATA_CONV_VALUE_ERROR;3052;0BEC;RC3052;Data conversion value not valid.;The value specified for DataConversion is not valid.;Specify a valid value.;;
MQRCCF_DATA_TOO_LARGE;4043;0FCB;RC4043;Data too large.;The data to be sent exceeds the maximum that can be supported for the command.;Reduce the size of the data.;;
MQRCCF_DEL_OPTIONS_ERROR;3087;0C0F;RC3087;Invalid delete options have been supplied.;The options provided with a Delete Publication command are not valid.;Retry the command with a valid combination of options.;;
MQRCCF_DISC_INT_ERROR;3038;0BDE;RC3038;Disconnection interval not valid.;The disconnection interval specified was not valid.;Specify a valid disconnection interval.;;
MQRCCF_DISC_INT_WRONG_TYPE;4054;0FD6;RC4054;Disconnection interval not allowed for this channel type.;The DiscInterval parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRCCF_DISC_RETRY_ERROR;3163;0C5B;RC3163;Disconnection retry count not valid.;The DiscRetryCount value was not valid.;Specify a valid count.;;
MQRCCF_DISPOSITION_CONFLICT;3211;0C8B;RC3211;Parameters are incompatible with disposition.;The parameters or parameter values for a command are incompatible with the disposition of an object. One of the following occurred: A value specified for the object name or other parameter is not allowed for a local queue whose disposition is shared or a model queue used to create a dynamic queue that is shared. A value specified for a parameter is not allowed for an object with such disposition. A value specified for a parameter must be non-blank for an object with such disposition. The CommandScope and QSGDisposition or ChannelDisposition parameter values are incompatible. The action requested for a channel cannot be performed because it has the wrong disposition. The parameter and disposition in question may be returned in the message (with parameter identifiers MQIACF_PARAMETER_ID and MQIA_QSG_DISP).;Reissue the command with correct parameters and values.;;
MQRCCF_DUPLICATE_IDENTITY;3078;0C06;RC3078;Publisher or subscriber identity already assigned to another user ID.;Each publisher and subscriber has a unique identity consisting of a queue manager name, a queue name, and optionally a correlation identifier. Associated with each identity is the user ID under which that publisher or subscriber first registered. A given identity can be assigned only to one user ID at a time. While the identity is registered with the broker all commands wanting to use it must specify the correct user ID. When a publisher or a subscriber no longer has any registrations with the broker the identity can be used by another user ID.;Either retry the command using a different identity or remove all registrations associated with the identity so that it can be used by a different user ID. The user ID to which the identity is currently assigned is returned within the error response message. A Deregister command could be issued to remove these registrations. If the user ID in question cannot be used to execute such a command, you need to have the necessary authority to open the SYSTEM.BROKER.CONTROL.QUEUE using the MQOO_ALTERNATE_USER_AUTHORITY option.;;
MQRCCF_DUPLICATE_SUBSCRIPTION;3152;0C50;RC3152;The subscription already exists.;A matching subscription already exists.;Either modify the new subscription properties to distinguish it from the existing subscription or deregister the existing subscription. Then reissue the command.;;
MQRCCF_DYNAMIC_Q_SCOPE_ERROR;4067;0FE3;RC4067;Dynamic queue scope error.;The Scope attribute of the queue is to be MQSCO_CELL, but this is not allowed for a dynamic queue.;Predefine the queue if it is to have cell scope.;;
MQRCCF_ENCODING_ERROR;3050;0BEA;RC3050;Encoding error.;The Encoding field in the message descriptor of the command does not match that required for the platform at which the command is being processed.;Construct the command with the correct encoding, and specify this in the message descriptor when sending the command.;;
MQRCCF_ENTITY_NAME_MISSING;3169;0C61;RC3169;Entity name required but missing.;A parameter specifying entity names must be supplied.;Specify the required parameter.;;
MQRCCF_ENTRY_ERROR;4013;0FAD;RC4013;Connection name not valid.;The connection name in the channel definition could not be resolved into a network address. Either the name server does not contain the entry, or the name server was not available.;Ensure that the connection name is correctly specified and that the name server is available.;;
MQRCCF_ESCAPE_TYPE_ERROR;3054;0BEE;RC3054;Escape type not valid.;The value specified for EscapeType is not valid.;Specify a valid value.;;
MQRCCF_EVENTS_DISABLED;3224;0C98;RC3224;Events not enabled.;The command required performance or configuration events to be enabled.;Use the Change Queue manager command to enable the events if required.;;
MQRCCF_FILE_NOT_AVAILABLE;3162;0C5A;RC3162;File not available to CICS.;A file name parameter identifies a file that is defined to CICS, but is not available.;Check that the CSD definition for the file is correct and enabled.;;
MQRCCF_FILTER_ERROR;3150;0C4E;RC3150;Filter not valid.;Either: In an inquire command message, the specification of a filter is not valid. In a publish/subscribe command message, the content-based filter expression supplied in the publish/subscribe command message contains invalid syntax, and cannot be used.;Correct the specification of the filter parameter structure in the inquire command message. Correct the syntax of the filter expression in the publish/subscribe command message. The filter expression is the value of the Filter tag in the psc folder in the MQRFH2 structure. See the Websphere MQ Integrator V2 Programming Guidefor details of valid syntax.;;
MQRCCF_FORCE_VALUE_ERROR;3012;0BC4;RC3012;Force value not valid.;The force value specified was not valid.;Specify a valid force value.;;
MQRCCF_FUNCTION_RESTRICTED;3227;0C9B;RC3227;Restricted command or parameter value used.;The command, or the value specified for one of its parameters, is not allowed because the installation and customization options chosen do not allow all functions to be used. The parameter in question may be returned in the message (with parameter identifier MQIACF_PARAMETER_ID).;;;
MQRCCF_HB_INTERVAL_ERROR;4077;0FED;RC4077;Heartbeat interval not valid.;The HeartbeatInterval value was not valid.;Specify a value in the range 0-999 999.;;
MQRCCF_HB_INTERVAL_WRONG_TYPE;4078;0FEE;RC4078;Heartbeat interval parameter not allowed for this channel type.;The HeartbeatInterval parameter is allowed only for receiver and requester channels.;Remove the parameter.;;
MQRCCF_HOST_NOT_AVAILABLE;4010;0FAA;RC4010;Remote system not available.;An attempt to allocate a conversation to a remote system was unsuccessful. The error might be transitory, and the allocate might succeed later. This reason can occur if the listening program at the remote system is not running.;Ensure that the listening program is running, and retry the operation.;;
MQRCCF_INCORRECT_Q;3079;0C07;RC3079;Command sent to wrong broker queue.;The command is a valid broker command but the queue it has been sent to is incorrect. Publish and Delete Publication commands need to be sent to the stream queue, all other commands need to be sent to the SYSTEM.BROKER.CONTROL.QUEUE.;Retry the command by sending it to the correct queue.;;
MQRCCF_INCORRECT_STREAM;3075;0C03;RC3075;Stream name does not match the stream queue it was sent to.;A command has been sent to a stream queue that specified a different stream name parameter.;Retry the command either by sending it to the correct stream queue or by modifying the command so that the stream name parameter matches.;;
MQRCCF_INDOUBT_VALUE_ERROR;3053;0BED;RC3053;In-doubt value not valid.;The value specified for InDoubt is not valid.;Specify a valid value.;;
MQRCCF_INVALID_DESTINATION;3317;0CF5;RC3317;The Subscription or Topic object used in a Change, Copy, Create or Delete PCF command is invalid.;Investigate and correct the required parameters for the specific command you are using. For more details, see Programmable Commands and Formats.;;
MQRCCF_LIKE_OBJECT_WRONG_TYPE;4003;0FA3;RC4003;New and existing objects have different subtype.;An attempt was made to create an object based on the definition of an existing object, but the new and existing objects had different subtypes.;Ensure that the new object has the same subtype as the one on which it is based.;;
MQRCCF_LISTENER_CONFLICT;3232;0CA0;RC3232;Address conflict for listener.;A listener was already active for a port and IP address combination that conflicted with the Port and IPAddress values specified by a Start Channel Listener or Stop Channel Listener command. The Port and IPAddress value combination specified must match a combination for which the listener is active. It cannot be a superset or a subset of that combination.;Reissue the command with correct values, if required.;;
MQRCCF_LISTENER_NOT_STARTED;4020;0FB4;RC4020;Listener not started.;The listener program could not be started. Either the communications subsystem has not been started, or the number of current channels using the communications subsystem is the maximum allowed, or there are too many jobs waiting in the queue.;Ensure the communications subsystem is started or retry the operation later. Increase the number of current channels allowed, if appropriate.;;
MQRCCF_LISTENER_RUNNING;3249;0CB1;RC3249;Listener is running.;An attempt was made to perform an operation on a listener, but it is currently active.;Stop the listener if required.;;
MQRCCF_LISTENER_STARTED;3233;0CA1;RC3233;Listener is started.;An attempt was made to start a listener, but it is already active for the requested TransportType, InboundDisposition, Port, and IPAddress values. The requested parameter values may be returned in the message, if applicable (with parameter identifiers MQIACH_XMIT_PROTOCOL_TYPE, MQIACH_INBOUND_DISP, MQIACH_PORT_NUMBER, MQCACH_IP_ADDRESS).;;;
MQRCCF_LISTENER_STILL_ACTIVE;3268;0CC4;RC3268;Listener still active.;An attempt mas made to stop a listener, but it failed and the listener is still active. For example, the the listener may still have active channels.;Wait for the active connections to the listener to complete before retrying the request.;;
MQRCCF_LISTENER_STOPPED;3234;0CA2;RC3234;Listener is stopped.;An attempt was made to stop a listener, but it is not active or already stopping for the requested TransportType, InboundDisposition, Port, and IPAddress values. The requested parameter values may be returned in the message, if applicable (with parameter identifiers MQIACH_XMIT_PROTOCOL_TYPE, MQIACH_INBOUND_DISP, MQIACH_PORT_NUMBER, MQCACH_IP_ADDRESS).;;;
MQRCCF_LOG_TYPE_ERROR;3175;0C67;RC3175;Log type not valid.;The log type value specified was not valid.;Specify a valid log type value.;;
MQRCCF_LONG_RETRY_ERROR;3041;0BE1;RC3041;Long retry count not valid.;The long retry count value specified was not valid.;Specify a valid long retry count value.;;
MQRCCF_LONG_RETRY_WRONG_TYPE;4057;0FD9;RC4057;Long retry parameter not allowed for this channel type.;The LongRetryCount parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRCCF_LONG_TIMER_ERROR;3042;0BE2;RC3042;Long timer not valid.;The long timer (long retry wait interval) value specified was not valid.;Specify a valid long timer value.;;
MQRCCF_LONG_TIMER_WRONG_TYPE;4058;0FDA;RC4058;Long timer parameter not allowed for this channel type.;The LongRetryInterval parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRCCF_LSTR_STATUS_NOT_FOUND;3250;0CB2;RC3250;Listener status not found.;For Inquire Listener Status, no listener status is available for the specified listener. This may indicate that the listener has not been used.;None, unless this is unexpected, in which case consult your systems administrator.;;
MQRCCF_MAX_INSTANCES_ERROR;3306;0CEA;RC3306;An invalid value was given for the maximum number of simultaneous instances of a server-connection channel (MaxInstances) for the channel definition.;See Programmable Commands and Formats for more information and correct the PCF application.;;
MQRCCF_MAX_INSTS_PER_CLNT_ERR;3307;0CEB;RC3307;An invalid value was given for the MaxInstancesPerClient property.;See Programmable Command Formats for range of values and correct the application.;;
MQRCCF_MAX_MSG_LENGTH_ERROR;3044;0BE4;RC3044;Maximum message length not valid.;The maximum message length value specified was not valid.;Specify a valid maximum message length.;;
MQRCCF_MCA_NAME_ERROR;4047;0FCF;RC4047;Message channel agent name error.;The MCAName value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_MCA_NAME_WRONG_TYPE;4053;0FD5;RC4053;Message channel agent name not allowed for this channel type.;The MCAName parameter is only allowed for sender, server or requester channel types.;Remove the parameter.;;
MQRCCF_MCA_TYPE_ERROR;3063;0BF7;RC3063;Message channel agent type not valid.;The MCAType value specified was not valid.;Specify a valid value.;;
MQRCCF_MD_FORMAT_ERROR;3023;0BCF;RC3023;Format not valid.;The MQMD Format field value was not MQFMT_ADMIN.;Specify the valid format.;;
MQRCCF_MISSING_CONN_NAME;4061;0FDD;RC4061;Connection name parameter required but missing.;The ConnectionName parameter is required for sender or requester channel types, but is not present.;Add the parameter.;;
MQRCCF_MODE_VALUE_ERROR;3029;0BD5;RC3029;Mode value not valid.;The Mode value was not valid.;Specify a valid mode value.;;
MQRCCF_MQCONN_FAILED;4026;0FBA;RC4026;MQCONN call failed.;Check whether the queue manager is active.;;
MQRCCF_MQGET_FAILED;4028;0FBC;RC4028;MQGET call failed.;Check whether the queue manager is active, and the queues involved are correctly set up, and enabled for MQGET.;;
MQRCCF_MQINQ_FAILED;4036;0FC4;RC4036;MQINQ call failed.;Check whether the queue manager is active.;;
MQRCCF_MQOPEN_FAILED;4027;0FBB;RC4027;MQOPEN call failed.;Check whether the queue manager is active, and the queues involved are correctly set up.;;
MQRCCF_MQPUT_FAILED;4029;0FBD;RC4029;MQPUT call failed.;Check whether the queue manager is active, and the queues involved are correctly set up, and not inhibited for puts.;;
MQRCCF_MQSET_FAILED;4063;0FDF;RC4063;MQSET call failed.;Check whether the queue manager is active.;;
MQRCCF_MR_COUNT_ERROR;4069;0FE5;RC4069;Message retry count not valid.;The MsgRetryCount value was not valid.;Specify a value in the range 0-999 999 999.;;
MQRCCF_MR_COUNT_WRONG_TYPE;4070;0FE6;RC4070;Message-retry count parameter not allowed for this channel type.;The MsgRetryCount parameter is allowed only for receiver and requester channels.;Remove the parameter.;;
MQRCCF_MR_EXIT_NAME_ERROR;4071;0FE7;RC4071;Channel message-retry exit name error.;The MsgRetryExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_MR_EXIT_NAME_WRONG_TYPE;4072;0FE8;RC4072;Message-retry exit parameter not allowed for this channel type.;The MsgRetryExit parameter is allowed only for receiver and requester channels.;Remove the parameter.;;
MQRCCF_MR_INTERVAL_ERROR;4073;0FE9;RC4073;Message retry interval not valid.;The MsgRetryInterval value was not valid.;Specify a value in the range 0-999 999 999.;;
MQRCCF_MR_INTERVAL_WRONG_TYPE;4074;0FEA;RC4074;Message-retry interval parameter not allowed for this channel type.;The MsgRetryInterval parameter is allowed only for receiver and requester channels.;Remove the parameter.;;
MQRCCF_MSG_EXIT_NAME_ERROR;4050;0FD2;RC4050;Channel message exit name error.;The MsgExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_MSG_LENGTH_ERROR;3016;0BC8;RC3016;Message length not valid.;The message data length was inconsistent with the length implied by the parameters in the message, or a positional parameter was out of sequence.;Specify a valid message length, and check that positional parameters are in the correct sequence.;;
MQRCCF_MSG_SEQ_NUMBER_ERROR;3030;0BD6;RC3030;Message sequence number not valid.;The message sequence number parameter value was not valid.;Specify a valid message sequence number.;;
MQRCCF_MSG_TRUNCATED;3048;0BE8;RC3048;Message truncated.;The command server received a message that is larger than its maximum valid message size.;Check the message contents are correct.;;
MQRCCF_NAMELIST_ERROR;3215;0C8F;RC3215;Namelist is empty or wrong type.;A namelist used to specify a list of clusters has no names in it or does not have type MQNT_CLUSTER or MQNT_NONE.;Reissue the command specifying a namelist that is not empty and has a suitable type.;;
MQRCCF_NETBIOS_NAME_ERROR;3093;0C15;RC3093;NetBIOS listener name not defined.;The NetBIOS listener name is not defined.;Add a local name to the configuration file and retry the operation.;;
MQRCCF_NET_PRIORITY_ERROR;4088;0FF8;RC4088;Network priority value is not valid.;Specify a valid value.;;
MQRCCF_NET_PRIORITY_WRONG_TYPE;4089;0FF9;RC4089;Network priority parameter not allowed for this channel type.;The NetworkPriority parameter is allowed for sender and server channels only.;Remove the parameter.;;
MQRCCF_NONE_FOUND;3200;0C80;RC3200;No items found matching request criteria.;An Inquire command found no items that matched the specified name and satisfied any other criteria requested.;;;
MQRCCF_NOT_AUTHORIZED;3081;0C09;RC3081;Subscriber has insufficient authority.;To receive publications a subscriber application needs both browse authority for the stream queue that it is subscribing to, and put authority for the queue that publications are to be sent to. Subscriptions are rejected if the subscriber does not have both authorities. In addition to having browse authority for the stream queue, a subscriber would also require altusr authority for the stream queue to subscribe to certain topics that the broker itself publishes information on. These topics start with the MQ/SA/ prefix.;Ensure that the subscriber has the necessary authorities and reissue the request. The problem might occur because the subscriber’s user ID is not known to the broker. This can be identified if a further error reason code of MQRC_UNKNOWN_ENTITY is returned within the error response message.;;
MQRCCF_NOT_REGISTERED;3073;0C01;RC3073;Subscriber or publisher is not registered.;A Deregister command has been issued to remove registrations for a topic, or topics, for which the publisher or subscriber is not registered. If multiple topics were specified on the command, it fails with a completion code of MQCC_WARNING if the publisher or subscriber was registered for some, but not all, of the topics specified. This error code is also returned to a subscriber issuing a Request Update command for a topic for which he does not have a subscription.;Investigate why the publisher or subscriber is not registered. In the case of a subscriber, the subscriptions might have expired, or been removed automatically by the broker if the subscriber is no longer authorized.;;
MQRCCF_NOT_XMIT_Q;4037;0FC5;RC4037;Queue is not a transmission queue.;The queue specified in the channel definition is not a transmission queue, or is in use.;Ensure that the queue is specified correctly in the channel definition, and that it is correctly defined to the queue manager.;;
MQRCCF_NO_CHANNEL_INITIATOR;3217;0C91;RC3217;Channel initiator not active.;The command requires the channel initiator to be started.;;;
MQRCCF_NO_COMMS_MANAGER;4019;0FB3;RC4019;Communications manager not available.;The communications subsystem is not available.;Ensure that the communications subsystem has been started.;;
MQRCCF_NO_RETAINED_MSG;3077;0C05;RC3077;No retained message exists for the topic specified.;A Request Update command has been issued to request the retained message associated with the specified topic. No retained message exists for that topic.;If the topic or topics in question should have retained messages, the publishers of these topics might not be publishing with the correct publication options to cause their publications to be retained.;;
MQRCCF_NO_START_CMD;3262;0CBE;RC3262;No start command.;The service cannot be started because no start command is specified in the service definition.;Correct the definition of the service.;;
MQRCCF_NO_STOP_CMD;3263;0CBF;RC3263;No stop command.;The service cannot be stopped because no stop command is specified in the service definition.;Correct the definition of the service.;;
MQRCCF_NO_STORAGE;4018;0FB2;RC4018;Not enough storage available.;Insufficient storage is available.;Consult your systems administrator.;;
MQRCCF_NO_XCF_PARTNER;3239;0CA7;RC3239;MQ is not connected to the XCF partner.;The command involving the IMS Bridge cannot be processed because MQ is not connected to the XCF partner. The group and member names of the XCF partner in question may be returned in the message (with parameter identifiers MQCA_XCF_GROUP_NAME and MQCA_XCF_MEMBER_NAME).;;;
MQRCCF_NPM_SPEED_ERROR;4075;0FEB;RC4075;Nonpersistent message speed not valid.;The NonPersistentMsgSpeed value was not valid.;Specify MQNPMS_NORMAL or MQNPMS_FAST.;;
MQRCCF_NPM_SPEED_WRONG_TYPE;4076;0FEC;RC4076;Nonpersistent message speed parameter not allowed for this channel type.;The NonPersistentMsgSpeed parameter is allowed only for sender, receiver, server, requester, cluster sender, and cluster receiver channels.;Remove the parameter.;;
MQRCCF_OBJECT_ALREADY_EXISTS;4001;0FA1;RC4001;Object already exists.;An attempt was made to create an object, but the object already existed and the Replace parameter was not specified as MQRP_YES.;Specify Replace as MQRP_YES, or use a different name for the object to be created.;;
MQRCCF_OBJECT_BEING_DELETED;3205;0C85;RC3205;Object is being deleted.;The object specified on a command is in the process of being deleted, so the command is ignored.;;;
MQRCCF_OBJECT_IN_USE;3160;0C58;RC3160;Object in use by another command.;A modification of an object was attempted while the object was being modified by another command.;Retry the command.;;
MQRCCF_OBJECT_LIMIT_EXCEEDED;3209;0C89;RC3209;Local queue limit exceeded.;The command failed because no more local queues could be defined. There is an implementation limit of 524␠287 for the total number of local queues that can exist. For shared queues, there is a limit of 512 queues in a single coupling facility structure.;Delete any existing queues that are no longer required.;;
MQRCCF_OBJECT_NAME_ERROR;4008;0FA8;RC4008;Name not valid.;An object or other name name was specified using characters that were not valid.;Specify only valid characters for the name.;;
MQRCCF_OBJECT_NAME_RESTRICTED;3208;0C88;RC3208;Incompatible object name and type.;The command used a reserved object name with an incorrect object type or subtype. The object is only allowed to be of a predetermined type, as listed in the explanation of message CSQM108I.;;;
MQRCCF_OBJECT_OPEN;4004;0FA4;RC4004;Object is open.;An attempt was made to operate on an object that was in use.;Wait until the object is not in use, and then retry the operation. Alternatively specify Force as MQFC_YES for a change command.;;
MQRCCF_OBJECT_OPEN_FORCE;3210;0C8A;RC3210;Object is in use, but could be changed specifying Force as MQFC_YES.;The object specified is in use. This could be because it is open through the API, or for certain parameter changes, because there are messages currently on the queue. The requested changes can be made by specifying Force as MQFC_YES on a Change command.;Wait until the object is not in use. Alternatively specify Force as MQFC_YES for a change command.;;
MQRCCF_OBJECT_TYPE_MISSING;3173;0C65;RC3173;Object type value required but missing.;A parameter specifying the object type must be supplied.;Specify the required parameter.;;
MQRCCF_OBJECT_WRONG_TYPE;4002;0FA2;RC4002;Object has wrong type or disposition.;An object already exists with the same name but a different subtype or disposition from that specified by the command.;Ensure that the specified object is the same subtype and disposition.;;
MQRCCF_PARM_CONFLICT;3203;0C83;RC3203;Incompatible parameters or parameter values.;The parameters or parameter values for a command are incompatible. One of the following occurred: A parameter was not specified that is required by another parameter or parameter value. A parameter or parameter value was specified that is not allowed with some other parameter or parameter value. The values for two specified parameters were not both blank or non-blank. The values for two specified parameters were incompatible. The parameters in question may be returned in the message (with parameter identifiers MQIACF_PARAMETER_ID).;Reissue the command with correct parameters and values.;;
MQRCCF_PARM_COUNT_TOO_BIG;3020;0BCC;RC3020;Parameter count too big.;The MQCFH ParameterCount field value was more than the maximum for the command.;Specify a parameter count that is valid for the command.;;
MQRCCF_PARM_COUNT_TOO_SMALL;3019;0BCB;RC3019;Parameter count too small.;The MQCFH ParameterCount field value was less than the minimum required for the command.;Specify a parameter count that is valid for the command.;;
MQRCCF_PARM_MISSING;3228;0C9C;RC3228;Required parameter not specified.;The command did not specify a parameter or parameter value that was required. It may be: A parameter that is always required. A parameter that is one of a set of two or more alternative required parameters. A parameter that is required because some other parameter was specified. A parameter that is a list of values which has too few values. The parameter in question may be returned in the message (with parameter identifier MQIACF_PARAMETER_ID).;Reissue the command with correct parameters and values.;;
MQRCCF_PARM_SEQUENCE_ERROR;3035;0BDB;RC3035;Parameter sequence not valid.;The sequence of parameters is not valid for this command.;Specify the positional parameters in a valid sequence for the command.;;
MQRCCF_PARM_SYNTAX_ERROR;3097;0C19;RC3097;Syntax error found in parameter.;The parameter specified contained a syntax error.;Check the syntax for this parameter.;;
MQRCCF_PARM_VALUE_ERROR;3229;0C9D;RC3229;Parameter value invalid.;The value specified for a parameter was not acceptable. It may be: Outside the acceptable numeric range for the parameter. Not one of a list of acceptable values for the parameter. Using characters that are invalid for the parameter. Completely blank, when such is not allowed for the parameter. A filter value that is invalid for the parameter being filtered. The parameter in question may be returned in the message (with parameter identifier MQIACF_PARAMETER_ID).;Reissue the command with correct parameters and values.;;
MQRCCF_PATH_NOT_VALID;3096;0C18;RC3096;Path not valid.;The path specified was not valid.;Specify a valid path.;;
MQRCCF_PING_DATA_COMPARE_ERROR;3032;0BD8;RC3032;Ping Channel command failed.;The Ping Channel command failed with a data compare error. The data offset that failed is returned in the message (with parameter identifier MQIACF_ERROR_OFFSET).;Consult your systems administrator.;;
MQRCCF_PING_DATA_COUNT_ERROR;3031;0BD7;RC3031;Data count not valid.;The Ping Channel DataCount value was not valid.;Specify a valid data count value.;;
MQRCCF_PING_ERROR;4030;0FBE;RC4030;Ping error.;A ping operation can only be issued for a sender or server channel. If the local channel is a receiver channel, you must issue the ping from a remote queue manager.;Reissue the ping request for a different channel of the correct type, or for a receiver channel from a different queue manager.;;
MQRCCF_PORT_NUMBER_ERROR;3167;0C5F;RC3167;Port number value not valid.;The PortNumber value was not valid.;Specify a valid port number value.;;
MQRCCF_PROFILE_NAME_ERROR;3170;0C62;RC3170;Profile name not valid.;A profile name is not valid. Profile names may include wildcard characters or may be given explicitly. If you give an explicit profile name, then the object identified by the profile name must exist. This error may also occur if you specify more than one double asterisk in a profile name.;Specify a valid name.;;
MQRCCF_PROGRAM_AUTH_FAILED;3177;0C69;RC3177;Program not available.;A request to start or stop a service failed because the user does not have sufficient access authority to start the program at the specified location.;Correct the progam name and location, and the user’s authority, before retrying the request.;;
MQRCCF_PROGRAM_NOT_AVAILABLE;3176;0C68;RC3176;Program not available.;A request to start or stop a service failed because the request to start the program failed. This could be because the program could not be found at the specified location, or that insufficient system resources are available currently to start it.;Check that the correct name is specified in the definition of the service, and that the program is in the appropriate libraries, before retrying the request.;;
MQRCCF_PUBSUB_INHIBITED;3318;0CF6;RC3318;MQSUB, MQOPEN, MQPUT and MQPUT1 calls are currently inhibited for all publish/subscribe topics, either by means of the queue manager attribute PSMODE or because processing of publish/subscribe state at queue manager start-up has failed, or has not yet completed.;MQCC_FAILED;If this queue manager does not intentionally inhibit publish/subscribe, investigate any error messages that describe the failure at queue manager start-up, or wait until start-up processing completes. You can use the DISPLAY PUBSUB command to check the status of the publish/subscribe engine to ensure it is ready for use, and additionally on z/OS you will receive an information message CSQM076I.;
MQRCCF_PUB_OPTIONS_ERROR;3084;0C0C;RC3084;Invalid publication options have been supplied.;The publication options provided on a Publish command are not valid.;Retry the command with a valid combination of options.;;
MQRCCF_PURGE_VALUE_ERROR;3046;0BE6;RC3046;Purge value not valid.;The Purge value was not valid.;Specify a valid purge value.;;
MQRCCF_PUT_AUTH_ERROR;3045;0BE5;RC3045;Put authority value not valid.;The PutAuthority value was not valid.;Specify a valid authority value.;;
MQRCCF_PUT_AUTH_WRONG_TYPE;4059;0FDB;RC4059;Put authority parameter not allowed for this channel type.;The PutAuthority parameter is only allowed for receiver or requester channel types.;Remove the parameter.;;
MQRCCF_PWD_LENGTH_ERROR;3098;0C1A;RC3098;Password length error.;The password string length is rounded up by to the nearest eight bytes. This rounding causes the total length of the SSLCryptoHardware string to exceed its maximum.;Decrease the size of the password, or of earlier fields in the SSLCryptoHardware string.;;
MQRCCF_QUIESCE_VALUE_ERROR;3029;0BD5;RC3029;Former name for MQRCCF_MODE_VALUE_ERROR.;;;
MQRCCF_Q_ALREADY_IN_CELL;3021;0BCD;RC3021;Queue already exists in cell.;An attempt was made to define a queue with cell scope, or to change the scope of an existing queue from queue-manager scope to cell scope, but a queue with that name already existed in the cell.;Do one of the following: Delete the existing queue and retry the operation. Change the scope of the existing queue from cell to queue-manager and retry the operation. Create the new queue with a different name.;;
MQRCCF_Q_ATTR_CONFLICT;3223;0C97;RC3223;Queue attributes are incompatible.;The queues involved in a Move Queue command have different values for one or more of these attributes: DefinitionType, HardenGetBackout, Usage. Messages cannot be moved safely if these attributes differ.;;;
MQRCCF_Q_MGR_CCSID_ERROR;3086;0C0E;RC3086;Queue manager coded character set identifier error.;The coded character set value for the queue manager was not valid.;Specify a valid value.;;
MQRCCF_Q_MGR_NAME_ERROR;3074;0C02;RC3074;An invalid or unknown queue manager name has been supplied.;A queue manager name has been supplied as part of a publisher or subscriber identity. This might have been supplied as an explicit parameter or in the ReplyToQMgr field in the message descriptor of the command. Either the queue manager name is not valid, or in the case of a subscriber identity, the subscriber’s queue could not be resolved because the remote queue manager is not known to the broker queue manager.;Retry the command with a valid queue manager name. If appropriate, the broker includes a further error reason code within the error response message. If one is supplied, follow the guidance for that reason code in WebSphere MQ Application Programming Reference to resolve the problem.;;
MQRCCF_Q_MGR_NOT_IN_QSG;3212;0C8C;RC3212;Queue manager is not in a queue-sharing group.;The command or its parameters are not allowed when the queue manager is not in a queue-sharing group. The parameter in question may be returned in the message (with parameter identifier MQIACF_PARAMETER_ID).;Reissue the command correctly.;;
MQRCCF_Q_NAME_ERROR;3076;0C04;RC3076;An invalid or unknown queue name has been supplied.;A queue name has been supplied as part of a publisher or subscriber identity. This might have been supplied as an explicit parameter or in the ReplyToQ field in the message descriptor of the command. Either the queue name is not valid, or in the case of a subscriber identity, the broker has failed to open the queue.;Retry the command with a valid queue name. If appropriate, the broker includes a further error reason code within the error response message. If one is supplied, follow the guidance for that reason code in WebSphere MQ Application Programming Reference to resolve the problem.;;
MQRCCF_Q_TYPE_ERROR;3022;0BCE;RC3022;Queue type not valid.;The QType value was not valid.;Specify a valid queue type.;;
MQRCCF_Q_WRONG_TYPE;4007;0FA7;RC4007;Action not valid for the queue of specified type.;An attempt was made to perform an action on a queue of the wrong type.;Specify a queue of the correct type.;;
MQRCCF_RCV_EXIT_NAME_ERROR;4051;0FD3;RC4051;Channel receive exit name error.;The ReceiveExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_RECEIVED_DATA_ERROR;4015;0FAF;RC4015;Received data error.;An error occurred while receiving data from a remote system. This might be caused by a communications failure.;Consult your systems administrator.;;
MQRCCF_RECEIVE_FAILED;4016;0FB0;RC4016;Receive failed.;The receive operation failed.;Correct the error and retry the operation.;;
MQRCCF_REG_OPTIONS_ERROR;3083;0C0B;RC3083;Invalid registration options have been supplied.;The registration options provided on a command are not valid.;Retry the command with a valid combination of options.;;
MQRCCF_REMOTE_QM_TERMINATING;4035;0FC3;RC4035;Remote queue manager terminating.;The channel is ending because the remote queue manager is terminating.;Restart the remote queue manager.;;
MQRCCF_REMOTE_QM_UNAVAILABLE;4034;0FC2;RC4034;Remote queue manager not available.;The channel cannot be started because the remote queue manager is not available.;Start the remote queue manager.;;
MQRCCF_REPLACE_VALUE_ERROR;3025;0BD1;RC3025;Replace value not valid.;The Replace value was not valid.;Specify a valid replace value.;;
MQRCCF_REPOS_NAME_CONFLICT;3089;0C11;RC3089;RepositoryName and RepositoryNamelist attributes conflict.;Either: The command was rejected because it would have resulted in the RepositoryName and RepositoryNamelist attributes both being nonblank. At least one of these attributes must be blank. For a Reset Queue Manager Cluster command, the queue manager does not provide a full repository management service for the specified cluster. That is, the RepositoryName attribute of the queue manager is not the specified cluster name, or the namelist specified by the RepositoryNamelist attribute does not contain the cluster name.;Reissue the command with the correct values or on the correct queue manager.;;
MQRCCF_RETAINED_NOT_SUPPORTED;4095;0FFF;RC4095;Retained messages used on restricted stream.;An attempt has been made to use retained messages on a publish/subscribe stream defined to be restricted to JMS usage. JMS does not support the concept of retained messages and the request is rejected.;Either modify the application not to use retained messages, or modify the broker JmsStreamPrefix configuration parameter so that this stream is not treated as a JMS stream.;;
MQRCCF_SECURITY_CASE_CONFLICT;3303;0CE7;RC3303;A Refresh Security PCF command was issued, but the case currently in use differs from the system setting and if refreshed would result in the set of classes using different case settings.;Check that the class used is set up correctly and that the system setting is correct. If a change in case setting is required, issue the REFRESH SECURITY(*) command to change all classes.;;
MQRCCF_SECURITY_REFRESH_FAILED;3202;0C82;RC3202;Security refresh did not take place.;A SAF RACROUTE REQUEST=STAT call to your external security manager (ESM) returned a non-zero return code. In consequence, the requested security refresh could not be done. The security item affected may be returned in the message (with parameter identifier MQIACF_SECURITY_ITEM).;Possible causes of this problem are: The class is not installed The class is not active The external security manager (ESM) is not active The RACF z/OS router table is incorrect;For information about resolving the problem, see the explanations of messages CSQH003I and CSQH004I.;;
MQRCCF_SECURITY_SWITCH_OFF;3201;0C81;RC3201;Security refresh or reverification not processed, security switch set OFF.;Either a Reverify Security command was issued, but the subsystem security switch is off, so there are no internal control tables to flag for reverification; or a Refresh Security command was issued, but the security switch for the requested class or the subsystem security switch is off. The switch in question may be returned in the message (with parameter identifier MQIACF_SECURITY_SWITCH).;;;
MQRCCF_SEC_EXIT_NAME_ERROR;4049;0FD1;RC4049;Channel security exit name error.;The SecurityExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_SEND_EXIT_NAME_ERROR;4048;0FD0;RC4048;Channel send exit name error.;The SendExit value contained characters that are not allowed for program names on the platform in question.;Specify a valid name.;;
MQRCCF_SEND_FAILED;4014;0FAE;RC4014;Send failed.;An error occurred while sending data to a remote system. This might be caused by a communications failure.;Consult your systems administrator.;;
MQRCCF_SEQ_NUMBER_WRAP_ERROR;3043;0BE3;RC3043;Sequence wrap number not valid.;The SeqNumberWrap value was not valid.;Specify a valid sequence wrap number.;;
MQRCCF_SERVICE_REQUEST_PENDING;3261;0CBD;RC3261;A Suspend or Resume Queue Manager command was issued, or a Refresh Security command, but such a command is currently in progress.;Wait until the current request completes, then reissue the command if necessary.;;
MQRCCF_SERVICE_RUNNING;3251;0CB3;RC3251;Service is running.;An attempt was made to perform an operation on a service, but it is currently active.;Stop the service if required.;;
MQRCCF_SERVICE_STOPPED;3253;0CB5;RC3253;Service is stopped.;An attempt was made to stop a service, but it is not active or already stopping.;;;
MQRCCF_SERV_STATUS_NOT_FOUND;3252;0CB4;RC3252;Service status not found.;For Inquire Service Status, no service status is available for the specified service. This may indicate that the service has not been used.;None, unless this is unexpected, in which case consult your systems administrator.;;
MQRCCF_SHARING_CONVS_ERROR;3301;0CE5;RC3301;An invalid value has been given for SharingConversations parameter in the Channel definition;Correct the value used in the PCF SharingConversations (MQCFIN) parameter. See Programmable Command Formats for more information.;;
MQRCCF_SHARING_CONVS_TYPE;3302;0CE6;RC3302;SharingConversations parameter is not allowed for this channel type.;See Programmable Command and Formats to ensure that the channel type is compatible with the SharingConversations parameter.;;
MQRCCF_SHORT_RETRY_ERROR;3039;0BDF;RC3039;Short retry count not valid.;The ShortRetryCount value was not valid.;Specify a valid short retry count value.;;
MQRCCF_SHORT_RETRY_WRONG_TYPE;4055;0FD7;RC4055;Short retry parameter not allowed for this channel type.;The ShortRetryCount parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRCCF_SHORT_TIMER_ERROR;3040;0BE0;RC3040;Short timer value not valid.;The ShortRetryInterval value was not valid.;Specify a valid short timer value.;;
MQRCCF_SHORT_TIMER_WRONG_TYPE;4056;0FD8;RC4056;Short timer parameter not allowed for this channel type.;The ShortRetryInterval parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRCCF_SSL_ALT_PROVIDER_REQD;3325;0CFD;RC3325;
MQRCCF_SSL_CIPHER_SPEC_ERROR;4092;0FFC;RC4092;SSL cipher specification not valid.;The SSLCipherSpec specified is not valid.;Specify a valid cipher specification.;;
MQRCCF_SSL_CLIENT_AUTH_ERROR;4094;0FFE;RC4094;SSL client authentication not valid.;The SSLClientAuth specified is not valid.;Specify a valid client authentication.;;
MQRCCF_SSL_PEER_NAME_ERROR;4093;0FFD;RC4093;SSL peer name not valid.;The SSLPeerName specified is not valid.;Specify a valid peer name.;;
MQRCCF_STORAGE_CLASS_IN_USE;3207;0C87;RC3207;Storage class is active or queue is in use.;The command for a local queue involved a change to the StorageClass value, but there are messages on the queue, or other threads have the queue open.;Remove the messages from the queue, or wait until any other threads have closed the queue.;;
MQRCCF_STREAM_ERROR;3071;0BFF;RC3071;Stream name is not valid.;The stream name parameter is not valid. Stream names must obey the same naming rules as for WebSphere MQ queues.;Retry the command with a valid stream name parameter.;;
MQRCCF_STRUCTURE_TYPE_ERROR;3013;0BC5;RC3013;Structure type not valid.;The structure Type value was not valid.;Specify a valid structure type.;;
MQRCCF_SUBSCRIPTION_IN_USE;3155;0C53;RC3155;The subscription is in use.;An attempt to modify or deregister a subscription was attempted by a member of the identity set when they were not the only member of this set.;Reissue the command when you are the only member of the identity set. To avoid the identity set check and force the modification or deregistration remove the subscription identity from the command message and reissue the command.;;
MQRCCF_SUBSCRIPTION_LOCKED;3156;0C54;RC3156;The subscription is locked.;The subscription is currently exclusively locked by another identity.;Wait for this identity to release the exclusive lock.;;
MQRCCF_SUBSCRIPTION_POINT_ERR;3309;0CED;RC3309;The Subscription point was not valid. Valid subscription points are the topic strings of the topic objects listed in the SYSTEM.QPUBSUB.SUBPOINT.NAMELIST.;Use a subscription point that matches the topic string of a topic object listed in the SYSTEM.QPUBSUB.SUBPOINT.NAMELIST (or remove the subscription point parameter and this uses the default subscription point);;
MQRCCF_SUB_IDENTITY_ERROR;3154;0C52;RC3154;The subscription identity parameter is in error.;Either the supplied value exceeds the maximum length allowed or the subscription identity is not currently a member of the subscription's identity set and a Join registration option was not specified.;Either correct the identity value or specify a Join registration option to add this identity to the identity set for this subscription.;;
MQRCCF_SUB_NAME_ERROR;3153;0C51;RC3153;The subscription name parameter is in error.;Either the subscription name is of an invalid format or a matching subscription already exists with no subscription name.;Either correct the subscription name or remove it from the command and reissue the command.;;
MQRCCF_SUPPRESSED_BY_EXIT;4085;0FF5;RC4085;Action suppressed by exit program.;An attempt was made to define a channel automatically, but this was inhibited by the channel automatic definition exit. The AuxErrorDataInt1 parameter contains the feedback code from the exit indicating why it inhibited the channel definition.;Examine the value of the AuxErrorDataInt1 parameter, and take any action that is appropriate.;;
MQRCCF_TERMINATED_BY_SEC_EXIT;4065;0FE1;RC4065;Channel terminated by security exit.;A channel security exit terminated the channel.;Check that the channel is attempting to connect to the correct queue manager, and if so that the security exit is specified correctly, and is working correctly, at both ends.;;
MQRCCF_TOO_MANY_FILTERS;3248;0CB0;RC3248;Too many filters.;The command contained more than the maximum permitted number of filter structures.;Specify the command correctly.;;
MQRCCF_TOPICSTR_ALREADY_EXISTS;3300;0CE4;RC3300;The topic string specified already exists in another topic object.;Verify that the topic string used is correct.;;
MQRCCF_TOPIC_ERROR;3072;0C00;RC3072;Topic name is invalid.;A command has been sent to the broker containing a topic name that is not valid. Note that wildcard topic names are not allowed for Register Publisher and Publish commands.;Retry the command with a valid topic name parameter. Up to 256 characters of the topic name in question are returned with the error response message. If the topic name contains a null character, this is assumed to terminate the string and is not considered to be part of it. A zero length topic name is not valid, as is one that contains an escape sequence that is not valid.;;
MQRCCF_TOPIC_STRING_NOT_FOUND;3308;0CEC;RC3308;When processing an Inquire Topic Status command, the topic string specified did not match any topic nodes in the topic tree.;Verify the topic string is correct.;;
MQRCCF_TOPIC_TYPE_ERROR;3305;0CE9;RC3305;An Inquire or Delete Topic PCF command was issued with an invalid TopicType parameter.;Correct the TopicType parameter and reissue the command. For more details on the TopicType, see Programmable Commands and Formats.;;
MQRCCF_UNEXPECTED_ERROR;3238;0CA6;RC3238;Unexpected or severe error.;An unexpected or severe error or other failure occurred. A code associated with the error may be returned in the message (with parameter identifier MQIACF_ERROR_ID).;Notify your system programmer.;;
MQRCCF_UNKNOWN_BROKER;3085;0C0D;RC3085;Command received from an unknown broker.;Within a multi-broker network, related brokers pass subscriptions and publications between each other as a series of command messages. One such command message has been received from a broker that is not, or is no longer, related to the detecting broker.;his situation can occur if the broker network is not quiesced while topology changes are made to the network. When removing a broker from the network ensure that the channels between the two related brokers in question are active.;;
MQRCCF_UNKNOWN_FILE_NAME;3161;0C59;RC3161;File not defined to CICS.;A file name parameter identifies a file that is not defined to CICS.;Provide a valid file name or create a CSD definition for the required file.;;
MQRCCF_UNKNOWN_Q_MGR;4006;0FA6;RC4006;Queue manager not known.;The queue manager specified was not known.;Specify the name of the queue manager to which the command is sent, or blank.;;
MQRCCF_UNKNOWN_REMOTE_CHANNEL;4033;0FC1;RC4033;Remote channel not known.;There is no definition of the referenced channel at the remote system.;Ensure that the local channel is correctly defined. If it is, add an appropriate channel definition at the remote system.;;
MQRCCF_UNKNOWN_STREAM;3082;0C0A;RC3082;Stream is not known by the broker or could not be created.;A command message has been put to the SYSTEM.BROKER.CONTROL.QUEUE for an unknown stream. This error code is also returned if dynamic stream creation is enabled and the broker failed to create a stream queue for the new stream using the SYSTEM.BROKER.MODEL.STREAM queue.;Retry the command for a stream that the broker supports. If the broker should support the stream, either define the stream queue manually, or correct the problem that prevented the broker from creating the stream queue itself.;;
MQRCCF_UNKNOWN_USER_ID;3237;0CA5;RC3237;User identifier not found.;A user identifier specified in a Reverify Security command was not valid because there was no entry found for it in the internal control table. This could be because the identifier was entered incorrectly in the command, or because it was not in the table (for example, because it had timed-out). The user identifier in question may be returned in the message (with parameter identifier MQCACF_USER_IDENTIFIER).;;;
MQRCCF_USER_EXIT_NOT_AVAILABLE;4039;0FC7;RC4039;User exit not available.;The channel was terminated because the user exit specified does not exist.;Ensure that the user exit is correctly specified and the program is available.;;
MQRCCF_WRONG_CHANNEL_TYPE;4041;0FC9;RC4041;Parameter not allowed for this channel type.;The parameter is not allowed for the type of channel being created, copied, or changed. Refer to the description of the parameter in error to determine the types of channel for which the parameter is valid;Remove the parameter.;;
MQRCCF_WRONG_USER;3151;0C4F;RC3151;Wrong user.;A publish/subscribe command message cannot be executed on behalf of the requesting user because the subscription that it would update is already owned by a different user. A subscription can be updated or deregistered only by the user that originally registered the subscription.;Ensure that applications that need to issue commands against existing subscriptions are running under the user identifier that originally registered the subscription. Alternatively, use different subscriptions for different users.;;
MQRCCF_XMIT_PROTOCOL_TYPE_ERR;3036;0BDC;RC3036;Transmission protocol type not valid.;The TransportType value was not valid.;Specify a valid transmission protocol type.;;
MQRCCF_XMIT_Q_NAME_ERROR;4045;0FCD;RC4045;Transmission queue name error.;The XmitQName parameter contains characters that are not allowed for queue names. This reason code also occurs if the parameter is not present when a sender or server channel is being created, and no default value is available.;Specify a valid name, or add the parameter.;;
MQRCCF_XMIT_Q_NAME_WRONG_TYPE;4052;0FD4;RC4052;Transmission queue name not allowed for this channel type.;The XmitQName parameter is only allowed for sender or server channel types.;Remove the parameter.;;
MQRC_ACTION_ERROR;2535;09E7;;An MQPUT call was issued, but the value of the Action field in the PutMsgOpts parameter is not a valid MQACTP_* value.;MQCC_FAILED;Specify a valid value for the field.;
MQRC_ADAPTER_CONN_LOAD_ERROR;2129;0851;RC2129;On an MQCONN call, the connection handling module could not be loaded, so the adapter could not link to it. The connection handling module name is: CSQBCON for batch applications CSQQCONN or CSQQCON2 for IMS™ applications;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the batch application program execution JCL, and in the queue-manager startup JCL.;
MQRC_ADAPTER_CONV_LOAD_ERROR;2133;0855;RC2133;On an MQGET call, the adapter (batch or IMS™) could not load the data conversion services modules.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the batch application program execution JCL, and in the queue-manager startup JCL.;
MQRC_ADAPTER_DEFS_ERROR;2131;0853;RC2131;On an MQCONN call, the subsystem definition module (CSQBDEFV for batch and CSQQDEFV for IMS™) does not contain the required control block identifier.;This reason code occurs only on z/OS®.;MQCC_FAILED;Check your library concatenation. If this is correct, check that the CSQBDEFV or CSQQDEFV module contains the required subsystem ID.;
MQRC_ADAPTER_DEFS_LOAD_ERROR;2132;0854;RC2132;On an MQCONN call, the subsystem definition module (CSQBDEFV for batch and CSQQDEFV for IMS™) could not be loaded.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the application program execution JCL, and in the queue-manager startup JCL.;
MQRC_ADAPTER_DISC_LOAD_ERROR;2138;085A;RC2138;On an MQDISC call, the disconnect handling module (CSQBDSC for batch and CSQQDISC for IMS™) could not be loaded, so the adapter could not link to it.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the application program execution JCL, and in the queue-manager startup JCL. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_ADAPTER_NOT_AVAILABLE;2204;089C;RC2204;This is issued only for CICS® applications, if any call is issued and the CICS adapter (a Task Related User Exit) has been disabled, or has not been enabled.;This reason code occurs only on z/OS®.;MQCC_FAILED;The application should tidy up and terminate. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_ADAPTER_SERV_LOAD_ERROR;2130;0852;RC2130;On an MQI call, the batch adapter could not load one of the following API service module, and so could not link to it: CSQBSRV CSQAPEPL CSQBCRMH CSQBAPPL;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the batch application program execution JCL, and in the queue-manager startup JCL.;
MQRC_ADAPTER_STORAGE_SHORTAGE;2127;084F;RC2127;On an MQCONN call, the adapter was unable to acquire storage.;This reason code occurs only on z/OS®.;MQCC_FAILED;Notify the system programmer. The system programmer should determine why the system is short on storage, and take appropriate action, for example, increase the region size on the step or job card.;
MQRC_AIR_ERROR;2385;0951;RC2385;On an MQCONNX call, an MQAIR record is not valid for one of the following reasons: The StrucId field is not MQAIR_STRUC_ID. The Version field is not MQAIR_VERSION_1.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Correct the definition of the MQAIR record.;
MQRC_ALIAS_BASE_Q_TYPE_ERROR;2001;07D1;RC2001;An MQOPEN or MQPUT1 call was issued specifying an alias queue as the destination, but the BaseQName in the alias queue definition resolves to a queue that is not a local queue, a local definition of a remote queue, or a cluster queue.;MQCC_FAILED;Correct the queue definitions.;
MQRC_ALIAS_TARGTYPE_CHANGED;2480;09B0;RC2480;An MQPUT or MQPUT1 call was issed to publish a message on a topic. One of the subscriptions matching this topic was made with a destination queue that was an alias queue which originally referenced a queue, but now references a topic object, which is not allowed. In this situation the reason code MQRC_ALIAS_TARGTYPE_CHANGED is returned in the Feedback field in the MQMD of a report message, or in the Reason field in the MQDLH structure of a message on the dead-letter queue.;MQCC_FAILED;Find the subscriber that is using an alias queue which references a topic object and change it to reference a queue again, or change the subscription to reference a different queue.;
MQRC_ALREADY_CONNECTED;2002;07D2;RC2002;An MQCONN or MQCONNX call was issued, but the application is already connected to the queue manager. On z/OS®, this reason code occurs for batch and IMS™ applications only; it does not occur for CICS® applications. On UNIX, IBM® i, Linux, and Windows, this reason code occurs if the application attempts to create a nonshared handle when a nonshared handle already exists for the thread. A thread can have no more than one nonshared handle. On UNIX, IBM i, Linux and Windows, this reason code occurs if an MQCONN call is issued from within an MQ channel exit, API Crossing Exit, or Async Consume Callback function, and a shared hConn is bound to this thread. On UNIX, IBM i, Linux and Windows, this reason code occurs if an MQCONNX call that does not specify one of the MQCNO_HANDLE_SHARE_* options is issued from within an MQ channel exit, API Crossing Exit, or Async Consume Callback function, and a shared hConn is bound to this thread On Windows, MTS objects do not receive this reason code, as additional connections to the queue manager are allowed.;MQCC_WARNING;None. The Hconn parameter returned has the same value as was returned for the previous MQCONN or MQCONNX call.;An MQCONN or MQCONNX call that returns this reason code does not mean that an additional MQDISC call must be issued, in order to disconnect from the queue manager. If this reason code is returned because the application has been called in a situation where the connect has already been done, a corresponding MQDISC should not be issued, because this will cause the application that issued the original MQCONN or MQCONNX call to be disconnected as well.;
MQRC_ALTER_SUB_ERROR;2435;0983;RC2435;An MQSUB call using option MQSO_ALTER was made changing a subscription that was created with the MQSO_IMMUTABLE option.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly.;
MQRC_ANOTHER_Q_MGR_CONNECTED;2103;0837;RC2103;An MQCONN or MQCONNX call was issued, but the thread or process is already connected to a different queue manager. The thread or process can connect to only one queue manager at a time. On z/OS®, this reason code does not occur. On Windows, MTS objects do not receive this reason code, as connections to other queue managers are allowed.;MQCC_FAILED;Use the MQDISC call to disconnect from the queue manager that is already connected, and then issue the MQCONN or MQCONNX call to connect to the new queue manager.;Disconnecting from the existing queue manager will close any queues that are currently open; it is recommended that any uncommitted units of work should be committed or backed out before the MQDISC call is issued.;
MQRC_API_EXIT_ERROR;2374;0946;RC2374;An API exit function returned an invalid response code, or failed in some other way.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Check the exit logic to ensure that the exit is returning valid values in the ExitResponse and ExitResponse2 fields of the MQAXP structure. Consult the FFST™ record to see if it contains more detail about the problem.;
MQRC_API_EXIT_INIT_ERROR;2375;0947;RC2375;The queue manager encountered an error while attempting to initialize the execution environment for an API exit function.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Consult the FFST™ record to obtain more detail about the problem.;
MQRC_API_EXIT_LOAD_ERROR;2183;0887;RC2183;The API crossing exit module could not be linked. If this reason is returned when the API crossing exit is invoked after the call has been executed, the call itself may have executed correctly.;MQCC_FAILED;Ensure that the correct library concatenation has been specified, and that the API crossing exit module is executable and correctly named. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_API_EXIT_TERM_ERROR;2376;0948;RC2376;The queue manager encountered an error while attempting to terminate the execution environment for an API exit function.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Consult the FFST™ record to obtain more detail about the problem.;
MQRC_APPL_FIRST;900;0384;RC900;This is the lowest value for an application-defined reason code returned by a data-conversion exit. Data-conversion exits can return reason codes in the range MQRC_APPL_FIRST through MQRC_APPL_LAST to indicate particular conditions that the exit has detected.;MQCC_WARNING or MQCC_FAILED;As defined by the writer of the data-conversion exit.;
MQRC_APPL_LAST;999;03E7;RC999;This is the highest value for an application-defined reason code returned by a data-conversion exit. Data-conversion exits can return reason codes in the range MQRC_APPL_FIRST through MQRC_APPL_LAST to indicate particular conditions that the exit has detected.;MQCC_WARNING or MQCC_FAILED;As defined by the writer of the data-conversion exit.;
MQRC_ASID_MISMATCH;2157;086D;RC2157;On any MQI call, the caller’s primary ASID was found to be different from the home ASID.;This reason code occurs only on z/OS®.;MQCC_FAILED;Correct the application (MQI calls cannot be issued in cross-memory mode). Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_ASYNC_UOW_CONFLICT;2529;09E1;RC2529;An MQCTL call with Operation MQOP_START was issued to start the asynchronous consumption of messages, but the connection handle used already has a global unit of work outstanding. MQCTL cannot be used to start asynchronous consumption of messages while a unit of work is in existence unless the MQOP_START_WAIT Operation is used;MQCC_FAILED;Issue an MQCMIT on the connection handle to commit the unit of work and then reissue the MQCTL call, or issue an MQCTL call using Operation MQOP_START_WAIT in order to use the unit of work from within the asynchronous consume callback functions.;
MQRC_ASYNC_XA_CONFLICT;2530;09E2;RC2530;An MQCTL call with Operation MQOP_START was issued to start the asynchronous consumption of messages, but an external XA syncpoint coordinator has already issued an xa_open call for this connection handle. XA transactions must be done using the MQOP_START_WAIT Operation.;MQCC_FAILED;Reissue the MQCTL call using Operation MQOP_START_WAIT.;
MQRC_ATTRIBUTE_LOCKED;6104;17D8;RC6104;An attempt has been made to change the value of an attribute of an object while that object is open, or, for an ImqQueueManager object, while that object is connected. Certain attributes cannot be changed in these circumstances. Close or disconnect the object (as appropriate) before changing the attribute value.;An object may have been connected and/or opened unexpectedly and implicitly in order to perform an MQINQ call. Check the attribute cross-reference table in the WebSphere MQ Using C++ book to determine whether any of your method invocations result in an MQINQ call.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Include MQOO_INQUIRE in the ImqObject open options and set them earlier.;
MQRC_AUTH_INFO_CONN_NAME_ERROR;2387;0953;RC2387;On an MQCONNX call, the AuthInfoConnName field in an MQAIR record specifies a value that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a valid connection name.;
MQRC_AUTH_INFO_REC_COUNT_ERROR;2383;094F;RC2383;On an MQCONNX call, the AuthInfoRecCount field in the MQSCO structure specifies a value that is less than zero.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a value for AuthInfoRecCount that is zero or greater.;
MQRC_AUTH_INFO_REC_ERROR;2384;0950;RC2384;On an MQCONNX call, the MQSCO structure does not specify the address of the MQAIR records correctly. One of the following applies: AuthInfoRecCount is greater than zero, but AuthInfoRecOffset is zero and AuthInfoRecPtr is the null pointer. AuthInfoRecOffset is not zero and AuthInfoRecPtr is not the null pointer. AuthInfoRecPtr is not a valid pointer. AuthInfoRecOffset or AuthInfoRecPtr points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Ensure that one of AuthInfoRecOffset or AuthInfoRecPtr is zero and the other nonzero. Ensure that the field used points to accessible storage.;
MQRC_AUTH_INFO_TYPE_ERROR;2386;0952;RC2386;On an MQCONNX call, the AuthInfoType field in an MQAIR record specifies a value that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify MQAIT_CRL_LDAP for AuthInfoType.;
MQRC_BACKED_OUT;2003;07D3;RC2003;The current unit of work encountered a fatal error or was backed out. This occurs in the following cases: On an MQCMIT or MQDISC call, when the commit operation has failed and the unit of work has been backed out. All resources that participated in the unit of work have been returned to their state at the start of the unit of work. The MQCMIT or MQDISC call completes with MQCC_WARNING in this case. On z/OS®, this reason code occurs only for batch applications. On an MQGET, MQPUT, or MQPUT1 call that is operating within a unit of work, when the unit of work has already encountered an error that prevents the unit of work being committed (for example, when the log space is exhausted). The application must issue the appropriate call to back out the unit of work. (For a unit of work coordinated by the queue manager, this call is the MQBACK call, although the MQCMIT call has the same effect in these circumstances.) The MQGET, MQPUT, or MQPUT1 call completes with MQCC_FAILED in this case. On z/OS, this case does not occur.;MQCC_WARNING or MQCC_FAILED;Check the returns from previous calls to the queue manager. For example, a previous MQPUT call may have failed.;
MQRC_BACKOUT_THRESHOLD_REACHED;2362;093A;RC2362;This reason code occurs only in the Reason field in an MQDLH structure, or in the Feedback field in the MQMD of a report message.;A JMS ConnectionConsumer found a message that exceeds the queue’s backout threshold. The queue does not have a backout requeue queue defined, so the message was processed as specified by the disposition options in the Report field in the MQMD of the message.;On queue managers that do not support the BackoutThreshold and BackoutRequeueQName queue attributes, JMS ConnectionConsumer uses a value of 20 for the backout threshold. When the BackoutCount of a message reaches this threshold, the message is processed as specified by the disposition options.;If the Report field specifies one of the MQRO_EXCEPTION_* options, this reason code appears in the Feedback field of the report message. If the Report field specifies MQRO_DEAD_LETTER_Q, or the disposition report options are left as default, this reason code appears in the Reason field of the MQDLH.;None;Investigate the cause of the backout count being greater than the threshold. To correct this, define the backout queue for the queue concerned.;
MQRC_BAG_CONVERSION_ERROR;2303;08FF;RC2303;The mqBufferToBag or mqGetBag call was issued, but the data in the buffer or message could not be converted into a bag. This occurs when the data to be converted is not valid PCF.;MQCC_FAILED;Check the logic of the application that created the buffer or message to ensure that the buffer or message contains valid PCF.;If the message contains PCF that is not valid, the message cannot be retrieved using the mqGetBag call: If one of the MQGMO_BROWSE_* options was specified, the message remains on the queue and can be retrieved using the MQGET call. In other cases, the message has already been removed from the queue and discarded. If the message was retrieved within a unit of work, the unit of work can be backed out and the message retrieved using the MQGET call.;
MQRC_BAG_WRONG_TYPE;2326;0916;RC2326;The Bag parameter specifies the handle of a bag that has the wrong type for the call. The bag must be an administration bag, that is, it must be created with the MQCBO_ADMIN_BAG option specified on the mqCreateBag call.;MQCC_FAILED;Specify the MQCBO_ADMIN_BAG option when the bag is created.;
MQRC_BINARY_DATA_LENGTH_ERROR;6111;17DF;RC6111;The length of the binary data is inconsistent with the length of the target attribute. Zero is a correct length for all attributes. The correct length for an accounting token is MQ_ACCOUNTING_TOKEN_LENGTH. The correct length for an alternate security id is MQ_SECURITY_ID_LENGTH. The correct length for a correlation id is MQ_CORREL_ID_LENGTH. The correct length for a facility token is MQ_FACILITY_LENGTH. The correct length for a group id is MQ_GROUP_ID_LENGTH. The correct length for a message id is MQ_MSG_ID_LENGTH. The correct length for an instance id is MQ_OBJECT_INSTANCE_ID_LENGTH. The correct length for a transaction instance id is MQ_TRAN_INSTANCE_ID_LENGTH. The correct length for a message token is MQ_MSG_TOKEN_LENGTH.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_BMHO_ERROR;2489;09B9;RC2489;On an MQBUFMH call, the buffer to message handle options structure MQBMHO is not valid, for one of the following reasons: • The StrucId field is not MQBMHO_STRUC_ID. • The Version field specifies a value that is not valid or not supported. • The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQBMHO structure are set correctly.;
MQRC_BO_ERROR;2134;0856;RC2134;On an MQBEGIN call, the begin-options structure MQBO is not valid, for one of the following reasons: The StrucId field is not MQBO_STRUC_ID. The Version field is not MQBO_VERSION_1. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that input fields in the MQBO structure are set correctly.;
MQRC_BRIDGE_STARTED;2125;084D;RC2125;The IMS™ bridge has been started.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_BRIDGE_STOPPED;2126;084E;RC2126;The IMS™ bridge has been stopped.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_BUFFER_ERROR;2004;07D4;RC2004;The Buffer parameter is not valid for one of the following reasons: The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The parameter pointer points to storage that cannot be accessed for the entire length specified by BufferLength. For calls where Buffer is an output parameter: the parameter pointer points to read-only storage.;MQCC_FAILED;Correct the parameter.;
MQRC_BUFFER_LENGTH_ERROR;2005;07D5;RC2005;The BufferLength parameter is not valid, or the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);This reason can also be returned to an MQ client program on the MQCONN or MQCONNX call if the negotiated maximum message size for the channel is smaller than the fixed part of any call structure.;This reason should also be returned by the MQZ_ENUMERATE_AUTHORITY_DATA installable service component when the AuthorityBuffer parameter is too small to accommodate the data to be returned to the invoker of the service component.;MQCC_FAILED;Specify a value that is zero or greater. For the mqAddString and mqSetString calls, the special value MQBL_NULL_TERMINATED is also valid.;
MQRC_BUFFER_NOT_AUTOMATIC;6112;17E0;RC6112;A user-defined (and managed) buffer cannot be resized. A user-defined buffer can only be replaced or withdrawn. A buffer must be automatic (system-managed) before it can be resized.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;
MQRC_CALLBACK_LINK_ERROR;2487;09B7;RC2487;On an MQCTL call, the callback handling module (CSQBMCSM or CSQBMCSX for batch and CSQCMCSM for CICS) could not be loaded, so the adapter could not link to it.;This reason code occurs only on z/OS.;MQCC_FAILED;Ensure that the correct library concatenation has been specified in the application program execution JCL, and in the queue-manager startup JCL. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_CALLBACK_NOT_REGISTERED;2448;0990;RC2448;An attempt to issue an MQCB call has been made against an object handle which does not currently have a registered callback.;MQCC_FAILED;Ensure that a callback has been registered against the object handle.;
MQRC_CALLBACK_ROUTINE_ERROR;2486;09B6;RC2486;An MQCB call was made with an Operation of MQOP_REGISTER failed for one of the following reasons: Both CallbackName and CallbackFunction are specified. Only one must be specified on the call. The call was made from an environment not supporting function pointers. CICS on z/OS A programming language that does not support Function pointer references.;MQCC_FAILED;Ensure that the CallbackName value is specified correctly.;
MQRC_CALLBACK_TYPE_ERROR;2483;09B3;RC2483;An MQCB call was made with an Operation of MQOP_REGISTER with an incorrect value for CallbackType;MQCC_FAILED;Ensure that the CallbackType field of the MQCBDO is specified correctly.;
MQRC_CALL_IN_PROGRESS;2219;08AB;RC2219;The application issued an MQI call whilst another MQI call was already being processed for that connection. Only one call per application connection can be processed at a time.;Concurrent calls can arise when an application uses multiple threads, or when an exit is invoked as part of the processing of an MQI call. For example, a data-conversion exit invoked as part of the processing of the MQGET call may try to issue an MQI call. On z/OS®, concurrent calls can arise only with batch or IMS™ applications; an example is when a subtask ends while an MQI call is in progress (for example, an MQGET that is waiting), and there is an end-of-task exit routine that issues another MQI call. On Windows, concurrent calls can also arise if an MQI call is issued in response to a user message while another MQI call is in progress. If the application is using multiple threads with shared handles, MQRC_CALL_IN_PROGRESS occurs when the handle specified on the call is already in use by another thread and MQCNO_HANDLE_SHARE_NO_BLOCK was specified on the MQCONNX call.;MQCC_FAILED;Ensure that an MQI call cannot be issued while another one is active. Do not issue MQI calls from within a data-conversion exit. On z/OS, if you want to provide a subtask to allow an application that is waiting for a message to arrive to be canceled, wait for the message by using MQGET with MQGMO_SET_SIGNAL, rather than MQGMO_WAIT.;
MQRC_CBD_ERROR;2444;098C;RC2444;a MQCB call the MQCBD structure is not valid for one of the following reasons: The StrucId field is not MQCBD_STRUC_ID The Version field is specifies a value that is not valid or is not supported The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQCBD structure are set correctly.;
MQRC_CBD_OPTIONS_ERROR;2484;09B4;RC2484;An MQCB call was made with an Operation of MQOP_REGISTER with an incorrect value for the Options field of the MQCBD.;MQCC_FAILED;Ensure that the Options are specified correctly.;
MQRC_CD_ERROR;2277;08E5;RC2277;An MQCONNX call was issued to connect to a queue manager, but the MQCD channel definition structure addressed by the ClientConnOffset or ClientConnPtr field in MQCNO contains data that is not valid. Consult the error log for more information about the nature of the error.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that input fields in the MQCD structure are set correctly.;
MQRC_CFBF_ERROR;2422;0976;RC2422;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFBF structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFBS_ERROR;2395;095B;RC2395;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFBS structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFGR_ERROR;2416;0970;RC2416;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFGR structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFH_ERROR;2235;08BB;RC2235;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFH structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFIF_ERROR;2414;096E;RC2414;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFIF structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFIL_ERROR;2236;08BC;RC2236;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFIL or MQRCFIL64 structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFIN_ERROR;2237;08BD;RC2237;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFIN or MQCFIN64 structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFSF_ERROR;2415;096F;RC2415;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFSF structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFSL_ERROR;2238;08BE;RC2238;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFSL structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CFST_ERROR;2239;08BF;RC2239;An MQPUT or MQPUT1 call was issued, but the message data contains an MQCFST structure that is not valid.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_CF_NOT_AVAILABLE;2345;0929;RC2345;An MQOPEN or MQPUT1 call was issued to access a shared queue, but the allocation of the coupling-facility structure specified in the queue definition failed because there is no suitable coupling facility to hold the structure, based on the preference list in the active CFRM policy.;This reason code can also occur when the API call requires a capability that is not supported by the CF level defined in the coupling-facility structure object. For example, this reason code is returned by an attempt to open a shared queue that has a index type of MQIT_GROUP_ID, but the coupling-facility structure for the queue has a CF level lower than three.;This reason code occurs only on z/OS®.;MQCC_FAILED;Make available a coupling facility with one of the names specified in the CFRM policy, or modify the CFRM policy to specify the names of coupling facilities that are available.;
MQRC_CF_STRUC_AUTH_FAILED;2348;092C;RC2348;An MQOPEN or MQPUT1 call was issued to access a shared queue, but the call failed because the user is not authorized to access the coupling-facility structure specified in the queue definition.;This reason code occurs only on z/OS®.;MQCC_FAILED;Modify the security profile for the user identifier used by the application so that the application can access the coupling-facility structure specified in the queue definition.;
MQRC_CF_STRUC_ERROR;2349;092D;RC2349;An MQOPEN or MQPUT1 call was issued to access a shared queue, but the call failed because the coupling-facility structure name specified in the queue definition is not defined in the CFRM data set, or is not the name of a list structure.;This reason code occurs only on z/OS®.;MQCC_FAILED;Modify the queue definition to specify the name of a coupling-facility list structure that is defined in the CFRM data set.;
MQRC_CF_STRUC_FAILED;2373;0945;RC2373;An MQI call or command was issued to access a shared queue, but the call failed because the coupling-facility structure used for the shared queue had failed.;This reason code occurs only on z/OS®.;MQCC_FAILED;Report the problem to the operator or administrator, who should use the MQSC command RECOVER CFSTRUCT to initiate recovery of the coupling-facility structure;
MQRC_CF_STRUC_IN_USE;2346;092A;RC2346;An MQI call or command was issued to operate on a shared queue, but the call failed because the coupling-facility structure specified in the queue definition is unavailable. The coupling-facility structure can be unavailable because a structure dump is in progress, or new connectors to the structure are currently inhibited, or an existing connector to the structure failed or disconnected abnormally and clean-up is not yet complete.;This reason code occurs only on z/OS®.;MQCC_FAILED;Typically, this is a temporary problem: wait for a while then retry the operation.;If the problem does not resolve itself, then connectivity problems experienced during the recovery of structures in the coupling facility could have occurred. In this case, restart the queue manager which reported the error. Resolve all the connectivity problems concerning the coupling facility before restarting the queue manager.;
MQRC_CF_STRUC_LIST_HDR_IN_USE;2347;092B;RC2347;An MQGET, MQOPEN, MQPUT1, or MQSET call was issued to access a shared queue, but the call failed because the list header associated with the coupling-facility structure specified in the queue definition is temporarily unavailable. The list header is unavailable because it is undergoing recovery processing.;This reason code occurs only on z/OS®.;MQCC_FAILED;The problem is temporary; wait a short while and then retry the operation.;
MQRC_CHANNEL_ACTIVATED;2295;08F7;RC2295;This condition is detected when a channel that has been waiting to become active, and for which a Channel Not Activated event has been generated, is now able to become active because an active slot has been released by another channel.;This event is not generated for a channel that is able to become active without waiting for an active slot to be released.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_AUTO_DEF_ERROR;2234;08BA;RC2234;This condition is detected when the automatic definition of a channel fails; this may be because an error occurred during the definition process, or because the channel automatic-definition exit inhibited the definition. Additional information is returned in the event message indicating the reason for the failure.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING;Examine the additional information returned in the event message to determine the reason for the failure.;
MQRC_CHANNEL_AUTO_DEF_OK;2233;08B9;RC2233;This condition is detected when the automatic definition of a channel is successful. The channel is defined by the MCA.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_CONFIG_ERROR;2539;09EB;RC2539;An MQCONN call was issued from a client to connect to a queue manager but the attempt to establish communication failed. Common causes of this reason code are: The server and client cannot agree on the channel attributes to use. There are errors in one or both of the QM.INI or MQCLIENT.INI configuration files. The server machine does not support the code page used by the client.;MQCC_FAILED;Examine the queue manager and client error logs for messages explaining the cause of the problem.;
MQRC_CHANNEL_CONV_ERROR;2284;08EC;RC2284;This condition is detected when a channel is unable to do data conversion and the MQGET call to get a message from the transmission queue resulted in a data conversion error. The conversion reason code identifies the reason for the failure.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_NOT_ACTIVATED;2296;08F8;RC2296;This condition is detected when a channel is required to become active, either because it is starting or because it is about to make another attempt to establish connection with its partner. However, it is unable to do so because the limit on the number of active channels has been reached. On z/OS®, the maximum number of active channels is given by the ACTCHL queue manager attribute. In other environments, the maximum number of active channels is given by the MaxActiveChannels parameter in the qm.ini file. The channel waits until it is able to take over an active slot released when another channel ceases to be active. At that time a Channel Activated event is generated.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_NOT_AVAILABLE;2537;09E9;RC2537;An MQCONN call was issued from a client to connect to a queue manager but the channel is not currently available. Common causes of this reason code are: The channel is currently in stopped state. The channel has been stopped by a channel exit. The queue manager has reached its maximum allowable limit for this channel from this client. The queue manager has reached its maximum allowable limit for this channel. The queue manager has reached its maximum allowable limit for all channels.;MQCC_FAILED;Examine the queue manager and client error logs for messages explaining the cause of the problem.;
MQRC_CHANNEL_SSL_ERROR;2371;0943;RC2371;This condition is detected when a connection cannot be established due to an SSL key-exchange or authentication failure.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_SSL_WARNING;2552;09F8;RC2552;
MQRC_CHANNEL_STARTED;2282;08EA;RC2282;One of the following has occurred: An operator has issued a Start Channel command. An instance of a channel has been successfully established. This condition is detected when Initial Data negotiation is complete and resynchronization has been performed where necessary such that message transfer can proceed.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_STOPPED;2283;08EB;RC2283;This condition is detected when the channel has been stopped. The reason qualifier identifies the reasons for stopping.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHANNEL_STOPPED_BY_USER;2279;08E7;RC2279;This condition is detected when the channel has been stopped by an operator. The reason qualifier identifies the reasons for stopping.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CHAR_ATTRS_ERROR;2007;07D7;RC2007;CharAttrs is not valid. The parameter pointer is not valid, or points to read-only storage for MQINQ calls or to storage that is not as long as implied by CharAttrLength. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_CHAR_ATTRS_TOO_SHORT;2008;07D8;RC2008;For MQINQ calls, CharAttrLength is not large enough to contain all of the character attributes for which MQCA_* selectors are specified in the Selectors parameter.;The call still completes, with the CharAttrs parameter string filled in with as many character attributes as there is room for. Only complete attribute strings are returned: if there is insufficient space remaining to accommodate an attribute in its entirety, that attribute and subsequent character attributes are omitted. Any space at the end of the string not used to hold an attribute is unchanged.;An attribute that represents a set of values (for example, the namelist Names attribute) is treated as a single entity—either all of its values are returned, or none.;MQCC_WARNING;Specify a large enough value, unless only a subset of the values is needed.;
MQRC_CHAR_ATTR_LENGTH_ERROR;2006;07D6;RC2006;CharAttrLength is negative (for MQINQ or MQSET calls), or is not large enough to hold all selected attributes (MQSET calls only). This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify a value large enough to hold the concatenated strings for all selected attributes.;
MQRC_CHAR_CONVERSION_ERROR;2340;0924;RC2340;This reason code is returned by the Java MQQueueManager constructor when a required character-set conversion is not available. The conversion required is between two nonUnicode character sets.;This reason code occurs in the following environment: MQ Classes for Java on z/OS®.;MQCC_FAILED;Ensure that the National Language Resources component of the z/OS Language Environment® is installed, and that conversion between the IBM-1047 and ISO8859-1 character sets is available.;
MQRC_CICS_BRIDGE_RESTRICTION;2187;088B;RC2187;It is not permitted to issue MQI calls from user transactions that are run in an MQ/CICS-bridge environment where the bridge exit also issues MQI calls. The MQI call fails. If this occurs in the bridge exit, it will result in a transaction abend. If it occurs in the user transaction, this may result in a transaction abend.;This reason code occurs only on z/OS®.;MQCC_FAILED;The transaction cannot be run using the MQ/CICS bridge. Refer to the appropriate CICS® manual for information about restrictions in the MQ/CICS bridge environment.;
MQRC_CICS_WAIT_FAILED;2140;085C;RC2140;On any MQI call, the CICS® adapter issued an EXEC CICS WAIT request, but the request was rejected by CICS.;This reason code occurs only on z/OS®.;MQCC_FAILED;Examine the CICS trace data for actual response codes. The most likely cause is that the task has been canceled by the operator or by the system.;
MQRC_CLIENT_CHANNEL_CONFLICT;2423;0977;RC2423;A client channel definition table was specified for determining the name of the channel, but the name has already been defined.;This reason code occurs only with Java applications.;MQCC_FAILED;Change the channel name to blank and try again.;
MQRC_CLIENT_CONN_ERROR;2278;08E6;RC2278;An MQCONNX call was issued to connect to a queue manager, but the MQCD channel definition structure is not specified correctly. One of the following applies: ClientConnOffset is not zero and ClientConnPtr is not zero and not the null pointer. ClientConnPtr is not a valid pointer. ClientConnPtr or ClientConnOffset points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems. It also occurs in Java applications when a client channel definition table is specified to determine the name of the channel, but the table itself cannot be found.;MQCC_FAILED;Ensure that at least one of ClientConnOffset and ClientConnPtr is zero. Ensure that the field used points to accessible storage. Ensure that the URL of the client channel definition table is correct.;
MQRC_CLIENT_EXIT_ERROR;2407;0967;RC2407;A failure occured while executing a non-Java user exit for a client connection.;This reason code occurs only with Java applications.;MQCC_FAILED;Check that the non-Java user exit can accept the parameters and message being passed to it and that it can handle error conditions, and that any information that the exit requires, such as user data, is correct and available.;
MQRC_CLIENT_EXIT_LOAD_ERROR;2406;0966;RC2406;The external user exit required for a client connection could not be loaded because the shared library specified for it cannot be found, or the entry point specified for it cannot be found.;This reason code occurs only with Java applications.;MQCC_FAILED;Ensure that the correct library has been specified, and that the path variable for the machine environment includes the relevant directory. Ensure also that the entry point has been named properly and that the named library does export it.;
MQRC_CLUSTER_EXIT_ERROR;2266;08DA;RC2266;An MQOPEN, MQPUT, or MQPUT1 call was issued to open or put a message on a cluster queue, but the cluster workload exit defined by the queue-manager's ClusterWorkloadExit attribute failed unexpectedly or did not respond in time. Subsequent MQOPEN, MQPUT, and MQPUT1 calls for this queue handle are processed as though the ClusterWorkloadExit attribute were blank. On z/OS®, a message giving more information about the error is written to the system log, for example message CSQV455E or CSQV456E.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check the cluster workload exit to ensure that it has been written correctly.;
MQRC_CLUSTER_EXIT_LOAD_ERROR;2267;08DB;RC2267;An MQCONN or MQCONNX call was issued to connect to a queue manager, but the queue manager was unable to load the cluster workload exit. Execution continues without the cluster workload exit. On z/OS®, if the cluster workload exit cannot be loaded, a message is written to the system log, for example message CSQV453I. Processing continues as though the ClusterWorkloadExit attribute had been blank.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING;Ensure that the queue-manager's ClusterWorkloadExit attribute has the correct value, and that the exit has been installed into the correct location.;
MQRC_CLUSTER_PUT_INHIBITED;2268;08DC;RC2268;An MQOPEN call with the MQOO_OUTPUT and MQOO_BIND_ON_OPEN options in effect was issued for a cluster queue, but the call failed because all of the following are true: All instances of the cluster queue are currently put-inhibited (that is, all of the queue instances have the InhibitPut attribute set to MQQA_PUT_INHIBITED). There is no local instance of the queue. (If there is a local instance, the MQOPEN call succeeds, even if the local instance is put-inhibited.) There is no cluster workload exit for the queue, or there is a cluster workload exit but it did not choose a queue instance. (If the cluster workload exit does choose a queue instance, the MQOPEN call succeeds, even if that instance is put-inhibited.);If the MQOO_BIND_NOT_FIXED option is specified on the MQOPEN call, the call can succeed even if all of the queues in the cluster are put-inhibited. However, a subsequent MQPUT call may fail if all of the queues are still put-inhibited at the time of the MQPUT call.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;If the system design allows put requests to be inhibited for short periods, retry the operation later. If the problem persists, determine why all of the queues in the cluster are put-inhibited.;
MQRC_CLUSTER_RESOLUTION_ERROR;2189;088D;RC2189;An MQOPEN, MQPUT, or MQPUT1 call was issued to open or put a message on a cluster queue, but the queue definition could not be resolved correctly because a response was required from the repository manager but none was available.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the repository manager is operating and that the queue and channel definitions are correct.;
MQRC_CLUSTER_RESOURCE_ERROR;2269;08DD;RC2269;An MQOPEN, MQPUT, or MQPUT1 call was issued for a cluster queue, but an error occurred whilst trying to use a resource required for clustering.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Do the following: Check that the SYSTEM.CLUSTER.* queues are not put inhibited or full. Check the event queues for any events relating to the SYSTEM.CLUSTER.* queues, as these may give guidance as to the nature of the failure. Check that the repository queue manager is available. On z/OS, check the console for signs of the failure, such as full page sets.;
MQRC_CMD_SERVER_NOT_AVAILABLE;2322;0912;RC2322;The command server that processes administration commands is not available.;MQCC_FAILED;Start the command server.;
MQRC_CMHO_ERROR;2461;099D;RC2461;On an MQCRTMH call, the create message handle options structure MQCMHO is not valid, for one of the following reasons: The StrucId field is not MQCMHO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQCMHO structure are set correctly.;
MQRC_CNO_ERROR;2139;085B;RC2139;On an MQCONNX call, the connect-options structure MQCNO is not valid, for one of the following reasons: The StrucId field is not MQCNO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the parameter pointer points to read-only storage.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that input fields in the MQCNO structure are set correctly.;
MQRC_CODED_CHAR_SET_ID_ERROR;2330;091A;RC2330;The CodedCharSetId parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_COD_NOT_VALID_FOR_XCF_Q;2106;083A;RC2106;An MQPUT or MQPUT1 call was issued, but the Report field in the message descriptor MQMD specifies one of the MQRO_COD_* options and the target queue is an XCF queue. MQRO_COD_* options cannot be specified for XCF queues.;This reason code occurs only on z/OS®.;MQCC_FAILED;Remove the relevant MQRO_COD_* option.;
MQRC_COMMAND_MQSC;2412;096C;RC2412;This condition is detected when an MQSC command is executed.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_COMMAND_PCF;2413;096D;RC2413;This condition is detected when a PCF command is executed.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_COMMAND_TYPE_ERROR;2300;08FC;RC2300;The mqExecute call was issued, but the value of the MQIASY_TYPE data item in the administration bag is not MQCFT_COMMAND.;MQCC_FAILED;Ensure that the MQIASY_TYPE data item in the administration bag has the value MQCFT_COMMAND.;
MQRC_CONFIG_CHANGE_OBJECT;2368;0940;RC2368;This condition is detected when an object is changed.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CONFIG_CREATE_OBJECT;2367;093F;RC2367;This condition is detected when an object is created.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CONFIG_DELETE_OBJECT;2369;0941;RC2369;This condition is detected when an object is deleted.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CONFIG_REFRESH_OBJECT;2370;0942;RC2370;This condition is detected when an object is refreshed.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_CONNECTION_BROKEN;2009;07D9;RC2009;Connection to the queue manager has been lost. This can occur because the queue manager has ended. If the call is an MQGET call with the MQGMO_WAIT option, the wait has been canceled. All connection and object handles are now invalid.;For MQ client applications, it is possible that the call did complete successfully, even though this reason code is returned with a CompCode of MQCC_FAILED.;MQCC_FAILED;Applications can attempt to reconnect to the queue manager by issuing the MQCONN or MQCONNX call. It may be necessary to poll until a successful response is received. On z/OS® for CICS® applications, it is not necessary to issue the MQCONN or MQCONNX call, because CICS applications are connected automatically.;Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_CONNECTION_ERROR;2273;08E1;RC2273;An MQCONN or MQCONNX call failed for one of the following reasons: The installation and customization options chosen for WebSphere® MQ do not allow connection by the type of application being used. The system parameter module is not at the same release level as the queue manager. The channel initiator is not at the same release level as the queue manager. An internal error was detected by the queue manager.;MQCC_FAILED;None, if the installation and customization options chosen for WebSphere MQ do not allow all functions to be used.;Otherwise, if this occurs while starting the channel initiator, ensure that the queue manager and the channel initiator are both at the same release level and that their started task JCL procedures both specify the same level of WebSphere MQ program libraries; if this occurs while starting the queue manager, relinkedit the system parameter module (CSQZPARM) to ensure that it is at the correct level. If the problem persists, contact your IBM® support center.;
MQRC_CONNECTION_NOT_AUTHORIZED;2217;08A9;RC2217;This reason code arises only for CICS® applications. For these, connection to the queue manager is done by the adapter. If that connection fails because the CICS subsystem is not authorized to connect to the queue manager, this reason code is issued whenever an application running under that subsystem subsequently issues an MQI call.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the subsystem is authorized to connect to the queue manager.;
MQRC_CONNECTION_QUIESCING;2202;089A;RC2202;This reason code is issued when the connection to the queue manager is in quiescing state, and an application issues one of the following calls: MQCONN or MQCONNX MQOPEN, with no connection established, or with MQOO_FAIL_IF_QUIESCING included in the Options parameter MQGET, with MQGMO_FAIL_IF_QUIESCING included in the Options field of the GetMsgOpts parameter MQPUT or MQPUT1, with MQPMO_FAIL_IF_QUIESCING included in the Options field of the PutMsgOpts parameter;MQRC_CONNECTION_QUIESCING is also issued by the message channel agent (MCA) when the queue manager is in quiescing state.;MQCC_FAILED;The application should tidy up and terminate. Any uncommitted changes in a unit of work should be backed out.;
MQRC_CONNECTION_STOPPED;2528;09E0;RC2528;An MQCTL call was issued to start the asynchronous consumption of messages, but before the connection was ready to consume messages it was stopped by one of the message consumers.;MQCC_FAILED;If this is an expected condition, no corrective action required. If this is an unexpected condition check whether an MQCTL with Operation MQOP_STOP was issued during the MQCBCT_START callback function.;
MQRC_CONNECTION_STOPPING;2203;089B;RC2203;This reason code is issued when the connection to the queue manager is shutting down, and the application issues an MQI call. No more message-queuing calls can be issued. For the MQGET call, if the MQGMO_WAIT option was specified, the wait is canceled.;Note that the MQRC_CONNECTION_BROKEN reason may be returned instead if, as a result of system scheduling factors, the queue manager shuts down before the call completes.;MQRC_CONNECTION_STOPPING is also issued by the message channel agent (MCA) when the queue manager is shutting down.;For MQ client applications, it is possible that the call did complete successfully, even though this reason code is returned with a CompCode of MQCC_FAILED.;MQCC_FAILED;The application should tidy up and terminate. Any uncommitted changes in a unit of work should be backed out. A unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_CONNECTION_SUSPENDED;2521;09D9;RC2521;An MQCTL call with Operation MQOP_START_WAIT has returned because the asynchronous consumption of messages has been suspended. This can be for the following reasons: The connection was explicitly suspended using MQCTL with Operation MQOP_SUSPEND All consumers have been either unregistered or suspended.;MQCC_WARNING;If this is an expected condition, no corrective action required. If this is an unexpected condition check that: At least one consumer is registered and not suspended The connection has not been suspended;
MQRC_CONN_ID_IN_USE;2160;0870;RC2160;On an MQCONN call, the connection identifier assigned by the queue manager to the connection between a CICS® or IMS™ allied address space and the queue manager conflicts with the connection identifier of another connected CICS or IMS system. The connection identifier assigned is as follows: For CICS, the applid For IMS, the IMSID parameter on the IMSCTRL (sysgen) macro, or the IMSID parameter on the execution parameter (EXEC card in IMS control region JCL) For batch, the job name For TSO, the user ID;A conflict arises only if there are two CICS systems, two IMS systems, or one each of CICS and IMS, having the same connection identifiers. Batch and TSO connections need not have unique identifiers.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the naming conventions used in different systems that might connect to the queue manager do not conflict.;
MQRC_CONN_TAG_IN_USE;2271;08DF;RC2271;An MQCONNX call was issued specifying one of the MQCNO_*_CONN_TAG_* options, but the call failed because the connection tag specified by ConnTag in MQCNO is in use by an active process or thread, or there is an unresolved unit of work that references this connection tag.;This reason code occurs only on z/OS®.;MQCC_FAILED;The problem is likely to be transitory. The application should wait a short while and then retry the operation.;
MQRC_CONN_TAG_NOT_RELEASED;2344;0928;RC2344;An MQDISC call was issued when there was a unit of work outstanding for the connection handle. For CICS®, IMS™, and RRS connections, the MQDISC call does not commit or back out the unit of work. As a result, the connection tag associated with the unit of work is not yet available for reuse. The tag becomes available for reuse only when processing of the unit of work has been completed.;This reason code occurs only on z/OS®.;MQCC_WARNING;Do not try to reuse the connection tag immediately. If the MQCONNX call is issued with the same connection tag, and that tag is still in use, the call fails with reason code MQRC_CONN_TAG_IN_USE.;
MQRC_CONN_TAG_NOT_USABLE;2350;092E;RC2350;An MQCONNX call was issued specifying one of the MQCNO_*_CONN_TAG_* options, but the call failed because the connection tag specified by ConnTag in MQCNO is being used by the queue manager for recovery processing, and this processing is delayed pending recovery of the coupling facility.;This reason code occurs only on z/OS®.;MQCC_FAILED;The problem is likely to persist. Consult the system programmer to ascertain the cause of the problem.;
MQRC_CONTEXT_HANDLE_ERROR;2097;0831;RC2097;On an MQPUT or MQPUT1 call, MQPMO_PASS_IDENTITY_CONTEXT or MQPMO_PASS_ALL_CONTEXT was specified, but the handle specified in the Context field of the PutMsgOpts parameter is either not a valid queue handle, or it is a valid queue handle but the queue was not opened with MQOO_SAVE_ALL_CONTEXT.;MQCC_FAILED;Specify MQOO_SAVE_ALL_CONTEXT when the queue referred to is opened.;
MQRC_CONTEXT_NOT_AVAILABLE;2098;0832;RC2098;On an MQPUT or MQPUT1 call, MQPMO_PASS_IDENTITY_CONTEXT or MQPMO_PASS_ALL_CONTEXT was specified, but the queue handle specified in the Context field of the PutMsgOpts parameter has no context associated with it. This arises if no message has yet been successfully retrieved with the queue handle referred to, or if the last successful MQGET call was a browse.;This condition does not arise if the message that was last retrieved had no context associated with it. On z/OS®, if a message is received by a message channel agent that is putting messages with the authority of the user identifier in the message, this code is returned in the Feedback field of an exception report if the message has no context associated with it.;MQCC_FAILED;Ensure that a successful nonbrowse get call has been issued with the queue handle referred to.;
MQRC_CONTEXT_OBJECT_NOT_VALID;6121;17E9;RC6121;The ImqPutMessageOptions context reference does not reference a valid ImqQueue object. The object has been previously destroyed.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_CONTEXT_OPEN_ERROR;6122;17EA;RC6122;The ImqPutMessageOptions context reference references an ImqQueue object that could not be opened to establish a context. This may be because the ImqQueue object has inappropriate open options. Inspect the referenced object reason code to establish the cause.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_CONVERTED_MSG_TOO_BIG;2120;0848;RC2120;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the message data expanded during data conversion and exceeded the size of the buffer provided by the application. However, the message had already been removed from the queue because prior to conversion the message data could be accommodated in the application buffer without truncation.;The message is returned unconverted, with the CompCode parameter of the MQGET call set to MQCC_WARNING. If the message consists of several parts, each of which is described by its own character-set and encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various character-set and encoding fields always correctly describe the relevant message data.;This reason can also occur on the MQXCNVC call, when the TargetBuffer parameter is too small too accommodate the converted string, and the string has been truncated to fit in the buffer. The length of valid data returned is given by the DataLength parameter; in the case of a DBCS string or mixed SBCS/DBCS string, this length may be less than the length of TargetBuffer.;MQCC_WARNING;For the MQGET call, check that the exit is converting the message data correctly and setting the output length DataLength to the appropriate value. If it is, the application issuing the MQGET call must provide a larger buffer for the Buffer parameter.;For the MQXCNVC call, if the string must be converted without truncation, provide a larger output buffer.;
MQRC_CONVERTED_STRING_TOO_BIG;2190;088E;RC2190;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, a string in a fixed-length field in the message expanded during data conversion and exceeded the size of the field. When this happens, the queue manager tries discarding trailing blank characters and characters following the first null character in order to make the string fit, but in this case there were insufficient characters that could be discarded.;This reason code can also occur for messages with a format name of MQFMT_IMS_VAR_STRING. When this happens, it indicates that the IMS™ variable string expanded such that its length exceeded the capacity of the 2-byte binary length field contained within the structure of the IMS variable string. (The queue manager never discards trailing blanks in an IMS variable string.);The message is returned unconverted, with the CompCode parameter of the MQGET call set to MQCC_WARNING. If the message consists of several parts, each of which is described by its own character-set and encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various character-set and encoding fields always correctly describe the relevant message data.;This reason code does not occur if the string could be made to fit by discarding trailing blank characters.;MQCC_WARNING;Check that the fields in the message contain the correct values, and that the character-set identifiers specified by the sender and receiver of the message are correct. If they are, the layout of the data in the message must be modified to increase the lengths of the field(s) so that there is sufficient space to allow the string(s) to expand when converted.;
MQRC_CORREL_ID_ERROR;2207;089F;RC2207;An MQGET call was issued to retrieve a message using the correlation identifier as a selection criterion, but the call failed because selection by correlation identifier is not supported on this queue. On z/OS®, the queue is a shared queue, but the IndexType queue attribute does not have an appropriate value: If selection is by correlation identifier alone, IndexType must have the value MQIT_CORREL_ID. If selection is by correlation identifier and message identifier combined, IndexType must have the value MQIT_CORREL_ID or MQIT_MSG_ID. On Compaq NonStop Kernel, a key file is required but has not been defined.;MQCC_FAILED;Do one of the following: On z/OS, change the IndexType queue attribute to MQIT_CORREL_ID. On Compaq NonStop Kernel, define a key file. Modify the application so that it does not use selection by correlation identifier: set the CorrelId field to MQCI_NONE and do not specify MQMO_MATCH_CORREL_ID in MQGMO.;
MQRC_CRYPTO_HARDWARE_ERROR;2382;094E;RC2382;On an MQCONN or MQCONNX call, the configuration string for the cryptographic hardware is not valid, or results in an error when used to configure the cryptographic hardware. The configuration string is specified by one of the following: The value of the MQSSLCRYP environment variable (MQCONN or MQCONNX call), or The value of the CryptoHardware field in the MQSCO structure (MQCONNX call only).;For the MQCONNX call, if both MQSSLCRYP and CryptoHardware are specified, the latter is used.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a valid configuration string for the cryptographic hardware.;
MQRC_CTLO_ERROR;2445;098D;RC2445;On a MQCTL call the MQCTLO structure is not valid for one of the following reasons: The StrucId field is not MQCTLO_STRUC_ID The Version field is specifies a value that is not valid or is not supported The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQCTLO structure are set correctly.;
MQRC_CURRENT_RECORD_ERROR;2357;0935;RC2357;An MQXCLWLN call was issued from a cluster workload exit to obtain the address of the next record in the chain, but the address specified by the CurrentRecord parameter is not the address of a valid record. CurrentRecord must be the address of a destination record (MQWDR), queue record (MQWQR), or cluster record (MQWCR) residing within the cluster cache.;MQCC_FAILED;Ensure that the cluster workload exit passes the address of a valid record residing in the cluster cache.;
MQRC_CURSOR_NOT_VALID;6105;17D9;RC6105;The browse cursor for an open queue has been invalidated since it was last used by an implicit reopen.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Set the ImqObject open options explicitly to cover all eventualities so that implicit reopening is not required.;
MQRC_DATA_LENGTH_ERROR;2010;07DA;RC2010;The DataLength parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);This reason can also be returned to an MQ client program on the MQGET, MQPUT, or MQPUT1 call, if the BufferLength parameter exceeds the maximum message size that was negotiated for the client channel.;MQCC_FAILED;Correct the parameter.;If the error occurs for an MQ client program, also check that the maximum message size for the channel is big enough to accommodate the message being sent; if it is not big enough, increase the maximum message size for the channel.;
MQRC_DATA_TRUNCATED;6115;17E3;RC6115;Data has been truncated when copying from one buffer to another. This might be because the target buffer cannot be resized, or because there is a problem addressing one or other buffer, or because a buffer is being downsized with a smaller replacement.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_DB2_NOT_AVAILABLE;2342;0926;RC2342;An MQOPEN, MQPUT1, or MQSET call, or a command, was issued to access a shared queue, but it failed because the queue manager is not connected to a DB2® subsystem. As a result, the queue manager is unable to access the object definition relating to the shared queue.;This reason code occurs only on z/OS®.;MQCC_FAILED;Configure the DB2 subsystem so that the queue manager can connect to it.;
MQRC_DBCS_ERROR;2150;0866;RC2150;An error was encountered attempting to convert a double-byte character set (DBCS) string. This can occur in the following cases: On the MQXCNVC call, when the SourceCCSID parameter specifies the coded character-set identifier of a double-byte character set, but the SourceBuffer parameter does not contain a valid DBCS string. This may be because the string contains characters that are not valid DBCS characters, or because the string is a mixed SBCS/DBCS string and the shift-out/shift-in characters are not correctly paired. The completion code is MQCC_FAILED in this case. On the MQGET call, when the MQGMO_CONVERT option is specified. In this case it indicates that the MQRC_DBCS_ERROR reason code was returned by an MQXCNVC call issued by the data conversion exit. The completion code is MQCC_WARNING in this case.;MQCC_WARNING or MQCC_FAILED;Specify a valid string.;If the reason code occurs on the MQGET call, check that the data in the message is valid, and that the logic in the data-conversion exit is correct.;
MQRC_DEF_XMIT_Q_TYPE_ERROR;2198;0896;RC2198;An MQOPEN or MQPUT1 call was issued specifying a remote queue as the destination. Either a local definition of the remote queue was specified, or a queue-manager alias was being resolved, but in either case the XmitQName attribute in the local definition is blank.;Because there is no transmission queue defined with the same name as the destination queue manager, the local queue manager has attempted to use the default transmission queue. However, although there is a queue defined by the DefXmitQName queue-manager attribute, it is not a local queue.;MQCC_FAILED;Do one of the following: Specify a local transmission queue as the value of the XmitQName attribute in the local definition of the remote queue. Define a local transmission queue with a name that is the same as that of the remote queue manager. Specify a local transmission queue as the value of the DefXmitQName queue-manager attribute.;See the WebSphere MQ Application Programming Guide for more information.;
MQRC_DEF_XMIT_Q_USAGE_ERROR;2199;0897;RC2199;An MQOPEN or MQPUT1 call was issued specifying a remote queue as the destination. Either a local definition of the remote queue was specified, or a queue-manager alias was being resolved, but in either case the XmitQName attribute in the local definition is blank.;Because there is no transmission queue defined with the same name as the destination queue manager, the local queue manager has attempted to use the default transmission queue. However, the queue defined by the DefXmitQName queue-manager attribute does not have a Usage attribute of MQUS_TRANSMISSION.;This reason code is returned from MQOPEN or MQPUT1, if the queue manager’s Default Transmission Queue is about to be used, but the name of this queue is SYSTEM.CLUSTER.TRANSMIT.QUEUE. This queue is reserved for clustering, so it is not valid to set the queue manager’s Default Transmission Queue to this name.;MQCC_FAILED;Do one of the following: Specify a local transmission queue as the value of the XmitQName attribute in the local definition of the remote queue. Define a local transmission queue with a name that is the same as that of the remote queue manager. Specify a different local transmission queue as the value of the DefXmitQName queue-manager attribute. Change the Usage attribute of the DefXmitQName queue to MQUS_TRANSMISSION.;See the WebSphere MQ Application Programming Guide for more information.;
MQRC_DEST_CLASS_NOT_ALTERABLE;2533;09E5;RC2533;An MQSUB call using option MQSO_ALTER was made changing the use of the MQSO_MANAGED option on the subscription. The destination class of a subscription cannot be changed. When the MQSO_MANAGED option is not used, the queue provided can be changed, but the class of destination (managed or not) cannot be changed.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly, or change the use of the MQSO_MANAGED option used on the MQSUB call so that it matches the existing subscription.;
MQRC_DEST_ENV_ERROR;2263;08D7;RC2263;This reason occurs when a channel exit that processes reference messages detects an error in the destination environment data of a reference message header (MQRMH). One of the following is true: DestEnvLength is less than zero. DestEnvLength is greater than zero, but there is no destination environment data. DestEnvLength is greater than zero, but DestEnvOffset is negative, zero, or less than the length of the fixed part of MQRMH. DestEnvLength is greater than zero, but DestEnvOffset plus DestEnvLength is greater than StrucLength.;The exit returns this reason in the Feedback field of the MQCXP structure. If an exception report is requested, it is copied to the Feedback field of the MQMD associated with the report.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify the destination environment data correctly.;
MQRC_DEST_NAME_ERROR;2264;08D8;RC2264;This reason occurs when a channel exit that processes reference messages detects an error in the destination name data of a reference message header (MQRMH). One of the following is true: DestNameLength is less than zero. DestNameLength is greater than zero, but there is no destination name data. DestNameLength is greater than zero, but DestNameOffset is negative, zero, or less than the length of the fixed part of MQRMH. DestNameLength is greater than zero, but DestNameOffset plus DestNameLength is greater than StrucLength.;The exit returns this reason in the Feedback field of the MQCXP structure. If an exception report is requested, it is copied to the Feedback field of the MQMD associated with the report.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify the destination name data correctly.;
MQRC_DH_ERROR;2135;0857;RC2135;An MQPUT or MQPUT1 call was issued, but the message data contains an MQDH structure that is not valid. Possible errors include the following: The StrucId field is not MQDH_STRUC_ID. The Version field is not MQDH_VERSION_1. The StrucLength field specifies a value that is too small to include the structure plus the arrays of MQOR and MQPMR records. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_DISTRIBUTION_LIST_EMPTY;6126;17EE;RC6126;An ImqDistributionList failed to open because there are no ImqQueue objects referenced.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Establish at least one ImqQueue object in which the distribution list reference addresses the ImqDistributionList object, and retry.;
MQRC_DLH_ERROR;2141;085D;RC2141;An MQPUT or MQPUT1 call was issued, but the message data contains an MQDLH structure that is not valid. Possible errors include the following: The StrucId field is not MQDLH_STRUC_ID. The Version field is not MQDLH_VERSION_1. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_DMHO_ERROR;2462;099E;RC2462;On an MQDLTMH call, the delete message handle options structure MQDMHO is not valid, for one of the following reasons: The StrucId field is not MQCMHO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQDMHO structure are set correctly.;
MQRC_DMPO_ERROR;2481;09B1;RC2481;On an MQDLTMP call, the delete message property options structure MQDMPO is not valid, for one of the following reasons: The StrucId field is not MQDMPO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQDMPO structure are set correctly.;
MQRC_DUPLICATE_GROUP_SUB;2514;09D2;RC2514;An MQSUB call using option MQSO_GROUP_SUB was made creating a new grouped subscription but, although it has a unique SubName, it matches the Full topic name of an existing subscription in the group.;MQCC_FAILED;Correct the Full topic name used so that it does not match any existing subscription in the group, or correct the grouping attributes if, either a different group was intended or the subscription was not intended to be grouped at all.;
MQRC_DUPLICATE_RECOV_COORD;2163;0873;RC2163;On an MQCONN or MQCONNX call, a recovery coordinator already exists for the connection name specified on the connection call issued by the adapter.;A conflict arises only if there are two CICS® systems, two IMS™ systems, or one each of CICS and IMS, having the same connection identifiers. Batch and TSO connections need not have unique identifiers.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the naming conventions used in different systems that might connect to the queue manager do not conflict.;
MQRC_DURABILITY_NOT_ALLOWED;2436;0984;RC2436;An MQSUB call using the MQSO_DURABLE option failed. This can be for one of the following reasons: The topic subscribed to is defined as DURSUB(NO). The queue named SYSTEM.DURABLE.SUBSCRIBER.QUEUE is not available.;MQCC_FAILED;Durable subscriptions are stored on the SYSTEM.DURABLE.SUBSCRIBER.QUEUE. Ensure that this queue is available for use. Possible reasons for failure include the queue being full, the queue being put inhibited, or the queue not existing. If the topic subscribed to is defined as DURSUB(NO) either alter the administrative topic node to use DURSUB(YES) or use the MQSO_NON_DURABLE option instead.;
MQRC_DURABILITY_NOT_ALTERABLE;2509;09CD;RC2509;An MQSUB call using option MQSO_ALTER was made changing the durability of the subscription. The durability of a subscription cannot be changed.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly, or change the durability option used on the MQSUB call so that it matches the existing subscription.;
MQRC_DYNAMIC_Q_NAME_ERROR;2011;07DB;RC2011;On the MQOPEN call, a model queue is specified in the ObjectName field of the ObjDesc parameter, but the DynamicQName field is not valid, for one of the following reasons: DynamicQName is completely blank (or blank up to the first null character in the field). Characters are present that are not valid for a queue name. An asterisk is present beyond the 33rd position (and before any null character). An asterisk is present followed by characters that are not null and not blank.;This reason code can also sometimes occur when a server application opens the reply queue specified by the ReplyToQ and ReplyToQMgr fields in the MQMD of a message that the server has just received. In this case the reason code indicates that the application that sent the original message placed incorrect values into the ReplyToQ and ReplyToQMgr fields in the MQMD of the original message.;MQCC_FAILED;Specify a valid name.;
MQRC_ENCODING_ERROR;6106;17DA;RC6106;The encoding of the (next) message item needs to be MQENC_NATIVE for pasting.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_ENCODING_NOT_SUPPORTED;2308;0904;RC2308;The Encoding field in the message descriptor MQMD contains a value that is not supported: For the mqPutBag call, the field in error resides in the MsgDesc parameter of the call. For the mqGetBag call, the field in error resides in: The MsgDesc parameter of the call if the MQGMO_CONVERT option was specified. The message descriptor of the message about to be retrieved if MQGMO_CONVERT was not specified.;MQCC_FAILED;The value must be MQENC_NATIVE.;If the value of the Encoding field in the message is not valid, the message cannot be retrieved using the mqGetBag call: If one of the MQGMO_BROWSE_* options was specified, the message remains on the queue and can be retrieved using the MQGET call. In other cases, the message has already been removed from the queue and discarded. If the message was retrieved within a unit of work, the unit of work can be backed out and the message retrieved using the MQGET call.;
MQRC_ENVIRONMENT_ERROR;2012;07DC;RC2012;The call is not valid for the current environment. On z/OS®, one of the following applies: An MQCONN or MQCONNX call was issued, but the application has been linked with an adapter that is not supported in the environment in which the application is running. For example, this can arise when the application is linked with the MQ RRS adapter, but the application is running in a DB2® Stored Procedure address space. RRS is not supported in this environment. Stored Procedures wishing to use the MQ RRS adapter must run in a DB2 WLM-managed Stored Procedure address space. An MQCMIT or MQBACK call was issued, but the application has been linked with the RRS batch adapter CSQBRSTB. This adapter does not support the MQCMIT and MQBACK calls. An MQCMIT or MQBACK call was issued in the CICS® or IMS™ environment. The RRS subsystem is not up and running on the z/OS system that ran the application. An MQCTL call with MQOP_START or an MQCB call registering an Event Listener, was issued but the application is not allowed to create a POSIX thread. A WebSphere MQ Java or JMS application has instantiated an MQQueueManager object using client connection options. The z/OS environment only supports bindings connection options. On HP OpenVMS, i5/OS®, Compaq NonStop Kernel, UNIX systems, Linux and Windows, one of the following applies: The application is linked to the wrong libraries (threaded or nonthreaded). An MQBEGIN, MQCMIT, or MQBACK call was issued, but an external unit-of-work manager is in use. For example, this reason code occurs on Windows when an MTS object is running as a DTC transaction. This reason code also occurs if the queue manager does not support units of work. The MQBEGIN call was issued in an MQ client environment. An MQXCLWLN call was issued, but the call did not originate from a cluster workload exit. An MQCONNX call was issued specifying the option MQCNO_HANDLE_SHARE_NONE from within an MQ channel exit, an API Exit, or a Callback function. The reason code occurs only if a shared hConn is bound to the application thread. On Windows, when using the managed .NET client, an attempt was made to use one of the unsupported features: Unmanaged channel exits Secure Sockets Layer (SSL) XA Transactions Communications other than TCP/IP Channel compression;MQCC_FAILED;Do one of the following (as appropriate): On z/OS: Link the application with the correct adapter. Modify the application to use the SRRCMIT and SRRBACK calls in place of the MQCMIT and MQBACK calls. Alternatively, link the application with the RRS batch adapter CSQBRRSI. This adapter supports MQCMIT and MQBACK in addition to SRRCMIT and SRRBACK. For a CICS or IMS application, issue the appropriate CICS or IMS call to commit or backout the unit of work. Start the RRS subsystem on the z/OS system that is running the application. If your application uses Language Environment (LE) ensure that it uses the DLL interface and it runs with POSIX(ON). Ensure that your application is allowed to use Unix System Services (USS). Ensure that your Connection Factory definitions for local z/OS applications and WebSphere Application Server applications use Transport Type with bindings mode connections. In the other environments: Link the application with the correct libraries (threaded or nonthreaded). Remove from the application the call that is not supported.;
MQRC_EPH_ERROR;2420;0974;RC2420;An MQPUT or MQPUT1 call was issued, but the message data contains an MQEPH structure that is not valid. Possible errors include the following: The StrucId field is not MQEPH_STRUC_ID. The Version field is not MQEPH_VERSION_1. The StrucLength field specifies a value that is too small to include the structure plus the variable-length data at the end of the structure. The CodedCharSetId field is zero, or a negative value that is not valid. The Flags field contains an invalid combination of MQEPH_* values. The BufferLength parameter of the call has a value that is too small to accommodate the structure, so the structure extends beyond the end of the message.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value; note that MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field.;
MQRC_EXIT_REASON_ERROR;2377;0949;RC2377;An MQXEP call was issued by an API exit function, but the value specified for the ExitReason parameter is either not valid, or not supported for the specified function identifier Function.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Modify the exit function to specify a value for ExitReason that is valid for the specified value of Function.;
MQRC_EXPIRY_ERROR;2013;07DD;RC2013;On an MQPUT or MQPUT1 call, the value specified for the Expiry field in the message descriptor MQMD is not valid.;MQCC_FAILED;Specify a value that is greater than zero, or the special value MQEI_UNLIMITED.;
MQRC_FEEDBACK_ERROR;2014;07DE;RC2014;On an MQPUT or MQPUT1 call, the value specified for the Feedback field in the message descriptor MQMD is not valid. The value is not MQFB_NONE, and is outside both the range defined for system feedback codes and the range defined for application feedback codes.;MQCC_FAILED;Specify MQFB_NONE, or a value in the range MQFB_SYSTEM_FIRST through MQFB_SYSTEM_LAST, or MQFB_APPL_FIRST through MQFB_APPL_LAST.;
MQRC_FILE_SYSTEM_ERROR;2208;08A0;RC2208;An unexpected return code was received from the file system, in attempting to perform an operation on a queue.;This reason code occurs only on VSE/ESA.;MQCC_FAILED;Check the file system definition for the queue that was being accessed. For a VSAM file, check that the control interval is large enough for the maximum message length allowed for the queue.;
MQRC_FILTER_OPERATOR_ERROR;2418;0972;RC2418;The Operator parameter supplied is not valid.;If it is an input variable then the value is not one of the MQCFOP_* constant values. If it is an output variable then the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredicatable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_FORMAT_ERROR;2110;083E;RC2110;An MQGET call was issued with the MQGMO_CONVERT option specified in the GetMsgOpts parameter, but the message cannot be converted successfully due to an error associated with the message format. Possible errors include: The format name in the message is MQFMT_NONE. A user-written exit with the name specified by the Format field in the message cannot be found. The message contains data that is not consistent with the format definition. The message is returned unconverted to the application issuing the MQGET call, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;MQCC_WARNING;Check the format name that was specified when the message was put. If this is not one of the built-in formats, check that a suitable exit with the same name as the format is available for the queue manager to load. Verify that the data in the message corresponds to the format expected by the exit.;
MQRC_FORMAT_NOT_SUPPORTED;2317;090D;RC2317;The Format field in the message descriptor MQMD contains a value that is not supported: In an administration message, the format value must be one of the following: MQFMT_ADMIN, MQFMT_EVENT, MQFMT_PCF. For the mqPutBag call, the field in error resides in the MsgDesc parameter of the call. For the mqGetBag call, the field in error resides in the message descriptor of the message about to be retrieved. On z/OS®, the message was put to the command input queue with a format value of MQFMT_ADMIN, but the version of MQ being used does not support that format for commands.;MQCC_FAILED;If the error occurred when putting a message, correct the format value.;If the error occurred when getting a message, the message cannot be retrieved using the mqGetBag call: If one of the MQGMO_BROWSE_* options was specified, the message remains on the queue and can be retrieved using the MQGET call. In other cases, the message has already been removed from the queue and discarded. If the message was retrieved within a unit of work, the unit of work can be backed out and the message retrieved using the MQGET call.;
MQRC_FUNCTION_ERROR;2281;08E9;RC2281;An MQXEP or MQZEP call was issued, but the function identifier Function specified on the call is not valid, or not supported by the installable service being configured. On z/OS®, this reason code does not occur.;MQCC_FAILED;Do the following: For the MQXEP call, specify one of the MQXF_* values. For the MQZEP call, specify an MQZID_* value that is valid for the installable service being configured. Refer to the description of the MQZEP call in the WebSphere MQ System Administration Guide book to determine which values are valid.;
MQRC_FUNCTION_NOT_SUPPORTED;2298;08FA;RC2298;The function requested is not available in the current environment.;MQCC_FAILED;Remove the call from the application.;
MQRC_GET_ENABLED;2494;09BE;RC2494;This reason code is returned to an asynchronous consumer at the time a queue that was previously inhibited for get has been re-enabled for get.;MQCC_WARNING;None. This reason code is used to inform the application of the change in state of the queue.;
MQRC_GET_INHIBITED;2016;07E0;RC2016;MQGET calls are currently inhibited for the queue, or for the queue to which this queue resolves.;MQCC_FAILED;If the system design allows get requests to be inhibited for short periods, retry the operation later.;
MQRC_GLOBAL_UOW_CONFLICT;2351;092F;RC2351;An attempt was made to use inside a global unit of work a connection handle that is participating in another global unit of work. This can occur when an application passes connection handles between objects where the objects are involved in different DTC transactions. Because transaction completion is asynchronous, it is possible for this error to occur after the application has finalized the first object and committed its transaction.;This error does not occur for nontransactional MQI calls.;This reason code occurs only on Windows and z/OS®.;MQCC_FAILED;Check that the “MTS Transaction Support” attribute defined for the object’s class is set correctly. If necessary, modify the application so that the connection handle is not used by objects participating in different units of work.;
MQRC_GMO_ERROR;2186;088A;RC2186;On an MQGET call, the MQGMO structure is not valid, for one of the following reasons: The StrucId field is not MQGMO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQGMO structure are set correctly.;
MQRC_GROUPING_NOT_ALTERABLE;2515;09D3;RC2515;An MQSUB call was made using option MQSO_ALTER on a grouped subscription, that is one made with the option MQSO_GROUP_SUB. Grouping of subscriptions is not alterable.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly, or change the various grouping fields used on the MQSUB call so that it matches the existing subscription.;
MQRC_GROUP_ID_ERROR;2258;08D2;RC2258;An MQPUT or MQPUT1 call was issued to put a distribution-list message that is also a message in a group, a message segment, or has segmentation allowed, but an invalid combination of options and values was specified. All of the following are true: MQPMO_LOGICAL_ORDER is not specified in the Options field in MQPMO. Either there are too few MQPMR records provided by MQPMO, or the GroupId field is not present in the MQPMR records. One or more of the following flags is specified in the MsgFlags field in MQMD or MQMDE: MQMF_SEGMENTATION_ALLOWED MQMF_*_MSG_IN_GROUP MQMF_*_SEGMENT The GroupId field in MQMD or MQMDE is not MQGI_NONE. This combination of options and values would result in the same group identifier being used for all of the destinations in the distribution list; this is not permitted by the queue manager.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify MQGI_NONE for the GroupId field in MQMD or MQMDE. Alternatively, if the call is MQPUT specify MQPMO_LOGICAL_ORDER in the Options field in MQPMO.;
MQRC_HANDLE_IN_USE_FOR_UOW;2353;0931;RC2353;An attempt was made to use outside a unit of work a connection handle that is participating in a global unit of work.;This error can occur when an application passes connection handles between objects where one object is involved in a DTC transaction and the other is not. Because transaction completion is asynchronous, it is possible for this error to occur after the application has finalized the first object and committed its transaction.;This error can also occur when a single object that was created and associated with the transaction loses that association whilst the object is running. The association is lost when DTC terminates the transaction independently of MTS. This might be because the transaction timed out, or because DTC shut down.;This error does not occur for nontransactional MQI calls.;This reason code occurs only on Windows.;MQCC_FAILED;Check that the “MTS Transaction Support” attribute defined for the object’s class is set correctly. If necessary, modify the application so that objects executing within different units of work do not try to use the same connection handle.;
MQRC_HANDLE_NOT_AVAILABLE;2017;07E1;RC2017;An MQOPEN, MQPUT1 or MQSUB call was issued, but the maximum number of open handles allowed for the current task has already been reached. Be aware that when a distribution list is specified on the MQOPEN or MQPUT1 call, each queue in the distribution list uses one handle. On z/OS®, “task” means a CICS® task, a z/OS task, or an IMS-dependent region.;MQCC_FAILED;Check whether the application is issuing MQOPEN calls without corresponding MQCLOSE calls. If it is, modify the application to issue the MQCLOSE call for each open object as soon as that object is no longer needed.;Also check whether the application is specifying a distribution list containing a large number of queues that are consuming all of the available handles. If it is, increase the maximum number of handles that the task can use, or reduce the size of the distribution list. The maximum number of open handles that a task can use is given by the MaxHandles queue manager attribute.;
MQRC_HBAG_ERROR;2320;0910;RC2320;A call was issued that has a parameter that is a bag handle, but the handle is not valid. For output parameters, this reason also occurs if the parameter pointer is not valid, or points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_HCONFIG_ERROR;2280;08E8;RC2280;The configuration handle Hconfig specified on the MQXEP call or MQZEP call is not valid. The MQXEP call is issued by an API exit function; the MQZEP call is issued by an installable service. On z/OS®, this reason code does not occur.;MQCC_FAILED;Specify the configuration handle that was provided by the queue manager: On the MQXEP call, use the handle passed in the Hconfig field of the MQAXP structure. On the MQZEP call, use the handle passed to the installable service’s configuration function on the component initialization call. See the WebSphere MQ System Administration Guide book for information about installable services.;
MQRC_HCONN_ASYNC_ACTIVE;2500;09C4;RC2500;An attempt to issue an MQI call has been made while the connection is started.;MQCC_FAILED;Stop or suspend the connection using the MQCTL call and retry the operation.;
MQRC_HCONN_ERROR;2018;07E2;RC2018;The connection handle Hconn is not valid, for one of the following reasons: The parameter pointer is not valid, or (for the MQCONN or MQCONNX call) points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The value specified was not returned by a preceding MQCONN or MQCONNX call. The value specified has been made invalid by a preceding MQDISC call. The handle is a shared handle that has been made invalid by another thread issuing the MQDISC call. The handle is a shared handle that is being used on the MQBEGIN call (only nonshared handles are valid on MQBEGIN). The handle is a nonshared handle that is being used a thread that did not create the handle. The call was issued in the MTS environment in a situation where the handle is not valid (for example, passing the handle between processes or packages; note that passing the handle between library packages is supported). The conversion program is not defined as OPENAPI, when the MQXCNVC call is invoked by running a character conversion exit program with CICS® TS 3.2 or higher. When the conversion process runs, the TCB is switched to the Quasi Reentrant (QR) TCB, making the connection incorrect.;MQCC_FAILED;Ensure that a successful MQCONN or MQCONNX call is performed for the queue manager, and that an MQDISC call has not already been performed for it. Ensure that the handle is being used within its valid scope (see the description of MQCONN in the WebSphere MQ Application Programming Reference). On z/OS®, also check that the application has been linked with the correct stub; this is CSQCSTUB for CICS applications, CSQBSTUB for batch applications, and CSQQSTUB for IMS™ applications. Also, the stub used must not belong to a release of the queue manager that is more recent than the release on which the application is to run.;Change the conversion program definition to API(OPENAPI), to prevent the TCB switch. The MQGET then completes normally because the conversion routine runs on the L8 TCB.;
MQRC_HEADER_ERROR;2142;085E;RC2142;An MQPUT or MQPUT1 call was issued, but the message data contains an MQ header structure that is not valid. Possible errors include the following: The StrucId field is not valid. The Version field is not valid. The StrucLength field specifies a value that is too small. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_HMSG_ERROR;2460;099C;RC2460;On an MQCRTMH, MQDLTMH, MQSETMP, MQINQMP or MQDLT call, a message handle supplied is not valid, for one of the following reasons: The parameter pointer is not valid, or (for the MQCRTMH call) points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The value specified was not returned by a preceding MQCRTMH call. The value specified has been made invalid by a preceding MQDLTMH call.;MQCC_FAILED;Ensure that a successful MQCRTMH call is performed for the connection, and that an MQDLTMH call has not already been performed for it. Ensure that the handle is being used within its valid scope (see the description of MQCRTMH in the WebSphere MQ documentation).;
MQRC_HOBJ_ERROR;2019;07E3;RC2019;The object handle Hobj is not valid, for one of the following reasons: The parameter pointer is not valid, or (for the MQOPEN call) points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The value specified was not returned by a preceding MQOPEN call. The value specified has been made invalid by a preceding MQCLOSE call. The handle is a shared handle that has been made invalid by another thread issuing the MQCLOSE call. The handle is a nonshared handle that is being used by a thread that did not create the handle. The call is MQGET or MQPUT, but the object represented by the handle is not a queue.;MQCC_FAILED;Ensure that a successful MQOPEN call is performed for this object, and that an MQCLOSE call has not already been performed for it. Ensure that the handle is being used within its valid scope (see the description of MQOPEN in the WebSphere MQ Application Programming Reference).;
MQRC_HOBJ_QUIESCED;2517;09D5;RC2517;The HOBJ has been quiesced but there are no messages in the read ahead buffer which match the current selection criteria. This reason code indicates that the read ahead buffer is not empty.;MQCC_FAILED;This reason code indicates that all messages with the current selection criteria have been processed. Do one of the following: If no further messages need to be processed issue an MQCLOSE without the MQCO_QUIESCE option. Any messages in the read ahead buffer will be discarded. Relax the current selection criteria by modifying the values in the MQGMO and reissue the call. Once all messages have been consumed the call will return MQRC_HOBJ_QUIESCED_NO_MSGS.;
MQRC_HOBJ_QUIESCED_NO_MSGS;2518;09D6;RC2518;The HOBJ has been quiesced and the read ahead buffer is now empty. No further messages will be delivered to this HOBJ;MQCC_FAILED;Issue MQCLOSE against the HOBJ.;
MQRC_HOST_NOT_AVAILABLE;2538;09EA;RC2538;An MQCONN call was issued from a client to connect to a queue manager but the attempt to allocate a conversation to the remote system failed. Common causes of this reason code are: The listener has not been started on the remote system. The connection name in the client channel definition is incorrect. The network is currently unavailable.;MQCC_FAILED;Examine the client error log for messages explaining the cause of the problem.;
MQRC_IDENTITY_MISMATCH;2434;0982;RC2434;An MQSUB call using either MQSO_RESUME or MQSO_ALTER was made against a subscription that has the MQSO_FIXED_USERID option set, by a userid other than the one recorded as owning the subscription.;MQCC_FAILED;Correct the full subscription name to one that is unique, or update the existing subscription to allow different userids to use it by using the MQSO_ANY_USERID option from an application running under the owning userid.;
MQRC_IIH_ERROR;2148;0864;RC2148;An MQPUT or MQPUT1 call was issued, but the message data contains an MQIIH structure that is not valid. Possible errors include the following: The StrucId field is not MQIIH_STRUC_ID. The Version field is not MQIIH_VERSION_1. The StrucLength field is not MQIIH_LENGTH_1. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_IMPO_ERROR;2464;09A0;RC2464;On an MQINQMP call, the inquire message property options structure MQIMPO is not valid, for one of the following reasons: The StrucId field is not MQIMPO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQIMPO structure are set correctly.;
MQRC_INCOMPLETE_GROUP;2241;08C1;RC2241;An operation was attempted on a queue using a queue handle that had an incomplete message group. This reason code can arise in the following situations: On the MQPUT call, when the application specifies MQPMO_LOGICAL_ORDER and attempts to put a message that is not in a group. The completion code is MQCC_FAILED in this case. On the MQPUT call, when the application does not specify MQPMO_LOGICAL_ORDER, but the previous MQPUT call for the queue handle did specify MQPMO_LOGICAL_ORDER. The completion code is MQCC_WARNING in this case. On the MQGET call, when the application does not specify MQGMO_LOGICAL_ORDER, but the previous MQGET call for the queue handle did specify MQGMO_LOGICAL_ORDER. The completion code is MQCC_WARNING in this case. On the MQCLOSE call, when the application attempts to close the queue that has the incomplete message group. The completion code is MQCC_WARNING in this case.;If there is an incomplete logical message as well as an incomplete message group, reason code MQRC_INCOMPLETE_MSG is returned in preference to MQRC_INCOMPLETE_GROUP.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING or MQCC_FAILED;If this reason code is expected, no corrective action is required. Otherwise, ensure that the MQPUT call for the last message in the group specifies MQMF_LAST_MSG_IN_GROUP.;
MQRC_INCOMPLETE_MSG;2242;08C2;RC2242;An operation was attempted on a queue using a queue handle that had an incomplete logical message. This reason code can arise in the following situations: On the MQPUT call, when the application specifies MQPMO_LOGICAL_ORDER and attempts to put a message that is not a segment, or that has a setting for the MQMF_LAST_MSG_IN_GROUP flag that is different from the previous message. The completion code is MQCC_FAILED in this case. On the MQPUT call, when the application does not specify MQPMO_LOGICAL_ORDER, but the previous MQPUT call for the queue handle did specify MQPMO_LOGICAL_ORDER. The completion code is MQCC_WARNING in this case. On the MQGET call, when the application does not specify MQGMO_LOGICAL_ORDER, but the previous MQGET call for the queue handle did specify MQGMO_LOGICAL_ORDER. The completion code is MQCC_WARNING in this case. On the MQCLOSE call, when the application attempts to close the queue that has the incomplete logical message. The completion code is MQCC_WARNING in this case.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING or MQCC_FAILED;If this reason code is expected, no corrective action is required. Otherwise, ensure that the MQPUT call for the last segment specifies MQMF_LAST_SEGMENT.;
MQRC_INCONSISTENT_BROWSE;2259;08D3;RC2259;An MQGET call was issued with the MQGMO_BROWSE_NEXT option specified, but the specification of the MQGMO_LOGICAL_ORDER option for the call is different from the specification of that option for the previous call for the queue handle. Either both calls must specify MQGMO_LOGICAL_ORDER, or neither call must specify MQGMO_LOGICAL_ORDER.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Add or remove the MQGMO_LOGICAL_ORDER option as appropriate. Alternatively, to switch between logical order and physical order, specify the MQGMO_BROWSE_FIRST option to restart the scan from the beginning of the queue, omitting or specifying MQGMO_LOGICAL_ORDER as required.;
MQRC_INCONSISTENT_CCSIDS;2243;08C3;RC2243;An MQGET call was issued specifying the MQGMO_COMPLETE_MSG option, but the message to be retrieved consists of two or more segments that have differing values for the CodedCharSetId field in MQMD. This can arise when the segments take different paths through the network, and some of those paths have MCA sender conversion enabled. The call succeeds with a completion code of MQCC_WARNING, but only the first few segments that have identical character-set identifiers are returned.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING;Remove the MQGMO_COMPLETE_MSG option from the MQGET call and retrieve the remaining message segments one by one.;
MQRC_INCONSISTENT_ENCODINGS;2244;08C4;RC2244;An MQGET call was issued specifying the MQGMO_COMPLETE_MSG option, but the message to be retrieved consists of two or more segments that have differing values for the Encoding field in MQMD. This can arise when the segments take different paths through the network, and some of those paths have MCA sender conversion enabled. The call succeeds with a completion code of MQCC_WARNING, but only the first few segments that have identical encodings are returned.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING;Remove the MQGMO_COMPLETE_MSG option from the MQGET call and retrieve the remaining message segments one by one.;
MQRC_INCONSISTENT_FORMAT;6119;17E7;RC6119;The format of the (next) message item is inconsistent with the class of object into which the item is being pasted.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_INCONSISTENT_ITEM_TYPE;2313;0909;RC2313;The mqAddInteger or mqAddString call was issued to add another occurrence of the specified selector to the bag, but the data type of this occurrence differed from the data type of the first occurrence.;This reason can also occur on the mqBufferToBag and mqGetBag calls, where it indicates that the PCF in the buffer or message contains a selector that occurs more than once but with inconsistent data types.;MQCC_FAILED;For the mqAddInteger and mqAddString calls, use the call appropriate to the data type of the first occurrence of that selector in the bag.;For the mqBufferToBag and mqGetBag calls, check the logic of the application that created the buffer or sent the message to ensure that multiple-occurrence selectors occur with only one data type. A message that contains a mixture of data types for a selector cannot be retrieved using the mqGetBag call: If one of the MQGMO_BROWSE_* options was specified, the message remains on the queue and can be retrieved using the MQGET call. In other cases, the message has already been removed from the queue and discarded. If the message was retrieved within a unit of work, the unit of work can be backed out and the message retrieved using the MQGET call.;
MQRC_INCONSISTENT_OBJECT_STATE;6120;17E8;RC6120;There is an inconsistency between this object, which is open, and the referenced ImqQueueManager object, which is not connected.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_INCONSISTENT_OPEN_OPTIONS;6127;17EF;RC6127;A method failed because the object is open, and the ImqObject open options are inconsistent with the required operation. The object cannot be reopened implicitly because the IMQ_IMPL_OPEN flag of the ImqObject behavior class attribute is false.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Open the object with appropriate ImqObject open options and retry.;
MQRC_INCONSISTENT_PERSISTENCE;2185;0889;RC2185;An MQPUT call was issued to put a message in a group or a segment of a logical message, but the value specified or defaulted for the Persistence field in MQMD is not consistent with the current group and segment information retained by the queue manager for the queue handle. All messages in a group and all segments in a logical message must have the same value for persistence, that is, all must be persistent, or all must be nonpersistent.;If the current call specifies MQPMO_LOGICAL_ORDER, the call fails. If the current call does not specify MQPMO_LOGICAL_ORDER, but the previous MQPUT call for the queue handle did, the call succeeds with completion code MQCC_WARNING.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING or MQCC_FAILED;Modify the application to ensure that the same value of persistence is used for all messages in the group, or all segments of the logical message.;
MQRC_INCONSISTENT_UOW;2245;08C5;RC2245;One of the following applies: An MQPUT call was issued to put a message in a group or a segment of a logical message, but the value specified or defaulted for the MQPMO_SYNCPOINT option is not consistent with the current group and segment information retained by the queue manager for the queue handle. If the current call specifies MQPMO_LOGICAL_ORDER, the call fails. If the current call does not specify MQPMO_LOGICAL_ORDER, but the previous MQPUT call for the queue handle did, the call succeeds with completion code MQCC_WARNING. An MQGET call was issued to remove from the queue a message in a group or a segment of a logical message, but the value specified or defaulted for the MQGMO_SYNCPOINT option is not consistent with the current group and segment information retained by the queue manager for the queue handle. If the current call specifies MQGMO_LOGICAL_ORDER, the call fails. If the current call does not specify MQGMO_LOGICAL_ORDER, but the previous MQGET call for the queue handle did, the call succeeds with completion code MQCC_WARNING.;If the current call specifies MQPMO_LOGICAL_ORDER, the call fails. If the current call does not specify MQPMO_LOGICAL_ORDER, but the previous MQPUT call for the queue handle did, the call succeeds with completion code MQCC_WARNING.;If the current call specifies MQGMO_LOGICAL_ORDER, the call fails. If the current call does not specify MQGMO_LOGICAL_ORDER, but the previous MQGET call for the queue handle did, the call succeeds with completion code MQCC_WARNING.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING or MQCC_FAILED;Modify the application to ensure that the same unit-of-work specification is used for all messages in the group, or all segments of the logical message.;
MQRC_INDEX_ERROR;2314;090A;RC2314;An index parameter to a call or method has a value that is not valid. The value must be zero or greater. For bag calls, certain MQIND_* values can also be specified: For the mqDeleteItem, mqSetInteger and mqSetString calls, MQIND_ALL and MQIND_NONE are valid. For the mqInquireBag, mqInquireInteger, mqInquireString, and mqInquireItemInfo calls, MQIND_NONE is valid.;MQCC_FAILED;Specify a valid value.;
MQRC_INDEX_NOT_PRESENT;2306;0902;RC2306;The specified index is not present: For a bag, this means that the bag contains one or more data items that have the selector value specified by the Selector parameter, but none of them has the index value specified by the ItemIndex parameter. The data item identified by the Selector and ItemIndex parameters must exist in the bag. For a namelist, this means that the index parameter value is too large, and outside the range of valid values.;MQCC_FAILED;Specify the index of a data item that does exist in the bag or namelist. Use the mqCountItems call to determine the number of data items with the specified selector that exist in the bag, or the nameCount method to determine the number of names in the namelist.;
MQRC_INHIBIT_VALUE_ERROR;2020;07E4;RC2020;On an MQSET call, the value specified for either the MQIA_INHIBIT_GET attribute or the MQIA_INHIBIT_PUT attribute is not valid.;MQCC_FAILED;Specify a valid value for the InhibitGet or InhibitPut queu attribute.;
MQRC_INITIALIZATION_FAILED;2286;08EE;RC2286;This reason should be returned by an installable service component when the component is unable to complete initialization successfully. On z/OS®, this reason code does not occur.;MQCC_FAILED;Correct the error and retry the operation.;
MQRC_INQUIRY_COMMAND_ERROR;2324;0914;RC2324;The mqAddInquiry call was used previously to add attribute selectors to the bag, but the command code to be used for the mqBagToBuffer, mqExecute, or mqPutBag call is not recognized. As a result, the correct PCF message cannot be generated.;MQCC_FAILED;Remove the mqAddInquiry calls and use instead the mqAddInteger call with the appropriate MQIACF_*_ATTRS or MQIACH_*_ATTRS selectors.;
MQRC_INSUFFICIENT_BUFFER;6113;17E1;RC6113;There is insufficient buffer space available after the data pointer to accommodate the request. This might be because the buffer cannot be resized.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_INSUFFICIENT_DATA;6114;17E2;RC6114;There is insufficient data after the data pointer to accommodate the request.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_INT_ATTRS_ARRAY_ERROR;2023;07E7;RC2023;On an MQINQ or MQSET call, the IntAttrs parameter is not valid. The parameter pointer is not valid (MQINQ and MQSET), or points to read-only storage or to storage that is not as long as indicated by the IntAttrCount parameter (MQINQ only). (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_INT_ATTR_COUNT_ERROR;2021;07E5;RC2021;On an MQINQ or MQSET call, the IntAttrCount parameter is negative (MQINQ or MQSET), or smaller than the number of integer attribute selectors (MQIA_*) specified in the Selectors parameter (MQSET only). This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify a value large enough for all selected integer attributes.;
MQRC_INT_ATTR_COUNT_TOO_SMALL;2022;07E6;RC2022;On an MQINQ call, the IntAttrCount parameter is smaller than the number of integer attribute selectors (MQIA_*) specified in the Selectors parameter.;The call completes with MQCC_WARNING, with the IntAttrs array filled in with as many integer attributes as there is room for.;MQCC_WARNING;Specify a large enough value, unless only a subset of the values is needed.;
MQRC_INVALID_DESTINATION;2522;09DA;RC2522;An MQSUB call failed because of a problem with the destination where publications messages are to be sent, so an object handle cannot be returned to the application and the subscription is not made. This can be for one of the following reasons: The MQSUB call used MQSO_CREATE, MQSO_MANAGED and MQSO_NON_DURABLE and the model queue referred to by MNDURMDL on the administrative topic node does not exist The MQSUB call used MQSO_CREATE, MQSO_MANAGED and MQSO_DURABLE and the model queue referred to by MDURMDL on the administrative topic node does not exist, or has been defined with a DEFTYPE of TEMPDYN. The MQSUB call used MQSO_CREATE or MQSO_ALTER on a durable subscription and the object handle provided referred to a temporary dynamic queue. This is not an appropriate destination for a durable subscription. The MQSUB call used MQSO_RESUME and a Hobj of MQHO_NONE, to resume an administratively created subscription, but the queue name provided in the DEST parameter of the subscription does not exist. The MQSUB call used MQSO_RESUME and a Hobj of MQHO_NONE, to resume a previously created API subscription, but the queue previously used no longer exists.;MQCC_FAILED;Ensure that the model queues referred to by MNDURMDL and MDURMDL exist and have an appropriate DEFTYPE. Create the queue referred to by the DEST parameter in an administrative subscription if one is being used. Alter the subscription to use an existing queue if the previously used one does not exist.;
MQRC_INVALID_MSG_UNDER_CURSOR;2246;08C6;RC2246;An MQGET call was issued specifying the MQGMO_COMPLETE_MSG option with either MQGMO_MSG_UNDER_CURSOR or MQGMO_BROWSE_MSG_UNDER_CURSOR, but the message that is under the cursor has an MQMD with an Offset field that is greater than zero. Because MQGMO_COMPLETE_MSG was specified, the message is not valid for retrieval.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Reposition the browse cursor so that it is located on a message whose Offset field in MQMD is zero. Alternatively, remove the MQGMO_COMPLETE_MSG option.;
MQRC_INVALID_SUBSCRIPTION;2523;09DB;RC2523;An MQSUB call using MQSO_RESUME or MQSO_ALTER failed because the subscription named is not valid for use by applications. This can be for one of the following reasons: The subscription is the SYSTEM.DEFAULT.SUB subscription which is not a valid subscription and should only be used to fill in the default values on DEFINE SUB commands. The subscription is a proxy type subscription which is not a valid subscription for an application to resume and is only used to enable publications to be forwarded between queue managers. The subscription has expired and is no longer valid for use.;MQCC_FAILED;Ensure the subscription named in SubName field is not one of the invalid ones listed above. If you have a handle open to the subscription already it must have expired. Use MQCLOSE to close the handle and then if necessary create a new subscription.;
MQRC_ITEM_COUNT_ERROR;2316;090C;RC2316;The mqTruncateBag call was issued, but the ItemCount parameter specifies a value that is not valid. The value is either less than zero, or greater than the number of user-defined data items in the bag.;This reason also occurs on the mqCountItems call if the parameter pointer is not valid, or points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify a valid value. Use the mqCountItems call to determine the number of user-defined data items in the bag.;
MQRC_ITEM_TYPE_ERROR;2327;0917;RC2327;The mqInquireItemInfo call was issued, but the ItemType parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_ITEM_VALUE_ERROR;2319;090F;RC2319;The mqInquireBag or mqInquireInteger call was issued, but the ItemValue parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_JMS_FORMAT_ERROR;2364;093C;RC2364;This reason code is generated when JMS encounters a message that it is unable to parse. If such a message is encountered by a JMS ConnectionConsumer, the message is processed as specified by the disposition options in the Report field in the MQMD of the message.;If the Report field specifies one of the MQRO_EXCEPTION_* options, this reason code appears in the Feedback field of the report message. If the Report field specifies MQRO_DEAD_LETTER_Q, or the disposition report options are left as default, this reason code appears in the Reason field of the MQDLH.;None;Investigate the origin of the message.;
MQRC_JSSE_ERROR;2397;095D;RC2397;JSSE reported an error (for example, while connecting to a queue manager using SSL encryption). The MQException object containing this reason code references the Exception thrown by JSSE; this can be obtained by using the MQException.getCause() method. From JMS, the MQException is linked to the thrown JMSException.;This reason code occurs only with Java applications.;MQCC_FAILED;Inspect the causal exception to determine the JSSE error.;
MQRC_KEY_REPOSITORY_ERROR;2381;094D;RC2381;On an MQCONN or MQCONNX call, the location of the key repository is either not specified, not valid, or results in an error when used to access the key repository. The location of the key repository is specified by one of the following: The value of the MQSSLKEYR environment variable (MQCONN or MQCONNX call), or The value of the KeyRepository field in the MQSCO structure (MQCONNX call only).;For the MQCONNX call, if both MQSSLKEYR and KeyRepository are specified, the latter is used.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a valid location for the key repository.;
MQRC_LDAP_PASSWORD_ERROR;2390;0956;RC2390;On an MQCONNX call, the LDAPPassword field in an MQAIR record specifies a value when no value is allowed.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a value that is blank or null.;
MQRC_LDAP_USER_NAME_ERROR;2388;0954;RC2388;On an MQCONNX call, an LDAP user name in an MQAIR record is not specified correctly. One of the following applies: LDAPUserNameLength is greater than zero, but LDAPUserNameOffset is zero and LDAPUserNamePtr is the null pointer. LDAPUserNameOffset is nonzero and LDAPUserNamePtr is not the null pointer. LDAPUserNamePtr is not a valid pointer. LDAPUserNameOffset or LDAPUserNamePtr points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Ensure that one of LDAPUserNameOffset or LDAPUserNamePtr is zero and the other nonzero. Ensure that the field used points to accessible storage.;
MQRC_LDAP_USER_NAME_LENGTH_ERR;2389;0955;RC2389;On an MQCONNX call, the LDAPUserNameLength field in an MQAIR record specifies a value that is less than zero.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Specify a value for LDAPUserNameLength that is zero or greater.;
MQRC_LOCAL_UOW_CONFLICT;2352;0930;RC2352;An attempt was made to use inside a global unit of work a connection handle that is participating in a queue-manager coordinated local unit of work. This can occur when an application passes connection handles between objects where one object is involved in a DTC transaction and the other is not.;This error does not occur for nontransactional MQI calls.;This reason code occurs only on Windows and z/OS®.;MQCC_FAILED;Check that the “MTS Transaction Support” attribute defined for the object’s class is set correctly. If necessary, modify the application so that the connection handle is not used by objects participating in different units of work.;
MQRC_LOGGER_STATUS;2411;096B;RC2411;This condition is detected when a logger event occurs.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_LOOPING_PUBLICATION;2541;09ED;RC2541;A Distributed Pub/Sub topology has been configured with a combination of Pub/Sub clusters and Pub/Sub Hierarchies such that some, or all, of the queue managers have been connected in a loop. A looping publication has been detected and put onto the dead-letter queue.;MQCC_FAILED;Examine the hierarchy and correct the loop.;
MQRC_MATCH_OPTIONS_ERROR;2247;08C7;RC2247;An MQGET call was issued, but the value of the MatchOptions field in the GetMsgOpts parameter is not valid, for one of the following reasons: An undefined option is specified. All of the following are true: MQGMO_LOGICAL_ORDER is specified. There is a current message group or logical message for the queue handle. Neither MQGMO_BROWSE_MSG_UNDER_CURSOR nor MQGMO_MSG_UNDER_CURSOR is specified. One or more of the MQMO_* options is specified. The values of the fields in the MsgDesc parameter corresponding to the MQMO_* options specified, differ from the values of those fields in the MQMD for the message to be returned next. On z/OS®, one or more of the options specified is not valid for the index type of the queue.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that only valid options are specified for the field.;
MQRC_MAX_CONNS_LIMIT_REACHED;2025;07E9;RC2025;The MQCONN or MQCONNX call was rejected because the maximum number of concurrent connections has been exceeded. On z/OS®, connection limits are applicable only to TSO and batch requests. The limits are determined by the customer using the following parameters of the CSQ6SYSP macro: For TSO: IDFORE For batch: IDBACK For more information, see the Task 17: Tailor your system parameter module . On HP OpenVMS, i5/OS®, Compaq NonStop Kernel, UNIX systems, and Windows, this reason code can also occur on the MQOPEN call. When using Java applications, a limit to the number of concurrent connections may be defined by the connection manager.;For more information, see the Task 17: Tailor your system parameter module .;MQCC_FAILED;Either increase the size of the appropriate parameter value, or reduce the number of concurrent connections.;
MQRC_MAX_MSG_LENGTH_ERROR;2485;09B5;RC2485;An MQCB call was made with an Operation of MQOP_REGISTER with an incorrect value for the MaxMsgLength field of the MQCBD.;MQCC_FAILED;Ensure that the MaxMsgLength are specified correctly.;
MQRC_MDE_ERROR;2248;08C8;RC2248;An MQPUT or MQPUT1 call was issued, but the message data contains an MQMDE structure that is not valid. Possible errors include the following: The StrucId field is not MQMDE_STRUC_ID. The Version field is not MQMDE_VERSION_2. The StrucLength field is not MQMDE_LENGTH_2. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_MD_ERROR;2026;07EA;RC2026;The MQMD structure is not valid, for one of the following reasons: The StrucId field is not MQMD_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQMD structure are set correctly.;
MQRC_MHBO_ERROR;2501;09C5;RC2501;On an MQMHBUF call, the message handle to buffer options structure MQMHBO is not valid, for one of the following reasons: The StrucId field is not MQMHBO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQMHBO structure are set correctly.;
MQRC_MISSING_REPLY_TO_Q;2027;07EB;RC2027;On an MQPUT or MQPUT1 call, the ReplyToQ field in the message descriptor MQMD is blank, but one or both of the following is true: A reply was requested (that is, MQMT_REQUEST was specified in the MsgType field of the message descriptor). A report message was requested in the Report field of the message descriptor.;MQCC_FAILED;Specify the name of the queue to which the reply message or report message is to be sent.;
MQRC_MISSING_WIH;2332;091C;RC2332;An MQPUT or MQPUT1 call was issued to put a message on a queue whose IndexType attribute had the value MQIT_MSG_TOKEN, but the Format field in the MQMD was not MQFMT_WORK_INFO_HEADER. This error occurs only when the message arrives at the destination queue manager.;This reason code occurs only on z/OS®.;MQCC_FAILED;Modify the application to ensure that it places an MQWIH structure at the start of the message data, and sets the Format field in the MQMD to MQFMT_WORK_INFO_HEADER. Alternatively, change the ApplType attribute of the process definition used by the destination queue to be MQAT_WLM, and specify the required service name and service step name in its EnvData attribute.;
MQRC_MIXED_CONTENT_NOT_ALLOWED;2498;09C2;RC2498;An attempt was made to set a property with mixed content. For example, if an application set the property “x.y” and then attempted to set the property “x.y.z it is unclear whether in the property name hierarchy “y” contains a value or another logical grouping. Such a hierarchy would be “mixed content” and this is not supported. Setting a property which would cause mixed content is not allowed. A hierarchy within a property name is created using the “.” character (U+002E).;MQCC_FAILED;Valid property names are described in the WebSphere MQ documentation. Change the property name hierarchy so that it no longer contains mixed content before re-issuing the call.;
MQRC_MODULE_ENTRY_NOT_FOUND;2497;09C1;RC2497;An MQCB call was made with an Operation of MQOP_REGISTER and the CallbackName identifies a function name which can’t be found in the specified library.;MQCC_FAILED;Ensure that the CallbackName value is specified correctly.;
MQRC_MODULE_INVALID;2496;09C0;RC2496;An MQCB call was made with an Operation of MQOP_REGISTER, specifying a CallbackName which is not a valid load module.;MQCC_FAILED;Ensure that the CallbackName value is specified correctly.;
MQRC_MODULE_NOT_FOUND;2495;09BF;RC2495;A native shared library could not be loaded.;MQCC_FAILED;This problem could be caused by either of the two following reasons:;
MQRC_MSG_FLAGS_ERROR;2249;08C9;RC2249;An MQPUT or MQPUT1 call was issued, but the MsgFlags field in the message descriptor MQMD contains one or more message flags that are not recognized by the local queue manager. The message flags that cause this reason code to be returned depend on the destination of the message; see the description of REPORT in the WebSphere MQ Application Programming Reference for more details.;This reason code can also occur in the Feedback field in the MQMD of a report message, or in the Reason field in the MQDLH structure of a message on the dead-letter queue; in both cases it indicates that the destination queue manager does not support one or more of the message flags specified by the sender of the message.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Do the following: Ensure that the MsgFlags field in the message descriptor is initialized with a value when the message descriptor is declared, or is assigned a value prior to the MQPUT or MQPUT1 call. Specify MQMF_NONE if no message flags are needed. Ensure that the message flags specified are valid; see the MsgFlags field described in the description of MQMD in the WebSphere MQ Application Programming Reference for valid message flags. If multiple message flags are being set by adding the individual message flags together, ensure that the same message flag is not added twice. On z/OS, ensure that the message flags specified are valid for the index type of the queue; see the description of the MsgFlags field in MQMD for further details.;
MQRC_MSG_HANDLE_COPY_FAILURE;2532;09E4;RC2532;An MQGET call was issued specifying a valid MsgHandle in which to retrieve any properties of the message. After the message had been removed from the queue the application could not allocate enough storage for the properties of the message. The message data is available to the application but the properties are not. Check the queue manager error logs for more information about how much storage was required.;MQCC_WARNING;Raise the memory limit of the application to allow it store the properties.;
MQRC_MSG_HANDLE_IN_USE;2499;09C3;RC2499;A message property call was called (MQCRTMH, MQDLTMH, MQSETMP, MQINQMP, MQDLTMP or MQMHBUF) specifying a message handle that is already in use on another API call. A message handle may only be used on one call at a time.;Concurrent use of a message handle can arise, for example, when an application uses multiple threads.;MQCC_FAILED;Ensure that the message handle cannot be used while another call is in progress.;
MQRC_MSG_ID_ERROR;2206;089E;RC2206;An MQGET call was issued to retrieve a message using the message identifier as a selection criterion, but the call failed because selection by message identifier is not supported on this queue. On z/OS®, the queue is a shared queue, but the IndexType queue attribute does not have an appropriate value: If selection is by message identifier alone, IndexType must have the value MQIT_MSG_ID. If selection is by message identifier and correlation identifier combined, IndexType must have the value MQIT_MSG_ID or MQIT_CORREL_ID. On Compaq NonStop Kernel, a key file is required but has not been defined.;MQCC_FAILED;Do one of the following: Modify the application so that it does not use selection by message identifier: set the MsgId field to MQMI_NONE and do not specify MQMO_MATCH_MSG_ID in MQGMO. On z/OS, change the IndexType queue attribute to MQIT_MSG_ID. On Compaq NonStop Kernel, define a key file.;
MQRC_MSG_NOT_ALLOWED_IN_GROUP;2417;0971;RC2417;An MQPUT or MQPUT1 call was issued to put a message in a group but it is not valid to put such a message in a group. An example of an invalid message is a PCF message where the Type is MQCFT_TRACE_ROUTE.;You cannot use grouped or segmented messages with Publish/Subscribe.;MQCC_FAILED;Remove the invalid message from the group.;
MQRC_MSG_NOT_MATCHED;2363;093B;RC2363;This reason code occurs only in the Reason field in an MQDLH structure, or in the Feedback field in the MQMD of a report message.;While performing Point-to-Point messaging, JMS encountered a message matching none of the selectors of ConnectionConsumers monitoring the queue. To maintain performance, the message was processed as specified by the disposition options in the Report field in the MQMD of the message.;If the Report field specifies one of the MQRO_EXCEPTION_* options, this reason code appears in the Feedback field of the report message. If the Report field specifies MQRO_DEAD_LETTER_Q, or the disposition report options are left as default, this reason code appears in the Reason field of the MQDLH.;None;To correct this, ensure that the ConnectionConsumers monitoring the queue provide a complete set of selectors. Alternatively, set the QueueConnectionFactory to retain messages.;
MQRC_MSG_SEQ_NUMBER_ERROR;2250;08CA;RC2250;An MQGET, MQPUT, or MQPUT1 call was issued, but the value of the MsgSeqNumber field in the MQMD or MQMDE structure is less than one or greater than 999 999 999.;This error can also occur on the MQPUT call if the MsgSeqNumber field would have become greater than 999 999 999 as a result of the call.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify a value in the range 1 through 999 999 999. Do not attempt to create a message group containing more than 999 999 999 messages.;
MQRC_MSG_TOKEN_ERROR;2331;091B;RC2331;An MQGET call was issued to retrieve a message using the message token as a selection criterion, but the options specified are not valid, because MQMO_MATCH_MSG_TOKEN was specified with either MQGMO_WAIT or MQGMO_SET_SIGNAL.;This reason code occurs only on z/OS®.;MQCC_FAILED;Remove the MQMO_MATCH_MSG_TOKEN option from the MQGET call.;
MQRC_MSG_TOO_BIG_FOR_CHANNEL;2218;08AA;RC2218;A message was put to a remote queue, but the message is larger than the maximum message length allowed by the channel. This reason code is returned in the Feedback field in the message descriptor of a report message. On z/OS®, this return code is issued only if you are not using CICS® for distributed queuing. Otherwise, MQRC_MSG_TOO_BIG_FOR_Q_MGR is issued.;MQCC_FAILED;Check the channel definitions. Increase the maximum message length that the channel can accept, or break the message into several smaller messages.;
MQRC_MSG_TOO_BIG_FOR_Q;2030;07EE;RC2030;An MQPUT or MQPUT1 call was issued to put a message on a queue, but the message was too long for the queue and MQMF_SEGMENTATION_ALLOWED was not specified in the MsgFlags field in MQMD. If segmentation is not allowed, the length of the message cannot exceed the lesser of the queue MaxMsgLength attribute and queue-manager MaxMsgLength attribute. On z/OS®, the queue manager does not support the segmentation of messages; if MQMF_SEGMENTATION_ALLOWED is specified, it is accepted but ignored.;This reason code can also occur when MQMF_SEGMENTATION_ALLOWED is specified, but the nature of the data present in the message prevents the queue manager splitting it into segments that are small enough to place on the queue: For a user-defined format, the smallest segment that the queue manager can create is 16 bytes. For a built-in format, the smallest segment that the queue manager can create depends on the particular format, but is greater than 16 bytes in all cases other than MQFMT_STRING (for MQFMT_STRING the minimum segment size is 16 bytes).;MQRC_MSG_TOO_BIG_FOR_Q can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;MQCC_FAILED;Check whether the BufferLength parameter is specified correctly; if it is, do one of the following: Increase the value of the queue’s MaxMsgLength attribute; the queue-manager’s MaxMsgLength attribute may also need increasing. Break the message into several smaller messages. Specify MQMF_SEGMENTATION_ALLOWED in the MsgFlags field in MQMD; this will allow the queue manager to break the message into segments.;
MQRC_MSG_TOO_BIG_FOR_Q_MGR;2031;07EF;RC2031;An MQPUT or MQPUT1 call was issued to put a message on a queue, but the message was too long for the queue manager and MQMF_SEGMENTATION_ALLOWED was not specified in the MsgFlags field in MQMD. If segmentation is not allowed, the length of the message cannot exceed the lesser of the queue-manager MaxMsgLength attribute and queue MaxMsgLength attribute.;This reason code can also occur when MQMF_SEGMENTATION_ALLOWED is specified, but the nature of the data present in the message prevents the queue manager splitting it into segments that are small enough for the queue-manager limit: For a user-defined format, the smallest segment that the queue manager can create is 16 bytes. For a built-in format, the smallest segment that the queue manager can create depends on the particular format, but is greater than 16 bytes in all cases other than MQFMT_STRING (for MQFMT_STRING the minimum segment size is 16 bytes).;MQRC_MSG_TOO_BIG_FOR_Q_MGR can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;This reason also occurs if a channel, through which the message is to pass, has restricted the maximum message length to a value that is actually less than that supported by the queue manager, and the message length is greater than this value. On z/OS®, this return code is issued only if you are using CICS® for distributed queuing. Otherwise, MQRC_MSG_TOO_BIG_FOR_CHANNEL is issued.;MQCC_FAILED;Check whether the BufferLength parameter is specified correctly; if it is, do one of the following: Increase the value of the queue-manager’s MaxMsgLength attribute; the queue’s MaxMsgLength attribute may also need increasing. Break the message into several smaller messages. Specify MQMF_SEGMENTATION_ALLOWED in the MsgFlags field in MQMD; this will allow the queue manager to break the message into segments. Check the channel definitions.;
MQRC_MSG_TYPE_ERROR;2029;07ED;RC2029;Either: On an MQPUT or MQPUT1 call, the value specified for the MsgType field in the message descriptor (MQMD) is not valid. A message processing program received a message that does not have the expected message type. For example, if the WebSphere® MQ command server receives a message which is not a request message (MQMT_REQUEST) then it rejects the request with this reason code.;MQCC_FAILED;Specify a valid value for the MsgType field. In the case where a request is rejected by a message processing program, refer to the documentation for that program for details of the message types that it supports.;
MQRC_MULTIPLE_INSTANCE_ERROR;2301;08FD;RC2301;The Selector parameter specifies a system selector (one of the MQIASY_* values), but the value of the ItemIndex parameter is not MQIND_NONE. Only one instance of each system selector can exist in the bag.;MQCC_FAILED;Specify MQIND_NONE for the ItemIndex parameter.;
MQRC_MULTIPLE_REASONS;2136;0858;RC2136;An MQOPEN, MQPUT or MQPUT1 call was issued to open a distribution list or put a message to a distribution list, but the result of the call was not the same for all of the destinations in the list. One of the following applies: The call succeeded for some of the destinations but not others. The completion code is MQCC_WARNING in this case. The call failed for all of the destinations, but for differing reasons. The completion code is MQCC_FAILED in this case.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_WARNING or MQCC_FAILED;Examine the MQRR response records to identify the destinations for which the call failed, and the reason for the failure. Ensure that sufficient response records are provided by the application on the call to enable the error(s) to be determined. For the MQPUT1 call, the response records must be specified using the MQOD structure, and not the MQPMO structure.;
MQRC_NAME_IN_USE;2201;0899;RC2201;An MQOPEN call was issued to create a dynamic queue, but a queue with the same name as the dynamic queue already exists. The existing queue is one that is logically deleted, but for which there are still one or more open handles. For more information, see the description of MQCLOSE in the WebSphere MQ Application Programming Reference.;This reason code occurs only on z/OS®.;MQCC_FAILED;Either ensure that all handles for the previous dynamic queue are closed, or ensure that the name of the new queue is unique; see the description for reason code MQRC_OBJECT_ALREADY_EXISTS.;
MQRC_NAME_NOT_VALID_FOR_TYPE;2194;0892;RC2194;An MQOPEN call was issued to open the queue manager definition, but the ObjectName field in the ObjDesc parameter is not blank.;MQCC_FAILED;Ensure that the ObjectName field is set to blanks.;
MQRC_NEGATIVE_LENGTH;6117;17E5;RC6117;A negative length has been supplied where a zero or positive length is required.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_NEGATIVE_OFFSET;6118;17E6;RC6118;A negative offset has been supplied where a zero or positive offset is required.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_NESTED_BAG_NOT_SUPPORTED;2325;0915;RC2325;A bag that is input to the call contains nested bags. Nested bags are supported only for bags that are output from the call.;MQCC_FAILED;Use a different bag as input to the call.;
MQRC_NESTED_SELECTOR_ERROR;2419;0973;RC2419;An mqAddBag call was issued, but the bag to be nested contained a data item with an inconsistent selector. This reason only occurs if the bag into which the nested bag was to be added was created with the MQCBO_CHECK_SELECTORS option.;MQCC_FAILED;Ensure that all data items within the bag to be nested have selectors that are consistent with the data type implied by the item.;
MQRC_NEXT_OFFSET_ERROR;2358;0936;RC2358;An MQXCLWLN call was issued from a cluster workload exit to obtain the address of the next record in the chain, but the offset specified by the NextOffset parameter is not valid. NextOffset must be the value of one of the following fields: ChannelDefOffset field in MQWDR ClusterRecOffset field in MQWDR ClusterRecOffset field in MQWQR ClusterRecOffset field in MQWCR;MQCC_FAILED;Ensure that the value specified for the NextOffset parameter is the value of one of the fields listed above.;
MQRC_NEXT_RECORD_ERROR;2361;0939;RC2361;An MQXCLWLN call was issued from a cluster workload exit to obtain the address of the next record in the chain, but the address specified for the NextRecord parameter is either null, not valid, or the address of read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify a valid address for the NextRecord parameter.;
MQRC_NONE;0;0000;RC0;The call completed normally. The completion code (CompCode) is MQCC_OK.;MQCC_OK;None.;
MQRC_NOT_AUTHORIZED;2035;07F3;RC2035;The user is not authorized to perform the operation attempted: On an MQCONN or MQCONNX call, the user is not authorized to connect to the queue manager. On z/OS®, for CICS® applications, MQRC_CONNECTION_NOT_AUTHORIZED is issued instead. On an MQOPEN or MQPUT1 call, the user is not authorized to open the object for the option(s) specified. On z/OS, if the object being opened is a model queue, this reason also arises if the user is not authorized to create a dynamic queue with the required name. On an MQCLOSE call, the user is not authorized to delete the object, which is a permanent dynamic queue, and the Hobj parameter specified on the MQCLOSE call is not the handle returned by the MQOPEN call that created the queue. On a command, the user is not authorized to issue the command, or to access the object it specifies.;This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;MQCC_FAILED;Ensure that the correct queue manager or object was specified, and that appropriate authority exists.;
MQRC_NOT_CONNECTED;6124;17EC;RC6124;A method failed because a required connection to a queue manager was not available, and a connection cannot be established implicitly because the IMQ_IMPL_CONN flag of the ImqQueueManager behavior class attribute is FALSE.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Establish a connection to a queue manager and retry.;
MQRC_NOT_CONVERTED;2119;0847;RC2119;An MQGET call was issued with the MQGMO_CONVERT option specified in the GetMsgOpts parameter, but an error occurred during conversion of the data in the message. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;This error may also indicate that a parameter to the data-conversion service is not supported.;MQCC_WARNING;Check that the message data is correctly described by the Format, CodedCharSetId and Encoding parameters that were specified when the message was put. Also check that these values, and the CodedCharSetId and Encoding specified in the MsgDesc parameter on the MQGET call, are supported for queue-manager conversion. If the required conversion is not supported, conversion must be carried out by the application.;
MQRC_NOT_OPEN;6125;17ED;RC6125;A method failed because an object was not open, and opening cannot be accomplished implicitly because the IMQ_IMPL_OPEN flag of the ImqObject behavior class attribute is FALSE.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Open the object and retry.;
MQRC_NOT_OPEN_FOR_BROWSE;2036;07F4;RC2036;An MQGET call was issued with one of the following options: MQGMO_BROWSE_FIRST MQGMO_BROWSE_NEXT MQGMO_BROWSE_MSG_UNDER_CURSOR MQGMO_MSG_UNDER_CURSOR but the queue had not been opened for browse.;MQCC_FAILED;Specify MQOO_BROWSE when the queue is opened.;
MQRC_NOT_OPEN_FOR_INPUT;2037;07F5;RC2037;An MQGET call was issued to retrieve a message from a queue, but the queue had not been opened for input.;MQCC_FAILED;Specify one of the following when the queue is opened: MQOO_INPUT_SHARED MQOO_INPUT_EXCLUSIVE MQOO_INPUT_AS_Q_DEF;
MQRC_NOT_OPEN_FOR_INQUIRE;2038;07F6;RC2038;An MQINQ call was issued to inquire object attributes, but the object had not been opened for inquire.;MQCC_FAILED;Specify MQOO_INQUIRE when the object is opened.;
MQRC_NOT_OPEN_FOR_OUTPUT;2039;07F7;RC2039;An MQPUT call was issued to put a message on a queue, but the queue had not been opened for output.;MQCC_FAILED;Specify MQOO_OUTPUT when the queue is opened.;
MQRC_NOT_OPEN_FOR_PASS_ALL;2093;082D;RC2093;An MQPUT call was issued with the MQPMO_PASS_ALL_CONTEXT option specified in the PutMsgOpts parameter, but the queue had not been opened with the MQOO_PASS_ALL_CONTEXT option.;MQCC_FAILED;Specify MQOO_PASS_ALL_CONTEXT (or another option that implies it) when the queue is opened.;
MQRC_NOT_OPEN_FOR_PASS_IDENT;2094;082E;RC2094;An MQPUT call was issued with the MQPMO_PASS_IDENTITY_CONTEXT option specified in the PutMsgOpts parameter, but the queue had not been opened with the MQOO_PASS_IDENTITY_CONTEXT option.;MQCC_FAILED;Specify MQOO_PASS_IDENTITY_CONTEXT (or another option that implies it) when the queue is opened.;
MQRC_NOT_OPEN_FOR_SET;2040;07F8;RC2040;An MQSET call was issued to set queue attributes, but the queue had not been opened for set.;MQCC_FAILED;Specify MQOO_SET when the object is opened.;
MQRC_NOT_OPEN_FOR_SET_ALL;2095;082F;RC2095;An MQPUT call was issued with the MQPMO_SET_ALL_CONTEXT option specified in the PutMsgOpts parameter, but the queue had not been opened with the MQOO_SET_ALL_CONTEXT option.;MQCC_FAILED;Specify MQOO_SET_ALL_CONTEXT when the queue is opened.;
MQRC_NOT_OPEN_FOR_SET_IDENT;2096;0830;RC2096;An MQPUT call was issued with the MQPMO_SET_IDENTITY_CONTEXT option specified in the PutMsgOpts parameter, but the queue had not been opened with the MQOO_SET_IDENTITY_CONTEXT option.;MQCC_FAILED;Specify MQOO_SET_IDENTITY_CONTEXT (or another option that implies it) when the queue is opened.;
MQRC_NO_BUFFER;6110;17DE;RC6110;No buffer is available. For an ImqCache object, one cannot be allocated, denoting an internal inconsistency in the object state that should not occur.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_NO_CALLBACKS_ACTIVE;2446;098E;RC2446;An MQCTL call was made with an Operation of MQOP_START_WAIT and has returned because there are no currently defined callbacks which are not suspended.;MQCC_FAILED;Ensure that there is at least one registered, resumed consumer function.;
MQRC_NO_CONNECTION_REFERENCE;6109;17DD;RC6109;The connection reference is null. A connection to an ImqQueueManager object is required.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_NO_DATA_AVAILABLE;2379;094B;RC2379;This reason should be returned by the MQZ_ENUMERATE_AUTHORITY_DATA installable service component when there is no more authority data to return to the invoker of the service component. On z/OS®, this reason code does not occur.;MQCC_FAILED;None.;
MQRC_NO_DESTINATIONS_AVAILABLE;2270;08DE;RC2270;An MQPUT or MQPUT1 call was issued to put a message on a cluster queue, but at the time of the call there were no longer any instances of the queue in the cluster. The message therefore could not be sent.;This situation can occur when MQOO_BIND_NOT_FIXED is specified on the MQOPEN call that opens the queue, or MQPUT1 is used to put the message.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check the queue definition and queue status to determine why all instances of the queue were removed from the cluster. Correct the problem and rerun the application.;
MQRC_NO_EXTERNAL_PARTICIPANTS;2121;0849;RC2121;An MQBEGIN call was issued to start a unit of work coordinated by the queue manager, but no participating resource managers have been registered with the queue manager. As a result, only changes to MQ resources can be coordinated by the queue manager in the unit of work.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows.;MQCC_WARNING;If the application does not require non-MQ resources to participate in the unit of work, this reason code can be ignored or the MQBEGIN call removed. Otherwise consult your system programmer to determine why the required resource managers have not been registered with the queue manager; the queue manager's configuration file may be in error.;
MQRC_NO_MSG_AVAILABLE;2033;07F1;RC2033;An MQGET call was issued, but there is no message on the queue satisfying the selection criteria specified in MQMD (the MsgId and CorrelId fields), and in MQGMO (the Options and MatchOptions fields). Either the MQGMO_WAIT option was not specified, or the time interval specified by the WaitInterval field in MQGMO has expired. This reason is also returned for an MQGET call for browse, when the end of the queue has been reached.;This reason code can also be returned by the mqGetBag and mqExecute calls. mqGetBag is similar to MQGET. For the mqExecute call, the completion code can be either MQCC_WARNING or MQCC_FAILED: If the completion code is MQCC_WARNING, some response messages were received during the specified wait interval, but not all. The response bag contains system-generated nested bags for the messages that were received. If the completion code is MQCC_FAILED, no response messages were received during the specified wait interval.;MQCC_WARNING or MQCC_FAILED;If this is an expected condition, no corrective action is required.;If this is an unexpected condition, check that: The message was put on the queue successfully. The unit of work (if any) used for the MQPUT or MQPUT1 call was committed successfully. The options controlling the selection criteria are specified correctly. All of the following can affect the eligibility of a message for return on the MQGET call: MQGMO_LOGICAL_ORDER MQGMO_ALL_MSGS_AVAILABLE MQGMO_ALL_SEGMENTS_AVAILABLE MQGMO_COMPLETE_MSG MQMO_MATCH_MSG_ID MQMO_MATCH_CORREL_ID MQMO_MATCH_GROUP_ID MQMO_MATCH_MSG_SEQ_NUMBER MQMO_MATCH_OFFSET Value of MsgId field in MQMD Value of CorrelId field in MQMD Consider waiting longer for the message.;
MQRC_NO_MSG_LOCKED;2209;08A1;RC2209;An MQGET call was issued with the MQGMO_UNLOCK option, but no message was currently locked.;MQCC_WARNING;Check that a message was locked by an earlier MQGET call with the MQGMO_LOCK option for the same handle, and that no intervening call has caused the message to become unlocked.;
MQRC_NO_MSG_UNDER_CURSOR;2034;07F2;RC2034;An MQGET call was issued with either the MQGMO_MSG_UNDER_CURSOR or the MQGMO_BROWSE_MSG_UNDER_CURSOR option. However, the browse cursor is not positioned at a retrievable message. This is caused by one of the following: The cursor is positioned logically before the first message (as it is before the first MQGET call with a browse option has been successfully performed). The message the browse cursor was positioned on has been locked or removed from the queue (probably by some other application) since the browse operation was performed. The message the browse cursor was positioned on has expired.;MQCC_FAILED;Check the application logic. This may be an expected reason if the application design allows multiple servers to compete for messages after browsing. Consider also using the MQGMO_LOCK option with the preceding browse MQGET call.;
MQRC_NO_RECORD_AVAILABLE;2359;0937;RC2359;An MQXCLWLN call was issued from a cluster workload exit to obtain the address of the next record in the chain, but the current record is the last record in the chain.;MQCC_FAILED;None.;
MQRC_NO_RETAINED_MSG;2437;0985;RC2437;An MQSUBRQ call was made to a topic to request that any retained publications for this topic are sent to the subscriber. However there are no retained publications currently stored for this topic.;MQCC_FAILED;Ensure that publishers to the topic are marking their publication to be retained and that publications are being made to this topic.;
MQRC_NO_SUBSCRIPTION;2428;097C;RC2428;An MQSUB call using option MQSO_RESUME was made specifying a full subscription name that does not match any existing subscription.;MQCC_FAILED;Ensure that the subscription exists and that the full subscription name is correctly specified in your application. The full subscription name is built from the ConnTag field specified at connection time in the MQCNO structure and the SubName field specified at MQSUB time in the MQSD structure.;
MQRC_NO_SUBS_MATCHED;2550;09F6;RC2550;An MQPUT or MQPUT1 call was successful but no subscriptions matched the topic.;MQCC_WARNING;No response is required, unless this reason code was not expected by the application that put the message.;
MQRC_NULL_POINTER;6108;17DC;RC6108;A null pointer has been supplied where a nonnull pointer is either required or implied.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_OBJECT_ALREADY_EXISTS;2100;0834;RC2100;An MQOPEN call was issued to create a dynamic queue, but a queue with the same name as the dynamic queue already exists. On z/OS®, a rare “race condition” can also give rise to this reason code; see the description of reason code MQRC_NAME_IN_USE for more details.;MQCC_FAILED;If supplying a dynamic queue name in full, ensure that it obeys the naming conventions for dynamic queues; if it does, either supply a different name, or delete the existing queue if it is no longer required. Alternatively, allow the queue manager to generate the name.;If the queue manager is generating the name (either in part or in full), reissue the MQOPEN call.;
MQRC_OBJECT_CHANGED;2041;07F9;RC2041;Object definitions that affect this object have been changed since the Hobj handle used on this call was returned by the MQOPEN call. See the description of MQOPEN in the WebSphere MQ Application Programming Reference for more information.;This reason does not occur if the object handle is specified in the Context field of the PutMsgOpts parameter on the MQPUT or MQPUT1 call.;MQCC_FAILED;Issue an MQCLOSE call to return the handle to the system. It is then usually sufficient to reopen the object and retry the operation. However, if the object definitions are critical to the application logic, an MQINQ call can be used after reopening the object, to obtain the new values of the object attributes.;
MQRC_OBJECT_DAMAGED;2101;0835;RC2101;The object accessed by the call is damaged and cannot be used. For example, this may be because the definition of the object in main storage is not consistent, or because it differs from the definition of the object on disk, or because the definition on disk cannot be read. The object can be deleted, although it may not be possible to delete the associated user space. On z/OS®, this reason occurs when the DB2® list header or structure number associated with a shared queue is zero. This situation arises as a result of using the MQSC command DELETE CFSTRUCT to delete the DB2 structure definition. The command resets the list header and structure number to zero for each of the shared queues that references the deleted CF strcture.;MQCC_FAILED;It may be necessary to stop and restart the queue manager, or to restore the queue-manager data from back-up storage. On HP OpenVMS, i5/OS®, Compaq NonStop Kernel, and UNIX systems, consult the FFST™ record to obtain more detail about the problem. On z/OS, delete the shared queue and redefine it using the MQSC command DEFINE QLOCAL. This will automatically define a CF structure and allocate list headers for it.;
MQRC_OBJECT_IN_USE;2042;07FA;RC2042;An MQOPEN call was issued, but the object in question has already been opened by this or another application with options that conflict with those specified in the Options parameter. This arises if the request is for shared input, but the object is already open for exclusive input; it also arises if the request is for exclusive input, but the object is already open for input (of any sort).;MCAs for receiver channels, or the intra-group queuing agent (IGQ agent), may keep the destination queues open even when messages are not being transmitted; this results in the queues appearing to be "in use". Use the MQSC command DISPLAY QSTATUS to find out who is keeping the queue open. On z/OS®, this reason can also occur for an MQOPEN or MQPUT1 call, if the object to be opened (which can be a queue, or for MQOPEN a namelist or process object) is in the process of being deleted.;MQCC_FAILED;System design should specify whether an application is to wait and retry, or take other action.;
MQRC_OBJECT_LEVEL_INCOMPATIBLE;2360;0938;RC2360;An MQOPEN or MQPUT1 call, or a command, was issued, but the definition of the object to be accessed is not compatible with the queue manager to which the application has connected. The object definition was created or modified by a different version of the queue manager.;If the object to be accessed is a queue, the incompatible object definition could be the object specified, or one of the object definitions used to resolve the specified object (for example, the base queue to which an alias queue resolves, or the transmission queue to which a remote queue or queue-manager alias resolves).;This reason code occurs only on z/OS®.;MQCC_FAILED;The application must be run on a queue manager that is compatible with the object definition. Refer to the WebSphere® MQ for z/OS Concepts and Planning Guide and the WebSphere MQ for z/OS System Setup Guide for information about compatibility and migration between different versions of the queue manager.;
MQRC_OBJECT_NAME_ERROR;2152;0868;RC2152;An MQOPEN or MQPUT1 call was issued to open a distribution list (that is, the RecsPresent field in MQOD is greater than zero), but the ObjectName field is neither blank nor the null string.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;If it is intended to open a distribution list, set the ObjectName field to blanks or the null string. If it is not intended to open a distribution list, set the RecsPresent field to zero.;
MQRC_OBJECT_NOT_UNIQUE;2343;0927;RC2343;An MQOPEN or MQPUT1 call, or a command, was issued to access a queue, but the call failed because the queue specified cannot be resolved unambiguously. There exists a shared queue with the specified name, and a nonshared queue with the same name.;This reason code occurs only on z/OS®.;MQCC_FAILED;One of the queues must be deleted. If the queue to be deleted contains messages, use the MQSC command MOVE QLOCAL to move the messages to a different queue, and then use the command DELETE QLOCAL to delete the queue.;
MQRC_OBJECT_Q_MGR_NAME_ERROR;2153;0869;RC2153;An MQOPEN or MQPUT1 call was issued to open a distribution list (that is, the RecsPresent field in MQOD is greater than zero), but the ObjectQMgrName field is neither blank nor the null string.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;If it is intended to open a distribution list, set the ObjectQMgrName field to blanks or the null string. If it is not intended to open a distribution list, set the RecsPresent field to zero.;
MQRC_OBJECT_RECORDS_ERROR;2155;086B;RC2155;An MQOPEN or MQPUT1 call was issued to open a distribution list (that is, the RecsPresent field in MQOD is greater than zero), but the MQOR object records are not specified correctly. One of the following applies: ObjectRecOffset is zero and ObjectRecPtr is zero or the null pointer. ObjectRecOffset is not zero and ObjectRecPtr is not zero and not the null pointer. ObjectRecPtr is not a valid pointer. ObjectRecPtr or ObjectRecOffset points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that one of ObjectRecOffset and ObjectRecPtr is zero and the other nonzero. Ensure that the field used points to accessible storage.;
MQRC_OBJECT_STRING_ERROR;2441;0989;RC2441;On the MQOPEN or MQPUT1 call in the Object Descriptor MQOD, or on the MQSUB call in the Subscription Descriptor MQSD the ObjectString field is not valid.;One of the following applies: ObjectString.VSLength is greater than zero, but ObjectString.VSOffset is zero and ObjectString.VSPtr is the null pointer. ObjectString.VSOffset is nonzero and ObjectString.VSPtr is not the null pointer (that is, it appears both fields are being used where only one is allowed). ObjectString.VSPtr is not a valid pointer. ObjectString.VSOffset or ObjectString.VSPtr points to storage that is not accessible. ObjectString.VSLength exceeds the maximum length allowed for this field.;MQCC_FAILED;Ensure that one of ObjectString.VSOffset or ObjectString.VSPtr is zero and the other nonzero. Ensure that the field used points to accessible storage. Specify a length that does not exceed the maximum length allowed for this field.;
MQRC_OBJECT_TYPE_ERROR;2043;07FB;RC2043;On the MQOPEN or MQPUT1 call, the ObjectType field in the object descriptor MQOD specifies a value that is not valid. For the MQPUT1 call, the object type must be MQOT_Q.;MQCC_FAILED;Specify a valid object type.;
MQRC_OCSP_URL_ERROR;2553;09F9;RC2553;
MQRC_OD_ERROR;2044;07FC;RC2044;On the MQOPEN or MQPUT1 call, the object descriptor MQOD is not valid, for one of the following reasons: The StrucId field is not MQOD_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQOD structure are set correctly.;
MQRC_OFFSET_ERROR;2251;08CB;RC2251;An MQPUT or MQPUT1 call was issued, but the value of the Offset field in the MQMD or MQMDE structure is less than zero or greater than 999 999 999.;This error can also occur on the MQPUT call if the Offset field would have become greater than 999 999 999 as a result of the call.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify a value in the range 0 through 999 999 999. Do not attempt to create a message segment that would extend beyond an offset of 999 999 999.;
MQRC_OPEN_FAILED;2137;0859;RC2137;A queue or other MQ object could not be opened successfully, for one of the following reasons: An MQCONN or MQCONNX call was issued, but the queue manager was unable to open an object that is used internally by the queue manager. As a result, processing cannot continue. The error log will contain the name of the object that could not be opened. An MQPUT call was issued to put a message to a distribution list, but the message could not be sent to the destination to which this reason code applies because that destination was not opened successfully by the MQOPEN call. This reason occurs only in the Reason field of the MQRR response record.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Do one of the following: If the error occurred on the MQCONN or MQCONNX call, ensure that the required objects exist by running the following command and then retrying the application: STRMQM -c qmgr where qmgr should be replaced by the name of the queue manager. If the error occurred on the MQPUT call, examine the MQRR response records specified on the MQOPEN call to determine the reason that the queue failed to open. Ensure that sufficient response records are provided by the application on the call to enable the error(s) to be determined.;
MQRC_OPERATION_ERROR;2488;09B8;RC2488;An MQCTL or MQCB call was made with an invalid Operation parameter.;MQCC_FAILED;Ensure that a valid value for Operation is specified.;
MQRC_OPERATION_NOT_ALLOWED;2449;0991;RC2449;An MQCTL call was made with an Operation that is not allowed because of the state of asynchronous consumption on the hConn is currently in.;If Operation was MQOP_RESUME, the operation is not allowed because the state of asynchronous consumption on the hConn is STOPPED. Re-issue MQCTL with the MQOP_START Operation.;If Operation was MQOP_SUSPEND, the operation is not allowed because the state of asynchronous consumption on the hConn is STOPPED. If you need to get your hConn into a SUSPENDED state, issue MQCTL with the MQOP_START Operation followed by MQCTL with MQOP_SUSPEND.;If Operation was MQOP_START, the operation is not allowed because the state of asynchronous consumption on the hConn is SUSPENDED. Re-issue MQCTL with the MQOP_RESUME Operation.;If Operation was MQOP_START_WAIT, the operation is not allowed because either The state of asynchronous consumption on the hConn is SUSPENDED. Re-issue MQCTL with the MQOP_RESUME Operation. The state of asynchronous consumption on the hConn is already STARTED. Do not mix the use of MQOP_START and MQOP_START_WAIT within one application.;MQCC_FAILED;Re-issue the MQCTL call with the correct Operation.;
MQRC_OPERATION_NOT_ALLOWED;2534;09E6;RC2534;An MQCTL call was made with an Operation that is not allowed because of the state of asynchronous consumption on the hConn is currently in.;If Operation was MQOP_RESUME, the operation is not allowed because the state of asynchronous consumption on the hConn is STOPPED. Re-issue MQCTL with the MQOP_START Operation.;If Operation was MQOP_SUSPEND, the operation is not allowed because the state of asynchronous consumption on the hConn is STOPPED. If you need to get your hConn into a SUSPENDED state, issue MQCTL with the MQOP_START Operation followed by MQCTL with MQOP_SUSPEND.;If Operation was MQOP_START, the operation is not allowed because the state of asynchronous consumption on the hConn is SUSPENDED. Re-issue MQCTL with the MQOP_RESUME Operation.;If Operation was MQOP_START_WAIT, the operation is not allowed because either: The state of asynchronous consumption on the hConn is SUSPENDED. Re-issue MQCTL with the MQOP_RESUME Operation. The state of asynchronous consumption on the hConn is already STARTED. Do not mix the use of MQOP_START and MQOP_START_WAIT within one application.;MQCC_FAILED;Re-issue the MQCTL call with the correct Operation.;
MQRC_OPTIONS_CHANGED;2457;0999;RC2457;An MQGET call on a queue handle opened using MQOO_READ_AHEAD (or resolved to that value through the queue’s default value) has altered an option that is required to be consistent between MQGET calls.;MQCC_FAILED;Keep all required MQGET options the same between invocations of MQGET, or use MQOO_NO_READ_AHEAD when opening the queue.;
MQRC_OPTIONS_ERROR;2046;07FE;RC2046;The Options parameter or field contains options that are not valid, or a combination of options that is not valid. For the MQOPEN, MQCLOSE, MQXCNVC, mqBagToBuffer, mqBufferToBag, mqCreateBag, and mqExecute calls, Options is a separate parameter on the call. This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) For the MQBEGIN, MQCONNX, MQGET, MQPUT, and MQPUT1 calls, Options is a field in the relevant options structure (MQBO, MQCNO, MQGMO, or MQPMO).;This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify valid options. Check the description of the Options parameter or field to determine which options and combinations of options are valid. If multiple options are being set by adding the individual options together, ensure that the same option is not added twice. For more information, see Rules for validating MQI options.;
MQRC_OPTION_ENVIRONMENT_ERROR;2274;08E2;RC2274;An MQGET call with the MQGMO_MARK_SKIP_BACKOUT option specified was issued from a DB2® Stored Procedure. The call failed because the MQGMO_MARK_SKIP_BACKOUT option cannot be used from a DB2 Stored Procedure.;This reason code occurs only on z/OS®.;MQCC_FAILED;Remove the MQGMO_MARK_SKIP_BACKOUT option from the MQGET call.;
MQRC_OPTION_NOT_VALID_FOR_TYPE;2045;07FD;RC2045;On an MQOPEN or MQCLOSE call, an option is specified that is not valid for the type of object or queue being opened or closed.;For the MQOPEN call, this includes the following cases: An option that is inappropriate for the object type (for example, MQOO_OUTPUT for an MQOT_PROCESS object). An option that is unsupported for the queue type (for example, MQOO_INQUIRE for a remote queue that has no local definition). One or more of the following options: MQOO_INPUT_AS_Q_DEF MQOO_INPUT_SHARED MQOO_INPUT_EXCLUSIVE MQOO_BROWSE MQOO_INQUIRE MQOO_SET when either: the queue name is resolved through a cell directory, or ObjectQMgrName in the object descriptor specifies the name of a local definition of a remote queue (in order to specify a queue-manager alias), and the queue named in the RemoteQMgrName attribute of the definition is the name of the local queue manager.;For the MQCLOSE call, this includes the following case: The MQCO_DELETE or MQCO_DELETE_PURGE option when the queue is not a dynamic queue.;This reason code can also occur on the MQOPEN call when the object being opened is of type MQOT_NAMELIST, MQOT_PROCESS, or MQOT_Q_MGR, but the ObjectQMgrName field in MQOD is neither blank nor the name of the local queue manager.;MQCC_FAILED;Specify the correct option. For the MQOPEN call, ensure that the ObjectQMgrName field is set correctly. For the MQCLOSE call, either correct the option or change the definition type of the model queue that is used to create the new queue.;
MQRC_ORIGINAL_LENGTH_ERROR;2252;08CC;RC2252;An MQPUT or MQPUT1 call was issued to put a report message that is a segment, but the OriginalLength field in the MQMD or MQMDE structure is either: Less than the length of data in the message, or Less than one (for a segment that is not the last segment), or Less than zero (for a segment that is the last segment);This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify a value that is greater than zero. Zero is valid only for the last segment.;
MQRC_OUTCOME_MIXED;2123;084B;RC2123;The queue manager is acting as the unit-of-work coordinator for a unit of work that involves other resource managers, but one of the following occurred: An MQCMIT or MQDISC call was issued to commit the unit of work, but one or more of the participating resource managers backed-out the unit of work instead of committing it. As a result, the outcome of the unit of work is mixed. An MQBACK call was issued to back out a unit of work, but one or more of the participating resource managers had already committed the unit of work.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Examine the queue-manager error logs for messages relating to the mixed outcome; these messages identify the resource managers that are affected. Use procedures local to the affected resource managers to resynchronize the resources.;This reason code does not prevent the application initiating further units of work.;
MQRC_OUTCOME_PENDING;2124;084C;RC2124;The queue manager is acting as the unit-of-work coordinator for a unit of work that involves other resource managers, and an MQCMIT or MQDISC call was issued to commit the unit of work, but one or more of the participating resource managers has not confirmed that the unit of work was committed successfully.;The completion of the commit operation will happen at some point in the future, but there remains the possibility that the outcome will be mixed.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_WARNING;Use the normal error-reporting mechanisms to determine whether the outcome was mixed. If it was, take appropriate action to resynchronize the resources.;This reason code does not prevent the application initiating further units of work.;
MQRC_OUT_SELECTOR_ERROR;2310;0906;RC2310;The OutSelector parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_PAGESET_ERROR;2193;0891;RC2193;An error was encountered with the page set while attempting to access it for a locally defined queue. This could be because the queue is on a page set that does not exist. A console message is issued that tells you the number of the page set in error. For example if the error occurred in the TEST job, and your user identifier is ABCDEFG, the message is: CSQI041I CSQIALLC JOB TEST USER ABCDEFG HAD ERROR ACCESSING PAGE SET 27;If this reason code occurs while attempting to delete a dynamic queue with MQCLOSE, the dynamic queue has not been deleted.;This reason code occurs only on z/OS®.;MQCC_FAILED;Check that the storage class for the queue maps to a valid page set using the DISPLAY Q(xx) STGCLASS, DISPLAY STGCLASS(xx), and DISPLAY USAGE PSID commands. If you are unable to resolve the problem, notify the system programmer who should: Collect the following diagnostic information: A description of the actions that led to the error A listing of the application program being run at the time of the error Details of the page sets defined for use by the queue manager Attempt to re-create the problem, and take a system dump immediately after the error occurs Contact your IBM® Support Center;
MQRC_PAGESET_FULL;2192;0890;RC2192;Former name for MQRC_STORAGE_MEDIUM_FULL.;;;
MQRC_PARAMETER_MISSING;2321;0911;RC2321;An administration message requires a parameter that is not present in the administration bag. This reason code occurs only for bags created with the MQCBO_ADMIN_BAG or MQCBO_REORDER_AS_REQUIRED options.;MQCC_FAILED;Review the description of the administration command being issued, and ensure that all required parameters are present in the bag.;
MQRC_PARTIALLY_CONVERTED;2272;08E0;RC2272;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, one or more MQ header structures in the message data could not be converted to the specified target character set or encoding. In this situation, the MQ header structures are converted to the queue-manager’s character set and encoding, and the application data in the message is converted to the target character set and encoding. On return from the call, the values returned in the various CodedCharSetId and Encoding fields in the MsgDesc parameter and MQ header structures indicate the character set and encoding that apply to each part of the message. The call completes with MQCC_WARNING.;This reason code usually occurs when the specified target character set is one that causes the character strings in the MQ header structures to expand beyond the lengths of their fields. Unicode character set UCS-2 is an example of a character set that causes this to happen.;MQCC_FAILED;If this is an expected situation, no corrective action is required.;If this is an unexpected situation, check that the MQ header structures contain valid data. If they do, specify as the target character set a character set that does not cause the strings to expand.;
MQRC_PARTICIPANT_NOT_AVAILABLE;2122;084A;RC2122;An MQBEGIN call was issued to start a unit of work coordinated by the queue manager, but one or more of the participating resource managers that had been registered with the queue manager is not available. As a result, changes to those resources cannot be coordinated by the queue manager in the unit of work.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows.;MQCC_WARNING;If the application does not require non-MQ resources to participate in the unit of work, this reason code can be ignored. Otherwise consult your system programmer to determine why the required resource managers are not available. The resource manager may have been halted temporarily, or there may be an error in the queue manager's configuration file.;
MQRC_PCF_ERROR;2149;0865;RC2149;An MQPUT or MQPUT1 call was issued to put a message containing PCF data, but the length of the message does not equal the sum of the lengths of the PCF structures present in the message. This can occur for messages with the following format names: MQFMT_ADMIN MQFMT_EVENT MQFMT_PCF;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that the length of the message specified on the MQPUT or MQPUT1 call equals the sum of the lengths of the PCF structures contained within the message data.;
MQRC_PD_ERROR;2482;09B2;RC2482;On an MQSETMP or MQINQMP call, the property descriptor structure MQPD is not valid, for one of the following reasons: The StrucId field is not MQPD_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The Context field contains an unrecognized value.;MQCC_FAILED;Ensure that input fields in the MQPD structure are set correctly.;
MQRC_PERSISTENCE_ERROR;2047;07FF;RC2047;On an MQPUT or MQPUT1 call, the value specified for the Persistence field in the message descriptor MQMD is not valid.;MQCC_FAILED;Specify one of the following values: MQPER_PERSISTENT MQPER_NOT_PERSISTENT MQPER_PERSISTENCE_AS_Q_DEF;
MQRC_PERSISTENT_NOT_ALLOWED;2048;0800;RC2048;On an MQPUT or MQPUT1 call, the value specified for the Persistence field in MQMD (or obtained from the DefPersistence queue attribute) specifies MQPER_PERSISTENT, but the queue on which the message is being placed does not support persistent messages. Persistent messages cannot be placed on temporary dynamic queues.;This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;MQCC_FAILED;Specify MQPER_NOT_PERSISTENT if the message is to be placed on a temporary dynamic queue. If persistence is required, use a permanent dynamic queue or predefined queue in place of a temporary dynamic queue.;Be aware that server applications are recommended to send reply messages (message type MQMT_REPLY) with the same persistence as the original request message (message type MQMT_REQUEST). If the request message is persistent, the reply queue specified in the ReplyToQ field in the message descriptor MQMD cannot be a temporary dynamic queue. Use a permanent dynamic queue or predefined queue as the reply queue in this situation.;On z/OS®, you cannot put persistent messages to a shared queue if the CFSTRUCT that the queue uses is defined with RECOVER(NO). Either put only non-persistent messages to this queue or change the queue definition to RECOVER(YES). If you put a persistent message to a queue that uses a CFSTRUCT with RECOVER(NO) the put will fail with MQRC_PERSISTENT_NOT_ALLOWED.;
MQRC_PMO_ERROR;2173;087D;RC2173;On an MQPUT or MQPUT1 call, the MQPMO structure is not valid, for one of the following reasons: The StrucId field is not MQPMO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQPMO structure are set correctly.;
MQRC_PMO_RECORD_FLAGS_ERROR;2158;086E;RC2158;An MQPUT or MQPUT1 call was issued to put a message, but the PutMsgRecFields field in the MQPMO structure is not valid, for one of the following reasons: The field contains flags that are not valid. The message is being put to a distribution list, and put message records have been provided (that is, RecsPresent is greater than zero, and one of PutMsgRecOffset or PutMsgRecPtr is nonzero), but PutMsgRecFields has the value MQPMRF_NONE. MQPMRF_ACCOUNTING_TOKEN is specified without either MQPMO_SET_IDENTITY_CONTEXT or MQPMO_SET_ALL_CONTEXT.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that PutMsgRecFields is set with the appropriate MQPMRF_* flags to indicate which fields are present in the put message records. If MQPMRF_ACCOUNTING_TOKEN is specified, ensure that either MQPMO_SET_IDENTITY_CONTEXT or MQPMO_SET_ALL_CONTEXT is also specified. Alternatively, set both PutMsgRecOffset and PutMsgRecPtr to zero.;
MQRC_PRIORITY_ERROR;2050;0802;RC2050;An MQPUT or MQPUT1 call was issued, but the value of the Priority field in the message descriptor MQMD is not valid. The maximum priority supported by the queue manager is given by the MaxPriority queue-manager attribute.;MQCC_FAILED;Specify a value in the range zero through MaxPriority, or the special value MQPRI_PRIORITY_AS_Q_DEF.;
MQRC_PRIORITY_EXCEEDS_MAXIMUM;2049;0801;RC2049;An MQPUT or MQPUT1 call was issued, but the value of the Priority field in the message descriptor MQMD exceeds the maximum priority supported by the local queue manager, as shown by the MaxPriority queue-manager attribute. The message is accepted by the queue manager, but is placed on the queue at the queue manager’s maximum priority. The Priority field in the message descriptor retains the value specified by the application that put the message.;MQCC_WARNING;None required, unless this reason code was not expected by the application that put the message.;
MQRC_PROPERTIES_TOO_BIG;2478;09AE;RC2478;An MQPUT or MQPUT1 call was issued to put a message on a queue, but the properties of the message were too large. The length of the properties cannot exceed the value of the MaxPropertiesLength queue manager attribute.;MQCC_FAILED;Do one of the following: Reduce the number or the size of the properties associated with the message. This could include moving some of the properties into the application data. Increase the value of the MaxPropertiesLength queue manager attribute.;
MQRC_PROPERTY_NAME_ERROR;2442;098A;RC2442;An attempt was made to set a property with an invalid name. This is for one of the following reasons: The name contained an invalid character. The name begins “JMS” or “usr.JMS” and the JMS property is not recognized. The name begins “mq” (except “mq_usr”), “jms”, “mcd”, “usr” or “sib” (in any mixture of lower or uppercase) and contains more than one “.” character (U+002E). Multiple “.” characters are not allowed in properties with those prefixes. The name is “NULL”, “TRUE”, “FALSE”, “NOT”, “AND”, “OR”, “BETWEEN”, “LIKE”, “IN”, “IS” and “ESCAPE” or is one of these keywords prefixed by “usr.”. The name begins with “Body” or “Root” (except for names beginning “Root.MQMD.”). A “.” character must not be followed immediately by another “.” character. The “.” character cannot be the last character in a property name.;MQCC_FAILED;Valid property names are described in the WebSphere MQ documentation. Ensure that all properties in the message have valid names before re-issuing the call.;
MQRC_PROPERTY_NAME_LENGTH_ERR;2513;09D1;RC2513;An attempt was made to set, inquire or delete a property with an invalid name. This is for one of the following reasons: The VSLength field of the property name was set to less than or equal to zero. The VSLength field of the property name was set to greater than the maximum allowed value (see constant MQ_MAX_PROPERTY_NAME_LENGTH). The VSLength field of the property name was set to MQVS_NULL_TERMINATED and the property name was greater than the maximum allowed value.;MQCC_FAILED;Valid property names are described in the WebSphere MQ documentation. Ensure that the property has a valid name length before issuing the call again.;
MQRC_PROPERTY_NAME_TOO_BIG;2465;09A1;RC2465;On an MQINQMP call, WebSphere MQ attempted to copy the name of the inquired property into the location indicated by the ReturnedName field of the InqPropOpts parameter but the buffer was too small to contain the full property name. The call failed but the VSLength field of the ReturnedName of the InqPropOpts parameter indicates how large the ReturnedName buffer needs to be.;MQCC_FAILED;The full property name can be retrieved by calling MQINQMP again with a larger buffer for the returned name, also specifying the MQIMPO_INQ_PROP_UNDER_CURSOR option. This will inquire on the same property.;
MQRC_PROPERTY_NOT_AVAILABLE;2471;09A7;RC2471;On an MQINQMP call, no property could be found that matched the specified name. When iterating through multiple properties, possibly using a name containing a wildcard character, this indicates that all properties matching the name have now been returned.;MQCC_FAILED;Ensure that the correct property name was specified. If the name contains a wildcard character specify option MQIMPO_INQ_FIRST to begin iterating over the properties again.;
MQRC_PROPERTY_TYPE_ERROR;2473;09A9;RC2473;On an MQSETMP call, the Type parameter does not specify a valid MQTYPE_* value. For properties beginning “Root.MQMD.” or “JMS” the specified Type must correspond to the data type of the matching MQMD or JMS header field: For MQCHARn or Java String fields use MQTYPE_STRING. For MQLONG or Java int fields use MQTYPE_INT32. For MQBYTEn fields use MQTYPE_BYTE_STRING. For Java long fields use MQTYPE_INT64. On an MQINQMP call, the Type parameter is not valid. Either the parameter pointer is not valid, the value is invalid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_PROPERTY_VALUE_TOO_BIG;2469;09A5;RC2469;On an MQINQMP call, the property value was too large to fit into the supplied buffer. The DataLength field is set to the length of the property value before truncation and the Value parameter contains as much of the value as fits.;On an MQMHBUF call, the BufferLength was less than the size of the properties to be put in the buffer. In this case the call fails. The DataLength field is set to the length of the properties before truncation.;MQCC_WARNING;Supply a buffer that is at least as large as DataLength if all of the property value data is required and call MQINQMP again with the MQIMPO_INQ_PROP_UNDER_CURSOR option specified.;
MQRC_PROP_CONV_NOT_SUPPORTED;2470;09A6;RC2470;On an MQINQMP call, the MQIMPO_CONVERT_TYPE option was specified to request that the property value be converted to the supplied data type before the call returned. Conversion between the actual and requested property data types is not supported. The Type parameter indicates the data type of the property value.;MQCC_FAILED;Either call MQINQMP again without MQIMPO_CONVERT_TYPE specified, or request a data type for which conversion is supported.;
MQRC_PROP_NAME_NOT_CONVERTED;2492;09BC;RC2492;An MQINQMP call was issued with the MQIMPO_CONVERT_VALUE option specified in the InqPropOpts parameter, but an error occurred during conversion of the returned name of the property. The returned name is unconverted;MQCC_WARNING;Check that the character set of the returned name was correctly described when the property was set. Also check that these values, and the RequestedCCSID and RequestedEncoding specified in the InqPropOpts parameter of the MQINQMP call, are supported for MQ conversion. If the required conversion is not supported, conversion must be carried out by the application.;
MQRC_PROP_NUMBER_FORMAT_ERROR;2472;09A8;RC2472;On an MQINQMP call, conversion of the property value was requested. The format of the property is invalid for conversion to the requested data type.;MQCC_FAILED;Ensure that the correct property name and data type were specified. Ensure that the application setting the property gave it the correct format. See the documentation for the MQINQMP call for details on the formats required for data conversion of property values.;
MQRC_PROP_TYPE_NOT_SUPPORTED;2467;09A3;RC2467;An MQINQMP call was issued and the property inquired has an unsupported data type. A string representation of the value is returned and the TypeString field of the InqPropOpts parameter can be used to determine the data type of the property.;MQCC_WARNING;Check whether the property value was intended to have a data type indicated by the TypeString field. If so the application must decide how to interpret the value. If not modify the application that set the property to give it a supported data type.;
MQRC_PROP_VALUE_NOT_CONVERTED;2466;09A2;RC2466;An MQINQMP call was issued with the MQIMPO_CONVERT_VALUE option specified in the InqPropOpts parameter, but an error occurred during conversion of the value of the property. The property value is returned unconverted, the values of the ReturnedCCSID and ReturnedEncoding fields in the InqPropOpts parameter are set to those of the value returned.;MQCC_FAILED;Check that the property value is correctly described by the ValueCCSID and ValueEncoding parameters that were specified when the property was set. Also check that these values, and the RequestedCCSID and RequestedEncoding specified in the InqPropOpts parameter of the MQINQMP call, are supported for MQ conversion. If the required conversion is not supported, conversion must be carried out by the application.;
MQRC_PUBLICATION_FAILURE;2502;09C6;RC2502;An MQPUT or MQPUT1 call was issued to publish a message on a topic. Delivery of the publication to one of the subscribers failed and due to the combination of the syncpoint option used and either: • The PMSGDLV attribute on the administrative TOPIC object if it was a persistent message. • The NPMSGDLV attribute on the administrative TOPIC object if it was a non-persistent message. The publication has not been delivered to any of the subscribers.;MQCC_FAILED;Find the subscriber or subscribers who are having problems with their subscription queue and resolve the problem, or change the setting of the PMSGDLV or NPMSGDLV attributes on the TOPIC so that problems with one subscriber do not have an effect on other subscribers. Retry the MQPUT.;
MQRC_PUBSUB_INHIBITED;2531;09E3;RC2531;MQSUB, MQOPEN, MQPUT and MQPUT1 calls are currently inhibited for all publish/subscribe topics, either by means of the queue manager attribute PSMODE or because processing of publish/subscribe state at queue manager start-up has failed, or has not yet completed.;MQCC_FAILED;If this queue manager does not intentionally inhibit publish/subscribe, investigate any error messages that describe the failure at queue manager start-up, or wait until start-up processing completes. If the queue manager is a member of cluster, then start-up is not complete until the channel initiator has also started. On z/OS if you get this return code from the Chinit for the SYSTEM.BROKER.DEFAULT.STREAM queue and/or topic, then the Chinit is busy processing work, and the pubsub task will start later. Use the DISPLAY PUBSUB command to check the status of the publish/subscribe engine to ensure it is ready for use, and additionally on z/OS you will receive an information message CSQM076I.;
MQRC_PUT_INHIBITED;2051;0803;RC2051;MQPUT and MQPUT1 calls are currently inhibited for the queue, or for the queue to which this queue resolves.;This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;MQCC_FAILED;If the system design allows put requests to be inhibited for short periods, retry the operation later.;
MQRC_PUT_MSG_RECORDS_ERROR;2159;086F;RC2159;An MQPUT or MQPUT1 call was issued to put a message to a distribution list, but the MQPMR put message records are not specified correctly. One of the following applies: PutMsgRecOffset is not zero and PutMsgRecPtr is not zero and not the null pointer. PutMsgRecPtr is not a valid pointer. PutMsgRecPtr or PutMsgRecOffset points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that at least one of PutMsgRecOffset and PutMsgRecPtr is zero. Ensure that the field used points to accessible storage.;
MQRC_PUT_NOT_RETAINED;2479;09AF;RC2479;An MQPUT or MQPUT1 call was issued to publish a message on a topic, using the MQPMO_RETAIN option, but the publication was unable to be retained. The publication is not published to any matching subscribers.;MQCC_FAILED;Retained publications are stored on the SYSTEM.RETAINED.PUB.QUEUE. Ensure that this queue is available for use by the application. Possible reasons for failure include the queue being full, the queue being put inhibited, or the queue not existing.;
MQRC_Q_ALREADY_EXISTS;2290;08F2;RC2290;This reason should be returned by the MQZ_INSERT_NAME installable service component when the queue specified by the QName parameter is already defined to the name service. On z/OS®, this reason code does not occur.;MQCC_FAILED;None. See the WebSphere MQ System Administration Guide book for information about installable service.;
MQRC_Q_DELETED;2052;0804;RC2052;An Hobj queue handle specified on a call refers to a dynamic queue that has been deleted since the queue was opened. (See the description of MQCLOSE in the WebSphere MQ Application Programming Reference for information about the deletion of dynamic queues.) On z/OS®, this can also occur with the MQOPEN and MQPUT1 calls if a dynamic queue is being opened, but the queue is in a logically-deleted state. See MQCLOSE for more information about this.;MQCC_FAILED;Issue an MQCLOSE call to return the handle and associated resources to the system (the MQCLOSE call will succeed in this case). Check the design of the application that caused the error.;
MQRC_Q_DEPTH_HIGH;2224;08B0;RC2224;An MQPUT or MQPUT1 call has caused the queue depth to be incremented to or above the limit specified in the QDepthHighLimit attribute.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_DEPTH_LOW;2225;08B1;RC2225;An MQGET call has caused the queue depth to be decremented to or below the limit specified in the QDepthLowLimit attribute.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_FULL;2053;0805;RC2053;An MQPUT or MQPUT1 call, or a command, failed because the queue is full, that is, it already contains the maximum number of messages possible, as specified by the MaxQDepth queue attribute.;This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue.;MQCC_FAILED;Retry the operation later. Consider increasing the maximum depth for this queue, or arranging for more instances of the application to service the queue.;
MQRC_Q_INDEX_TYPE_ERROR;2394;095A;RC2394;An MQGET call was issued specifying one or more of the following options: MQGMO_ALL_MSGS_AVAILABLE MQGMO_ALL_SEGMENTS_AVAILABLE MQGMO_COMPLETE_MSG MQGMO_LOGICAL_ORDER but the call failed because the queue is not indexed by group identifier. These options require the queue to have an IndexType of MQIT_GROUP_ID.;This reason code occurs only on z/OS®.;MQCC_FAILED;Redefine the queue to have an IndexType of MQIT_GROUP_ID. Alternatively, modify the application to avoid using the options listed above.;
MQRC_Q_MGR_ACTIVE;2222;08AE;RC2222;This condition is detected when a queue manager becomes active. On z/OS®, this event is not generated for the first start of a queue manager, only on subsequent restarts.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_MGR_NAME_ERROR;2058;080A;RC2058;On an MQCONN or MQCONNX call, the value specified for the QMgrName parameter is not valid or not known. This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) On z/OS® for CICS® applications, this reason can occur on any call if the original connect specified an incorrect or unrecognized name.;This reason code can also occur if an MQ client application attempts to connect to a queue manager within an MQ-client queue-manager group (see the QMgrName parameter of MQCONN), and either: Queue-manager groups are not supported. There is no queue-manager group with the specified name.;MQCC_FAILED;Use an all-blank name if possible, or verify that the name used is valid.;
MQRC_Q_MGR_NOT_ACTIVE;2223;08AF;RC2223;This condition is detected when a queue manager is requested to stop or quiesce.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_MGR_NOT_AVAILABLE;2059;080B;RC2059;This occurs: On an MQCONN or MQCONNX call, the queue manager identified by the QMgrName parameter is not available for connection. On z/OS®: For batch applications, this reason can be returned to applications running in LPARs that do not have a queue manager installed. For CICS® applications, this reason can occur on any call if the original connect specified a queue manager whose name was recognized, but which is not available. On i5/OS®, this reason can also be returned by the MQOPEN and MQPUT1 calls, when MQHC_DEF_HCONN is specified for the Hconn parameter by an application running in compatibility mode. On an MQCONN or MQCONNX call from an MQ client application: Attempting to connect to a queue manager within an MQ-client queue-manager group when none of the queue managers in the group is available for connection (see the QMgrName parameter of the MQCONN call). If the client channel fails to connect, perhaps because of an error with the client-connection or the corresponding server-connection channel definitions. The z/OS Client Attachment feature has not been installed. If a command uses the CommandScope parameter specifying a queue manager that is not active in the queue-sharing group.;MQCC_FAILED;Ensure that the queue manager has been started. If the connection is from a client application, check the channel definitions, channel status, and error logs.;
MQRC_Q_MGR_QUIESCING;2161;0871;RC2161;An MQI call was issued, but the call failed because the queue manager is quiescing (preparing to shut down).;When the queue manager is quiescing, the MQOPEN, MQPUT, MQPUT1, and MQGET calls can still complete successfully, but the application can request that they fail by specifying the appropriate option on the call: MQOO_FAIL_IF_QUIESCING on MQOPEN MQPMO_FAIL_IF_QUIESCING on MQPUT or MQPUT1 MQGMO_FAIL_IF_QUIESCING on MQGET Specifying these options enables the application to become aware that the queue manager is preparing to shut down. On z/OS®: For batch applications, this reason can be returned to applications running in LPARs that do not have a queue manager installed. For CICS® applications, this reason can be returned when no connection was established. On i5/OS® for applications running in compatibility mode, this reason can be returned when no connection was established.;MQCC_FAILED;The application should tidy up and end. If the application specified the MQOO_FAIL_IF_QUIESCING, MQPMO_FAIL_IF_QUIESCING, or MQGMO_FAIL_IF_QUIESCING option on the failing call, the relevant option can be removed and the call reissued. By omitting these options, the application can continue working in order to complete and commit the current unit of work, but the application does not start a new unit of work.;
MQRC_Q_MGR_STOPPING;2162;0872;RC2162;An MQI call was issued, but the call failed because the queue manager is shutting down. If the call was an MQGET call with the MQGMO_WAIT option, the wait has been canceled. No more MQI calls can be issued.;For MQ client applications, it is possible that the call did complete successfully, even though this reason code is returned with a CompCode of MQCC_FAILED. On z/OS®, the MQRC_CONNECTION_BROKEN reason may be returned instead if, as a result of system scheduling factors, the queue manager shuts down before the call completes.;MQCC_FAILED;The application should tidy up and end. If the application is in the middle of a unit of work coordinated by an external unit-of-work coordinator, the application should issue the appropriate call to back out the unit of work. Any unit of work that is coordinated by the queue manager is backed out automatically.;
MQRC_Q_NOT_EMPTY;2055;0807;RC2055;An MQCLOSE call was issued for a permanent dynamic queue, but the call failed because the queue is not empty or still in use. One of the following applies: The MQCO_DELETE option was specified, but there are messages on the queue. The MQCO_DELETE or MQCO_DELETE_PURGE option was specified, but there are uncommitted get or put calls outstanding against the queue. See the usage notes pertaining to dynamic queues for the MQCLOSE call for more information.;This reason code is also returned from a command to clear or delete or move a queue, if the queue contains uncommitted messages (or committed messages in the case of delete queue without the purge option).;MQCC_FAILED;Check why there might be messages on the queue. Be aware that the CurrentQDepth queue attribute might be zero even though there are one or more messages on the queue; this can happen if the messages have been retrieved as part of a unit of work that has not yet been committed. If the messages can be discarded, try using the MQCLOSE call with the MQCO_DELETE_PURGE option. Consider retrying the call later.;
MQRC_Q_SERVICE_INTERVAL_HIGH;2226;08B2;RC2226;No successful gets or puts have been detected within an interval that is greater than the limit specified in the QServiceInterval attribute.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_SERVICE_INTERVAL_OK;2227;08B3;RC2227;A successful get has been detected within an interval that is less than or equal to the limit specified in the QServiceInterval attribute.;MQCC_WARNING;None. This reason code is only used to identify the corresponding event message.;
MQRC_Q_SPACE_NOT_AVAILABLE;2056;0808;RC2056;An MQPUT or MQPUT1 call was issued, but there is no space available for the queue on disk or other storage device.;This reason code can also occur in the Feedback field in the message descriptor of a report message; in this case it indicates that the error was encountered by a message channel agent when it attempted to put the message on a remote queue. On z/OS®, this reason code does not occur.;MQCC_FAILED;Check whether an application is putting messages in an infinite loop. If not, make more disk space available for the queue.;
MQRC_Q_TYPE_ERROR;2057;0809;RC2057;One of the following occurred: On an MQOPEN call, the ObjectQMgrName field in the object descriptor MQOD or object record MQOR specifies the name of a local definition of a remote queue (in order to specify a queue-manager alias), and in that local definition the RemoteQMgrName attribute is the name of the local queue manager. However, the ObjectName field in MQOD or MQOR specifies the name of a model queue on the local queue manager; this is not allowed. See the WebSphere MQ Application Programming Guide for more information. On an MQPUT1 call, the object descriptor MQOD or object record MQOR specifies the name of a model queue. On a previous MQPUT or MQPUT1 call, the ReplyToQ field in the message descriptor specified the name of a model queue, but a model queue cannot be specified as the destination for reply or report messages. Only the name of a predefined queue, or the name of the dynamic queue created from the model queue, can be specified as the destination. In this situation the reason code MQRC_Q_TYPE_ERROR is returned in the Reason field of the MQDLH structure when the reply message or report message is placed on the dead-letter queue.;MQCC_FAILED;Specify a valid queue.;
MQRC_RAS_PROPERTY_ERROR;2229;08B5;RC2229;There is an error related to the RAS property file. The file may be missing, it may be not accessible, or the commands in the file may be incorrect.;MQCC_FAILED;Look at the associated error message, which will explain the error in detail. Correct the error and retry.;
MQRC_READ_AHEAD_MSGS;2458;099A;RC2458;On an MQCLOSE call, the option MQCO_QUIESCE was used and there are still messages stored in client read ahead buffer that were sent to the client ahead of an application requesting them and have not yet been consumed by the application.;MQCC_WARNING;Continue to consume messages using the queue handle until there are no more available and then issue the MQCLOSE again, or choose to discard these messages by issuing the MQCLOSE call with the MQCO_IMMEDIATE option instead.;
MQRC_RECS_PRESENT_ERROR;2154;086A;RC2154;An MQOPEN or MQPUT1 call was issued, but the call failed for one of the following reasons: RecsPresent in MQOD is less than zero. ObjectType in MQOD is not MQOT_Q, and RecsPresent is not zero. RecsPresent must be zero if the object being opened is not a queue.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;If it is intended to open a distribution list, set the ObjectType field to MQOT_Q and RecsPresent to the number of destinations in the list. If it is not intended to open a distribution list, set the RecsPresent field to zero.;
MQRC_REFERENCE_ERROR;6129;17F1;RC6129;An object reference is invalid.;There is a problem with the address of a referenced object. At the time of use, the address of the object is nonnull, but is invalid and cannot be used for its intended purpose.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Check that the referenced object is neither deleted nor out of scope, or remove the reference by supplying a null address value.;
MQRC_REMOTE_Q_NAME_ERROR;2184;0888;RC2184;On an MQOPEN or MQPUT1 call, one of the following occurred: A local definition of a remote queue (or an alias to one) was specified, but the RemoteQName attribute in the remote queue definition is entirely blank. Note that this error occurs even if the XmitQName in the definition is not blank. The ObjectQMgrName field in the object descriptor is not blank and not the name of the local queue manager, but the ObjectName field is blank.;MQCC_FAILED;Alter the local definition of the remote queue and supply a valid remote queue name, or supply a nonblank ObjectName in the object descriptor, as appropriate.;
MQRC_REOPEN_EXCL_INPUT_ERROR;6100;17D4;RC6100;An open object does not have the correct ImqObject open options and requires one or more additional options. An implicit reopen is required but closure has been prevented.;Closure has been prevented because the queue is open for exclusive input and closure might result in the queue being accessed by another process or thread, before the queue is reopened by the process or thread that presently has access.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Set the open options explicitly to cover all eventualities so that implicit reopening is not required.;
MQRC_REOPEN_INQUIRE_ERROR;6101;17D5;RC6101;An open object does not have the correct ImqObject open options and requires one or more additional options. An implicit reopen is required but closure has been prevented.;Closure has been prevented because one or more characteristics of the object need to be checked dynamically prior to closure, and the open options do not already include MQOO_INQUIRE.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Set the open options explicitly to include MQOO_INQUIRE.;
MQRC_REOPEN_SAVED_CONTEXT_ERR;6102;17D6;RC6102;An open object does not have the correct ImqObject open options and requires one or more additional options. An implicit reopen is required but closure has been prevented.;Closure has been prevented because the queue is open with MQOO_SAVE_ALL_CONTEXT, and a destructive get has been performed previously. This has caused retained state information to be associated with the open queue and this information would be destroyed by closure.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Set the open options explicitly to cover all eventualities so that implicit reopening is not required.;
MQRC_REOPEN_TEMPORARY_Q_ERROR;6103;17D7;RC6103;An open object does not have the correct ImqObject open options and requires one or more additional options. An implicit reopen is required but closure has been prevented.;Closure has been prevented because the queue is a local queue of the definition type MQQDT_TEMPORARY_DYNAMIC, that would be destroyed by closure.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;Set the open options explicitly to cover all eventualities so that implicit reopening is not required.;
MQRC_REPORT_OPTIONS_ERROR;2061;080D;RC2061;An MQPUT or MQPUT1 call was issued, but the Report field in the message descriptor MQMD contains one or more options that are not recognized by the local queue manager. The options that cause this reason code to be returned depend on the destination of the message; see the description of REPORT in the WebSphere MQ Application Programming Reference for more details.;This reason code can also occur in the Feedback field in the MQMD of a report message, or in the Reason field in the MQDLH structure of a message on the dead-letter queue; in both cases it indicates that the destination queue manager does not support one or more of the report options specified by the sender of the message.;MQCC_FAILED;Do the following: Ensure that the Report field in the message descriptor is initialized with a value when the message descriptor is declared, or is assigned a value prior to the MQPUT or MQPUT1 call. Specify MQRO_NONE if no report options are required. Ensure that the report options specified are valid; see the Report field described in the description of MQMD in the WebSphere MQ Application Programming Reference for valid report options. If multiple report options are being set by adding the individual report options together, ensure that the same report option is not added twice. Check that conflicting report options are not specified. For example, do not add both MQRO_EXCEPTION and MQRO_EXCEPTION_WITH_DATA to the Report field; only one of these can be specified.;
MQRC_RESERVED_VALUE_ERROR;2378;094A;RC2378;An MQXEP call was issued by an API exit function, but the value specified for the Reserved parameter is not valid. The value must be the null pointer.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Modify the exit to specify the null pointer as the value of the Reserved parameter.;
MQRC_RESOURCE_PROBLEM;2102;0836;RC2102;There are insufficient system resources to complete the call successfully. On z/OS this can indicate DB2 errors occurred when using shared queues.;MQCC_FAILED;Run the application when the machine is less heavily loaded. On z/OS®, check the operator console for messages that may provide additional information. On HP OpenVMS, i5/OS®, Compaq NonStop Kernel, and UNIX systems, consult the FFST™ record to obtain more detail about the problem.;
MQRC_RESPONSE_RECORDS_ERROR;2156;086C;RC2156;An MQOPEN or MQPUT1 call was issued to open a distribution list (that is, the RecsPresent field in MQOD is greater than zero), but the MQRR response records are not specified correctly. One of the following applies: ResponseRecOffset is not zero and ResponseRecPtr is not zero and not the null pointer. ResponseRecPtr is not a valid pointer. ResponseRecPtr or ResponseRecOffset points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Ensure that at least one of ResponseRecOffset and ResponseRecPtr is zero. Ensure that the field used points to accessible storage.;
MQRC_RES_OBJECT_STRING_ERROR;2520;09D8;RC2520;On the MQOPEN or MQPUT1 call in the Object Descriptor MQOD, or on the MQSUB call in the Subscription Descriptor MQSD the ResObjectString field is not valid.;One of the following applies: ResObjectString.VSLength is greater than zero, but ResObjectString.VSOffset is zero and ResObjectString.VSPtr is the null pointer. ResObjectString.VSOffset is nonzero and ResObjectString.VSPtr is not the null pointer (that is, it appears both fields are being used where only one is allowed). ResObjectString.VSPtr is not a valid pointer. ResObjectString.VSOffset or ResObjectString.VSPtr points to storage that is not accessible. ResObjectString.VSBufSize is MQVS_USE_VSLENGTH and one of ResObjectString.VSOffset or ResObjectString.VSPtr have been provided.;MQCC_FAILED;Ensure that one of ResObjectString.VSOffset or ResObjectString.VSPtr is zero and the other nonzero and that the buffer length is provided in ResObjectString.VSBufSize. Ensure that the field used points to accessible storage.;
MQRC_RETAINED_MSG_Q_ERROR;2525;09DD;RC2525;An MQSUB call which did not use the MQSO_NEW_PUBLICATIONS_ONLY option, or an MQSUBRQ call, failed because the retained publications which exist for the topic string subscribed to cannot be retrieved from the SYSTEM.RETAINED.PUB.QUEUE. This can be for one of the following reasons: The queue has become damaged or has been deleted. The queue has been set to GET(DISABLED). Messages have been removed from this queue directly. An error message will be written to the log giving more details about the problem with the SYSTEM.RETAINED.PUB.QUEUE.;When this return code occurs on an MQSUB call, it can only occur using the MQSO_CREATE option, and in this case the subscription is not created.;MQCC_FAILED;If this occurs on an MQSUB call, re-issue the MQSUB call using the option MQSO_NEW_PUBLICATIONS_ONLY, which will mean no previously retained publications are sent to this subscription, or fix the SYSTEM.RETAINED.PUB.QUEUE so that messages can be retrieved from it and re-issue the MQSUB call.;If this occurs on an MQSUBRQ call, fix the SYSTEM.RETAINED.PUB.QUEUE so that messages can be retrieved from it and re-issue the MQSUBRQ call.;
MQRC_RETAINED_NOT_DELIVERED;2526;09DE;RC2526;An MQSUB call which did not use the MQSO_NEW_PUBLICATIONS_ONLY option or an MQSUBRQ call, failed because the retained publications which exist for the topic string subscribed to cannot be delivered to the subscription destination queue and have subsequently failed to be delivered to the dead-letter queue.;When this return code occurs on an MQSUB call, it can only occur using the MQSO_CREATE option, and in this case the subscription is not created.;MQCC_FAILED;Fix the problems with the destination queue and the dead-letter queue and re-issue the MQSUB or MQSUBRQ call.;
MQRC_RFH_COMMAND_ERROR;2336;0920;RC2336;The message contains an MQRFH structure, but the command name contained in the NameValueString field is not valid.;MQCC_FAILED;Modify the application that generated the message to ensure that it places in the NameValueString field a command name that is valid.;
MQRC_RFH_DUPLICATE_PARM;2338;0922;RC2338;The message contains an MQRFH structure, but a parameter occurs more than once in the NameValueString field when only one occurrence is valid for the specified command.;MQCC_FAILED;Modify the application that generated the message to ensure that it places in the NameValueString field only one occurrence of the parameter.;
MQRC_RFH_ERROR;2334;091E;RC2334;An MQPUT or MQPUT1 call was issued, but the message data contains an MQRFH or MQRFH2 structure that is not valid. Possible errors include the following: The StrucId field is not MQRFH_STRUC_ID. The Version field is not MQRFH_VERSION_1 (MQRFH), or MQRFH_VERSION_2 (MQRFH2). The StrucLength field specifies a value that is too small to include the structure plus the variable-length data at the end of the structure. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_RFH_FORMAT_ERROR;2421;0975;RC2421;The message contains an MQRFH structure, but its format is incorrect. If you are using WebSphere® MQ SOAP, the error is in an incoming SOAP/MQ request message.;MQCC_FAILED;If you are using WebSphere MQ SOAP with the IBM-supplied sender, contact your IBM® support center. If you are using WebSphere MQ SOAP with a bespoke sender, check that the RFH2 section of the SOAP/MQ request message is in valid RFH2 format.;
MQRC_RFH_HEADER_FIELD_ERROR;2228;08B4;RC2228;An expected RFH header field was not found or had an invalid value. If this error occurs in a WebSphere® MQ SOAP listener, the missing or erroneous field is either the contentType field or the transportVersion field or both.;MQCC_FAILED;If this error occurs in a WebSphere MQ SOAP listener, and you are using the IBM-supplied sender, contact your IBM® Support Center. If you are using a bespoke sender, check the associated error message, and that the RFH2 section of the SOAP/MQ request message contains all the mandatory fields, and that these fields have valid values.;
MQRC_RFH_PARM_ERROR;2337;0921;RC2337;The message contains an MQRFH structure, but a parameter name contained in the NameValueString field is not valid for the command specified.;MQCC_FAILED;Modify the application that generated the message to ensure that it places in the NameValueString field only parameters that are valid for the specified command.;
MQRC_RFH_PARM_MISSING;2339;0923;RC2339;The message contains an MQRFH structure, but the command specified in the NameValueString field requires a parameter that is not present.;MQCC_FAILED;Modify the application that generated the message to ensure that it places in the NameValueString field all parameters that are required for the specified command.;
MQRC_RFH_RESTRICTED_FORMAT_ERR;2527;09DF;RC2527;A message was put to a queue containing an MQRFH2 header which included a folder with a restricted format. However, the folder was not in the required format. These restrictions are: If NameValueCCSID of the folder is 1208 then only single byte UTF-8 characters are allowed in the folder, group or element names. Groups are not allowed in the folder. The values of properties may not contain any characters that require escaping. Only Unicode character U+0020 will be treated as white space within the folder. The folder tag must not contain the content attribute. The folder must not contain a property with a null value. The <mq> folder requires formatting of this restricted form.;MQCC_FAILED;Change the message to include valid MQRFH2 folders.;
MQRC_RFH_STRING_ERROR;2335;091F;RC2335;The contents of the NameValueString field in the MQRFH structure are not valid. NameValueString must adhere to the following rules: The string must consist of zero or more name/value pairs separated from each other by one or more blanks; the blanks are not significant. If a name or value contains blanks that are significant, the name or value must be enclosed in double-quote characters. If a name or value itself contains one or more double-quote characters, the name or value must be enclosed in double-quote characters, and each embedded double-quote character must be doubled. A name or value can contain any characters other than the null, which acts as a delimiter. The null and characters following it, up to the defined length of NameValueString, are ignored. The following is a valid NameValueString: Famous_Words "The program displayed ""Hello World""";MQCC_FAILED;Modify the application that generated the message to ensure that it places in the NameValueString field data that adheres to the rules listed above. Check that the StrucLength field is set to the correct value.;
MQRC_RMH_ERROR;2220;08AC;RC2220;An MQPUT or MQPUT1 call was issued, but the message data contains an MQRMH structure that is not valid. Possible errors include the following: The StrucId field is not MQRMH_STRUC_ID. The Version field is not MQRMH_VERSION_1. The StrucLength field specifies a value that is too small to include the structure plus the variable-length data at the end of the structure. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field).;
MQRC_SCO_ERROR;2380;094C;RC2380;On an MQCONNX call, the MQSCO structure is not valid for one of the following reasons: The StrucId field is not MQSCO_STRUC_ID. The Version field is not MQSCO_VERSION_1.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Correct the definition of the MQSCO structure.;
MQRC_SD_ERROR;2424;0978;RC2424;On the MQSUB call, the Subscription Descriptor MQSD is not valid, for one of the following reasons: The StrucId field is not MQSD_SCTRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid (it is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results can occur). The queue manager cannot copy the changes structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQSD structure are set correctly.;
MQRC_SECOND_MARK_NOT_ALLOWED;2062;080E;RC2062;An MQGET call was issued specifying the MQGMO_MARK_SKIP_BACKOUT option in the Options field of MQGMO, but a message has already been marked within the current unit of work. Only one marked message is allowed within each unit of work.;This reason code occurs only on z/OS®.;MQCC_FAILED;Modify the application so that no more than one message is marked within each unit of work.;
MQRC_SECURITY_ERROR;2063;080F;RC2063;An MQCONN, MQCONNX, MQOPEN, MQPUT1, or MQCLOSE call was issued, but it failed because a security error occurred. On z/OS®, the security error was returned by the External Security Manager.;MQCC_FAILED;Note the error from the security manager, and contact your system programmer or security administrator. On i5/OS®, the FFST™ log will contain the error information.;
MQRC_SEGMENTATION_NOT_ALLOWED;2443;098B;RC2443;An MQPUT or MQPUT1 call was issued to put a segmented message or a message that may be broken up into smaller segments (MQMF_SEGMENTATION_ALLOWED). The message was found to contain one or more MQ-defined properties in the message data; MQ-defined properties are not valid in the message data of a segmented message.;MQCC_FAILED;Remove the invalid properties from the message data or prevent the message from being segmented.;
MQRC_SEGMENTS_NOT_SUPPORTED;2365;093D;RC2365;An MQPUT call was issued to put a segment of a logical message, but the queue on which the message is to be placed has an IndexType of MQIT_GROUP_ID. Message segments cannot be placed on queues with this index type.;This reason code occurs only on z/OS®.;MQCC_FAILED;Modify the application to put messages that are not segments; ensure that the MQMF_SEGMENT and MQMF_LAST_SEGMENT flags in the MsgFlags field in MQMD are not set, and that the Offset is zero. Alternatively, change the index type of the queue.;
MQRC_SEGMENT_LENGTH_ZERO;2253;08CD;RC2253;An MQPUT or MQPUT1 call was issued to put the first or an intermediate segment of a logical message, but the length of the application message data in the segment (excluding any MQ headers that may be present) is zero. The length must be at least one for the first or intermediate segment.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check the application logic to ensure that segments are put with a length of one or greater. Only the last segment of a logical message is permitted to have a length of zero.;
MQRC_SELECTION_STRING_ERROR;2519;09D7;RC2519;The SelectionString must be specified according to the description of how to use an MQCHARV structure. Examples of why this error was returned: SelectionString.VSLength is greater than zero, but SelectionString.VSOffset is zero and SelectionString.VSPtr is a null pointer. SelectionString.VSOffset is nonzero and SelectionString.VSPtr is not the null pointer (that is, it appears both fields are being used where only one is allowed). SelectionString.VSPtr is not a valid pointer. SelectionString.VSOffset or SelectionString.VSPtr points to storage that is not accessible. SelectionString.VSLength exceeds the maximum length allowed for this field. The maximum length is determined by MQ_SELECTOR_LENGTH.;MQCC_FAILED;Modify the fields of the MQCHARV so that it follows the rules for a valid MQCHARV structure.;
MQRC_SELECTOR_ALWAYS_FALSE;2504;09C8;RC2504;An MQOPEN, MQPUT1 or MQSUB call was issued but a selection string was specified which will never select a message;MQCC_FAILED;Verify that the logic of the selection string which was passed in on the API is as expected. Make any necessary corrections to the logic of the string and resubmit the MQ API call for which the message occurred.;
MQRC_SELECTOR_COUNT_ERROR;2065;0811;RC2065;On an MQINQ or MQSET call, the SelectorCount parameter specifies a value that is not valid. This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Specify a value in the range 0 through 256.;
MQRC_SELECTOR_ERROR;2067;0813;RC2067;An MQINQ or MQSET call was issued, but the Selectors array contains a selector that is not valid for one of the following reasons: The selector is not supported or out of range. The selector is not applicable to the type of object whose attributes are being inquired or set. The selector is for an attribute that cannot be set. This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that the value specified for the selector is valid for the object type represented by Hobj. For the MQSET call, also ensure that the selector represents an integer attribute that can be set.;
MQRC_SELECTOR_INVALID_FOR_TYPE;2516;09D4;RC2516;A SelectionString may only be specified in the MQOD for an MQOPEN/MQPUT1 if the following is true: ObjectType is MQOT_Q The queue is being opened using one of the MQOO_INPUT_* open options.;MQCC_FAILED;Modify the value of ObjectType to be MQOT_Q and ensure that the queue is being opened using one of the MQOO_INPUT_* options.;
MQRC_SELECTOR_LIMIT_EXCEEDED;2066;0812;RC2066;On an MQINQ or MQSET call, the SelectorCount parameter specifies a value that is larger than the maximum supported (256).;MQCC_FAILED;Reduce the number of selectors specified on the call; the valid range is 0 through 256.;
MQRC_SELECTOR_NOT_ALTERABLE;2524;09DC;RC2524;An MQSUB call was issued with the MQSO_ALTER option and the MQSD contained a SelectionString. It is not valid to alter the SelectionString of a subscription.;MQCC_FAILED;Ensure that the SelectionString field of the MQSD does not contain a valid VSPtr and that the VSLength is set to zero when making a call to MQSUB.;
MQRC_SELECTOR_NOT_FOR_TYPE;2068;0814;RC2068;On the MQINQ call, one or more selectors in the Selectors array is not applicable to the type of the queue whose attributes are being inquired.;This reason also occurs when the queue is a cluster queue that resolved to a remote instance of the queue. In this case only a subset of the attributes that are valid for local queues can be inquired. See the usage notes in the description of MQINQ in the WebSphere MQ Application Programming Reference for further details.;The call completes with MQCC_WARNING, with the attribute values for the inapplicable selectors set as follows: For integer attributes, the corresponding elements of IntAttrs are set to MQIAV_NOT_APPLICABLE. For character attributes, the appropriate parts of the CharAttrs string are set to a character string consisting entirely of asterisks (*).;MQCC_WARNING;Verify that the selector specified is the one that was intended.;If the queue is a cluster queue, specifying one of the MQOO_BROWSE, MQOO_INPUT_*, or MQOO_SET options in addition to MQOO_INQUIRE forces the queue to resolve to the local instance of the queue. However, if there is no local instance of the queue the MQOPEN call fails.;
MQRC_SELECTOR_NOT_PRESENT;2309;0905;RC2309;The Selector parameter specifies a selector that does not exist in the bag.;MQCC_FAILED;Specify a selector that does exist in the bag.;
MQRC_SELECTOR_NOT_SUPPORTED;2318;090E;RC2318;The Selector parameter specifies a value that is a system selector (a value that is negative), but the system selector is not one that is supported by the call.;MQCC_FAILED;Specify a selector value that is supported.;
MQRC_SELECTOR_NOT_UNIQUE;2305;0901;RC2305;The ItemIndex parameter has the value MQIND_NONE, but the bag contains more than one data item with the selector value specified by the Selector parameter. MQIND_NONE requires that the bag contain only one occurrence of the specified selector.;This reason code also occurs on the mqExecute call when the administration bag contains two or more occurrences of a selector for a required parameter that permits only one occurrence.;MQCC_FAILED;Check the logic of the application that created the bag. If correct, specify for ItemIndex a value that is zero or greater, and add application logic to process all of the occurrences of the selector in the bag.;Review the description of the administration command being issued, and ensure that all required parameters are defined correctly in the bag.;
MQRC_SELECTOR_OUT_OF_RANGE;2304;0900;RC2304;The Selector parameter has a value that is outside the valid range for the call. If the bag was created with the MQCBO_CHECK_SELECTORS option: For the mqAddInteger call, the value must be within the range MQIA_FIRST through MQIA_LAST. For the mqAddString call, the value must be within the range MQCA_FIRST through MQCA_LAST.;If the bag was not created with the MQCBO_CHECK_SELECTORS option: The value must be zero or greater.;MQCC_FAILED;Specify a valid value.;
MQRC_SELECTOR_SYNTAX_ERROR;2459;099B;RC2459;An MQOPEN, MQPUT1 or MQSUB call was issued but a selection string was specified which contained a syntax error.;MQCC_FAILED;Consult the document Message selector syntax and ensure that you have correctly followed the rules for specifying selection strings. Correct any syntax errors and resubmit the MQ API call for which the error occurred.;
MQRC_SELECTOR_TYPE_ERROR;2299;08FB;RC2299;The Selector parameter has the wrong data type; it must be of type Long.;MQCC_FAILED;Declare the Selector parameter as Long.;
MQRC_SELECTOR_WRONG_TYPE;2312;0908;RC2312;A data item with the specified selector exists in the bag, but has a data type that conflicts with the data type implied by the call being used. For example, the data item might have an integer data type, but the call being used might be mqSetString, which implies a character data type.;This reason code also occurs on the mqBagToBuffer, mqExecute, and mqPutBag calls when mqAddString or mqSetString was used to add the MQIACF_INQUIRY data item to the bag.;MQCC_FAILED;For the mqSetInteger and mqSetString calls, specify MQIND_ALL for the ItemIndex parameter to delete from the bag all existing occurrences of the specified selector before creating the new occurrence with the required data type.;For the mqInquireBag, mqInquireInteger, and mqInquireString calls, use the mqInquireItemInfo call to determine the data type of the item with the specified selector, and then use the appropriate call to determine the value of the data item.;For the mqBagToBuffer, mqExecute, and mqPutBag calls, ensure that the MQIACF_INQUIRY data item is added to the bag using the mqAddInteger or mqSetInteger calls.;
MQRC_SERVICE_ERROR;2289;08F1;RC2289;This reason should be returned by an installable service component when the component encounters an unexpected error. On z/OS®, this reason code does not occur.;MQCC_FAILED;Correct the error and retry the operation.;
MQRC_SERVICE_NOT_AVAILABLE;2285;08ED;RC2285;This reason should be returned by an installable service component when the requested action cannot be performed because the required underlying service is not available. On z/OS®, this reason code does not occur.;MQCC_FAILED;Make the underlying service available.;
MQRC_SIGNAL1_ERROR;2099;0833;RC2099;An MQGET call was issued, specifying MQGMO_SET_SIGNAL in the GetMsgOpts parameter, but the Signal1 field is not valid. On z/OS®, the address contained in the Signal1 field is not valid, or points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) On Windows 95, Windows 98, the window handle in the Signal1 field is not valid.;This reason code occurs only in the following environments: z/OS, Windows 95, Windows 98.;MQCC_FAILED;Correct the setting of the Signal1 field.;
MQRC_SIGNAL_OUTSTANDING;2069;0815;RC2069;An MQGET call was issued with either the MQGMO_SET_SIGNAL or MQGMO_WAIT option, but there is already a signal outstanding for the queue handle Hobj.;This reason code occurs only in the following environments: z/OS®, Windows 95, Windows 98.;MQCC_FAILED;Check the application logic. If it is necessary to set a signal or wait when there is a signal outstanding for the same queue, a different object handle must be used.;
MQRC_SIGNAL_REQUEST_ACCEPTED;2070;0816;RC2070;An MQGET call was issued specifying MQGMO_SET_SIGNAL in the GetMsgOpts parameter, but no suitable message was available; the call returns immediately. The application can now wait for the signal to be delivered. On z/OS®, the application should wait on the Event Control Block pointed to by the Signal1 field. On Windows 95, Windows 98, the application should wait for the signal Windows message to be delivered.;This reason code occurs only in the following environments: z/OS, Windows 95, Windows 98.;MQCC_WARNING;Wait for the signal; when it is delivered, check the signal to ensure that a message is now available. If it is, reissue the MQGET call. On z/OS, wait on the ECB pointed to by the Signal1 field and, when it is posted, check it to ensure that a message is now available. On Windows 95, Windows 98, the application (thread) should continue executing its message loop.;
MQRC_SMPO_ERROR;2463;099F;RC2463;On an MQSETMP call, the set message property options structure MQSMPO is not valid, for one of the following reasons: The StrucId field is not MQSMPO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQSMPO structure are set correctly.;
MQRC_SOAP_AXIS_ERROR;2211;08A3;RC2211;An exception from the Axis environment has been received and is included as a chained exception.;MQCC_FAILED;Refer to the Axis documentation for details about the chained exception. Follow the corrective action recommended there.;
MQRC_SOAP_DOTNET_ERROR;2210;08A2;RC2210;An exception from the .NET environment (as opposed to WebSphere® MQ .NET) has been received and is included as an inner exception.;MQCC_FAILED;Refer to the .NET documentation for details about the inner exception. Follow the corrective action recommended there.;
MQRC_SOAP_URL_ERROR;2212;08A4;RC2212;The SOAP URL has been specified incorrectly.;MQCC_FAILED;Correct the SOAP URL and rerun.;
MQRC_SOURCE_BUFFER_ERROR;2145;0861;RC2145;On the MQXCNVC call, the SourceBuffer parameter pointer is not valid, or points to storage that cannot be accessed for the entire length specified by SourceLength. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);This reason code can also occur on the MQGET call when the MQGMO_CONVERT option is specified. In this case it indicates that the MQRC_SOURCE_BUFFER_ERROR reason was returned by an MQXCNVC call issued by the data conversion exit.;MQCC_WARNING or MQCC_FAILED;Specify a valid buffer. If the reason code occurs on the MQGET call, check that the logic in the data-conversion exit is correct.;
MQRC_SOURCE_CCSID_ERROR;2111;083F;RC2111;The coded character-set identifier from which character data is to be converted is not valid or not supported.;This can occur on the MQGET call when the MQGMO_CONVERT option is included in the GetMsgOpts parameter; the coded character-set identifier in error is the CodedCharSetId field in the message being retrieved. In this case, the message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;This reason can also occur on the MQGET call when the message contains one or more MQ header structures (MQCIH, MQDLH, MQIIH, MQRMH), and the CodedCharSetId field in the message specifies a character set that does not have SBCS characters for the characters that are valid in queue names. MQ header structures containing such characters are not valid, and so the message is returned unconverted. The Unicode character set UCS-2 is an example of such a character set.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;This reason can also occur on the MQXCNVC call; the coded character-set identifier in error is the SourceCCSID parameter. Either the SourceCCSID parameter specifies a value that is not valid or not supported, or the SourceCCSID parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_WARNING or MQCC_FAILED;Check the character-set identifier that was specified when the message was put, or that was specified for the SourceCCSID parameter on the MQXCNVC call. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the specified character set, conversion must be carried out by the application.;
MQRC_SOURCE_DECIMAL_ENC_ERROR;2113;0841;RC2113;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the message being retrieved specifies a decimal encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;MQCC_WARNING;Check the decimal encoding that was specified when the message was put. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required decimal encoding, conversion must be carried out by the application.;
MQRC_SOURCE_FLOAT_ENC_ERROR;2114;0842;RC2114;On an MQGET call, with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the message being retrieved specifies a floating-point encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;MQCC_WARNING;Check the floating-point encoding that was specified when the message was put. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required floating-point encoding, conversion must be carried out by the application.;
MQRC_SOURCE_INTEGER_ENC_ERROR;2112;0840;RC2112;On an MQGET call, with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the message being retrieved specifies an integer encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;If the message consists of several parts, each of which is described by its own CodedCharSetId and Encoding fields (for example, a message with format name MQFMT_DEAD_LETTER_HEADER), some parts may be converted and other parts not converted. However, the values returned in the various CodedCharSetId and Encoding fields always correctly describe the relevant message data.;This reason code can also occur on the MQXCNVC call, when the Options parameter contains an unsupported MQDCC_SOURCE_* value, or when MQDCC_SOURCE_ENC_UNDEFINED is specified for a UCS-2 code page.;MQCC_WARNING or MQCC_FAILED;Check the integer encoding that was specified when the message was put. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required integer encoding, conversion must be carried out by the application.;
MQRC_SOURCE_LENGTH_ERROR;2143;085F;RC2143;On the MQXCNVC call, the SourceLength parameter specifies a length that is less than zero or not consistent with the string’s character set or content (for example, the character set is a double-byte character set, but the length is not a multiple of two). This reason also occurs if the SourceLength parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);This reason code can also occur on the MQGET call when the MQGMO_CONVERT option is specified. In this case it indicates that the MQRC_SOURCE_LENGTH_ERROR reason was returned by an MQXCNVC call issued by the data conversion exit.;MQCC_WARNING or MQCC_FAILED;Specify a length that is zero or greater. If the reason code occurs on the MQGET call, check that the logic in the data-conversion exit is correct.;
MQRC_SRC_ENV_ERROR;2261;08D5;RC2261;This reason occurs when a channel exit that processes reference messages detects an error in the source environment data of a reference message header (MQRMH). One of the following is true: SrcEnvLength is less than zero. SrcEnvLength is greater than zero, but there is no source environment data. SrcEnvLength is greater than zero, but SrcEnvOffset is negative, zero, or less than the length of the fixed part of MQRMH. SrcEnvLength is greater than zero, but SrcEnvOffset plus SrcEnvLength is greater than StrucLength. The exit returns this reason in the Feedback field of the MQCXP structure. If an exception report is requested, it is copied to the Feedback field of the MQMD associated with the report.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify the source environment data correctly.;
MQRC_SRC_NAME_ERROR;2262;08D6;RC2262;This reason occurs when a channel exit that processes reference messages detects an error in the source name data of a reference message header (MQRMH). One of the following is true: SrcNameLength is less than zero. SrcNameLength is greater than zero, but there is no source name data. SrcNameLength is greater than zero, but SrcNameOffset is negative, zero, or less than the length of the fixed part of MQRMH. SrcNameLength is greater than zero, but SrcNameOffset plus SrcNameLength is greater than StrucLength.;The exit returns this reason in the Feedback field of the MQCXP structure. If an exception report is requested, it is copied to the Feedback field of the MQMD associated with the report.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Specify the source name data correctly.;
MQRC_SRO_ERROR;2438;0986;RC2438;On the MQSUBRQ call, the Subscription Request Options MQSRO is not valid, for one of the following reasons: The StrucId field is not MQSRO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQSRO structure are set correctly.;
MQRC_SSL_ALREADY_INITIALIZED;2391;0957;RC2391;An MQCONN or MQCONNX call was issued with SSL configuration options specified, but the SSL environment had already been initialized. The connection to the queue manager completed successfully, but the SSL configuration options specified on the call were ignored; the existing SSL environment was used instead.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_WARNING;If the application must be run with the SSL configuration options defined on the MQCONN or MQCONNX call, use the MQDISC call to sever the connection to the queue manager and then terminate the application. Alternatively run the application later when the SSL environment has not been initialized.;
MQRC_SSL_ALT_PROVIDER_REQUIRED;2570;0A0A;RC2570;
MQRC_SSL_CERTIFICATE_REVOKED;2401;0961;RC2401;A connection to a queue manager was requested, specifying SSL encryption. However, the certificate presented by the queue manager was found to be revoked by one of the specified CertStores.;This reason code occurs only with Java applications.;MQCC_FAILED;Check the certificates used to identify the queue manager.;
MQRC_SSL_CERT_STORE_ERROR;2402;0962;RC2402;A connection to a queue manager was requested, specifying SSL encryption. However, none of the CertStore objects provided by the application could be searched for the certificate presented by the queue manager. The MQException object containing this reason code references the Exception encountered when searching the first CertStore; this can be obtained using the MQException.getCause() method. From JMS, the MQException is linked to the thrown JMSException.;This reason code occurs only with Java applications.;MQCC_FAILED;Inspect the causal exception to determine the underlying error. Check the CertStore objects provided by your application. If the causal exception is a java.lang.NoSuchElementException, ensure that your application is not specifying an empty collection of CertStore objects.;
MQRC_SSL_CONFIG_ERROR;2392;0958;RC2392;On an MQCONNX call, the MQCNO structure does not specify the MQSCO structure correctly. One of the following applies: SSLConfigOffset is nonzero and SSLConfigPtr is not the null pointer. SSLConfigPtr is not a valid pointer. SSLConfigOffset or SSLConfigPtr points to storage that is not accessible.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Ensure that one of SSLConfigOffset or SSLConfigPtr is zero and the other nonzero. Ensure that the field used points to accessible storage.;
MQRC_SSL_INITIALIZATION_ERROR;2393;0959;RC2393;An MQCONN or MQCONNX call was issued with SSL configuration options specified, but an error occurred during the initialization of the SSL environment.;This reason code occurs in the following environments: AIX®, HP-UX, Solaris, Windows.;MQCC_FAILED;Check that the SSL installation is correct.;
MQRC_SSL_KEY_RESET_ERROR;2409;0969;RC2409;On an MQCONN or MQCONNX call, the value of the SSL key reset count is not in the valid range of 0 through 999 999 999.;The value of the SSL key reset count is specified by either the value of the MQSSLRESET environment variable (MQCONN or MQCONNX call), or the value of the KeyResetCount field in the MQSCO structure (MQCONNX call only). For the MQCONNX call, if both MQSSLRESET and KeyResetCount are specified, the latter is used. MQCONN or MQCONNX;If you specify an SSL/TLS secret key reset count between 1 byte and 32Kb, SSL/TLS channels will use a secret key reset count of 32Kb. This is to avoid the overhead of excessive key resets which would occur for small SSL/TLS secret key reset values.;MQCC_FAILED;Check that the fields in the structure and the MQSSLRESET environment variable are set correctly.;
MQRC_SSL_NOT_ALLOWED;2396;095C;RC2396;A connection to a queue manager was requested, specifying SSL encryption. However, the connection mode requested is one that does not support SSL (for example, bindings connect).;MQCC_FAILED;Modify the application to request client connection mode, or to disable SSL encryption.;
MQRC_SSL_PEER_NAME_ERROR;2399;095F;RC2399;The application specified a peer name of incorrect format.;MQCC_FAILED;Check the value of the sslPeerName property specified by the application.;
MQRC_SSL_PEER_NAME_MISMATCH;2398;095E;RC2398;The application attempted to connect to the queue manager using SSL encryption, but the distinguished name presented by the queue manager does not match the specified pattern.;MQCC_FAILED;Check the certificates used to identify the queue manager. Also check the value of the sslPeerName property specified by the application.;
MQRC_STAT_TYPE_ERROR;2430;097E;RC2430;The STS parameter contains options that are not valid for the MQSTAT call. This reason also occurs if the parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);Specify a valid MQSTS structure as a parameter on the call to MQSTAT.;;
MQRC_STOPPED_BY_CLUSTER_EXIT;2188;088C;RC2188;An MQOPEN, MQPUT, or MQPUT1 call was issued to open or put a message on a cluster queue, but the cluster workload exit rejected the call.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check the cluster workload exit to ensure that it has been written correctly. Determine why it rejected the call and correct the problem.;
MQRC_STORAGE_CLASS_ERROR;2105;0839;RC2105;The MQPUT or MQPUT1 call was issued, but the storage-class object defined for the queue does not exist.;This reason code occurs only on z/OS®.;MQCC_FAILED;Create the storage-class object required by the queue, or modify the queue definition to use an existing storage class. The name of the storage-class object used by the queue is given by the StorageClass queue attribute.;
MQRC_STORAGE_MEDIUM_FULL;2192;0890;RC2192;An MQI call or command was issued to operate on an object, but the call failed because the external storage medium is full. One of the following applies: A page-set data set is full (nonshared queues only). A coupling-facility structure is full (shared queues only).;This reason code occurs only on z/OS®.;MQCC_FAILED;Check which queues contain messages and look for applications that might be filling the queues unintentionally. Be aware that the queue that has caused the page set or coupling-facility structure to become full is not necessarily the queue referenced by the MQI call that returned MQRC_STORAGE_MEDIUM_FULL.;Check that all of the usual server applications are operating correctly and processing the messages on the queues.;If the applications and servers are operating correctly, increase the number of server applications to cope with the message load, or request the system programmer to increase the size of the page-set data sets.;
MQRC_STORAGE_NOT_AVAILABLE;2071;0817;RC2071;The call failed because there is insufficient main storage available.;MQCC_FAILED;Ensure that active applications are behaving correctly, for example, that they are not looping unexpectedly. If no problems are found, make more main storage available. On z/OS®, if no application problems are found, ask your system programmer to increase the size of the region in which the queue manager runs.;
MQRC_STRING_ERROR;2307;0903;RC2307;The String parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_STRING_LENGTH_ERROR;2323;0913;RC2323;The StringLength parameter is not valid. Either the parameter pointer is not valid, or it points to read-only storage. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Correct the parameter.;
MQRC_STRING_TRUNCATED;2311;0907;RC2311;The string returned by the call is too long to fit in the buffer provided. The string has been truncated to fit in the buffer.;MQCC_FAILED;If the entire string is required, provide a larger buffer. On the mqInquireString call, the StringLength parameter is set by the call to indicate the size of the buffer required to accommodate the string without truncation.;
MQRC_STRUC_ID_ERROR;6107;17DB;RC6107;The structure id for the (next) message item, which is derived from the 4 characters beginning at the data pointer, is either missing or is inconsistent with the class of object into which the item is being pasted.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_STRUC_LENGTH_ERROR;6123;17EB;RC6123;The length of a data structure is inconsistent with its content. For an MQRMH, the length is insufficient to contain the fixed fields and all offset data.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
MQRC_STS_ERROR;2426;097A;RC2426;On an MQSTAT call, the MQSTS structure is not valid, for one of the following reasons: The StrucId field is not MQSTS_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The queue manager cannot copy the changed structure to application storage, even though the call is successful. This can occur, for example, if the pointer points to read-only storage.;MQCC_FAILED;Ensure that input fields in the MQSTS structure are set correctly.;
MQRC_SUBLEVEL_NOT_ALTERABLE;2512;09D0;RC2512;An MQSUB call using option MQSO_ALTER was made changing the SubLevel of the subscription. The SubLevel of a subscription cannot be changed.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly, or change the SubLevel field used on the MQSUB call so that it matches the existing subscription.;
MQRC_SUBSCRIPTION_IN_USE;2429;097D;RC2429;An MQSUB call using option MQSO_RESUME was made specifying a full subscription name that exists and is in use by another application.;MQCC_FAILED;Ensure that the subscription name is correctly specified in your application. The subscription name is specified in the SubName field in the MQSD structure.;
MQRC_SUB_ALREADY_EXISTS;2432;0980;RC2432;An MQSUB call was issued to create a subscription, using the MQSO_CREATE option, but a subscription using the same SubName and ObjectString already exists.;MQCC_FAILED;Ensure that the SubName and ObjectString input fields in the MQSD structure are set correctly, or use the MQSO_RESUME option to get a handle for the subscription that already exists.;
MQRC_SUB_INHIBITED;2503;09C7;RC2503;MQSUB calls are currently inhibited for the topic subscribed to.;MQCC_FAILED;If the system design allows subscription requests to be inhibited for short periods, retry the operation later.;
MQRC_SUB_NAME_ERROR;2440;0988;RC2440;On the MQSUB call in the Subscription Descriptor MQSD the SubName field is not valid or has been omitted. This is required if the MQSD option MQSO_DURABLE is specified, but may also be used if MQSO_DURABLE is not specified.;One of the following applies: SubName.VSLength is greater than zero, but SubName.VSOffset is zero and SubName.VSPtr is the null pointer. SubName.VSOffset is nonzero and SubName.VSPtr is not the null pointer (that is, it appears both fields are being used where only one is allowed). SubName.VSPtr is not a valid pointer. SubName.VSOffset or SubName.VSPtr points to storage that is not accessible. SubName.VSLength is zero but this field is required. SubName.VSLength exceeds the maximum length allowed for this field.;MQCC_FAILED;Ensure that SubName is specified and SubName.VSLength is nonzero. Ensure that one of SubName.VSOffset or SubName.VSPtr is zero and the other nonzero. Ensure that the field used points to accessible storage. Specify a length that does not exceed the maximum length allowed for this field.;This code can be returned if the sd.Options flags MQSO_CREATE and MQSO_RESUME are set together and sd.SubName is not initialized. You must also initialize the MQCHARV structure for sd.SubName, even if there is no subscription to resume. See Example 2: Managed MQ subscriber for more details.;
MQRC_SUB_USER_DATA_ERROR;2431;097F;RC2431;On the MQSUB call in the Subscription Descriptor MQSD the SubUserData field is not valid. One of the following applies: SubUserData.VSLength is greater than zero, but SubUserData.VSOffset is zero and SubUserData.VSPtr is the null pointer. SubUserData.VSOffset is nonzero and SubUserData.VSPtr is not the null pointer (that is, it appears both fields are being used where only one is allowed). SubUserData.VSPtr is not a valid pointer. SubUserData.VSOffset or SubUserData.VSPtr points to storage that is not accessible. SubUserData.VSLength exceeds the maximum length allowed for this field.;MQCC_FAILED;Ensure that one of SubUserData.VSOffset or SubUserData.VSPtr is zero and the other nonzero. Ensure that the field used points to accessible storage. Specify a length that does not exceed the maximum length allowed for this field.;
MQRC_SUPPRESSED_BY_EXIT;2109;083D;RC2109;On any call other than MQCONN or MQDISC, the API crossing exit suppressed the call.;This reason code occurs only on z/OS®.;MQCC_FAILED;Obey the rules for MQI calls that the exit enforces. To find out the rules, see the writer of the exit.;
MQRC_SYNCPOINT_LIMIT_REACHED;2024;07E8;RC2024;An MQGET, MQPUT, or MQPUT1 call failed because it would have caused the number of uncommitted messages in the current unit of work to exceed the limit defined for the queue manager (see the MaxUncommittedMsgs queue-manager attribute). The number of uncommitted messages is the sum of the following since the start of the current unit of work: Messages put by the application with the MQPMO_SYNCPOINT option Messages retrieved by the application with the MQGMO_SYNCPOINT option Trigger messages and COA report messages generated by the queue manager for messages put with the MQPMO_SYNCPOINT option COD report messages generated by the queue manager for messages retrieved with the MQGMO_SYNCPOINT option On Compaq NonStop Kernel, this reason code occurs when the maximum number of I/O operations in a single TM/MP transaction has been exceeded.;MQCC_FAILED;Check whether the application is looping. If it is not, consider reducing the complexity of the application. Alternatively, increase the queue-manager limit for the maximum number of uncommitted messages within a unit of work. On z/OS®, the limit for the maximum number of uncommitted messages can be changed by using the ALTER QMGR command. On i5/OS®, the limit for the maximum number of uncommitted messages can be changed by using the CHGMQM command. On Compaq NonStop Kernel, the application should cancel the transaction and retry with a smaller number of operations in the unit of work. See the MQSeries® for Tandem NonStop Kernel System Management Guide for more details.;
MQRC_SYNCPOINT_NOT_AVAILABLE;2072;0818;RC2072;Either MQGMO_SYNCPOINT was specified on an MQGET call or MQPMO_SYNCPOINT was specified on an MQPUT or MQPUT1 call, but the local queue manager was unable to honor the request. If the queue manager does not support units of work, the SyncPoint queue-manager attribute will have the value MQSP_NOT_AVAILABLE.;This reason code can also occur on the MQGET, MQPUT, and MQPUT1 calls when an external unit-of-work coordinator is being used. If that coordinator requires an explicit call to start the unit of work, but the application has not issued that call prior to the MQGET, MQPUT, or MQPUT1 call, reason code MQRC_SYNCPOINT_NOT_AVAILABLE is returned. On i5/OS®, this reason codes means that i5/OS Commitment Control is not started, or is unavailable for use by the queue manager. On z/OS®, this reason code does not occur.;MQCC_FAILED;Remove the specification of MQGMO_SYNCPOINT or MQPMO_SYNCPOINT, as appropriate. On i5/OS, ensure that Commitment Control has been started. If this reason code occurs after Commitment Control has been started, contact your system programmer.;
MQRC_SYSTEM_BAG_NOT_ALTERABLE;2315;090B;RC2315;A call was issued to add a data item to a bag, modify the value of an existing data item in a bag, or retrieve a message into a bag, but the call failed because the bag is one that had been created by the system as a result of a previous mqExecute call. System bags cannot be modified by the application.;MQCC_FAILED;Specify the handle of a bag created by the application, or remove the call.;
MQRC_SYSTEM_BAG_NOT_DELETABLE;2328;0918;RC2328;An mqDeleteBag call was issued to delete a bag, but the call failed because the bag is one that had been created by the system as a result of a previous mqExecute call. System bags cannot be deleted by the application.;MQCC_FAILED;Specify the handle of a bag created by the application, or remove the call.;
MQRC_SYSTEM_ITEM_NOT_ALTERABLE;2302;08FE;RC2302;A call was issued to modify the value of a system data item in a bag (a data item with one of the MQIASY_* selectors), but the call failed because the data item is one that cannot be altered by the application.;MQCC_FAILED;Specify the selector of a user-defined data item, or remove the call.;
MQRC_SYSTEM_ITEM_NOT_DELETABLE;2329;0919;RC2329;A call was issued to delete a system data item from a bag (a data item with one of the MQIASY_* selectors), but the call failed because the data item is one that cannot be deleted by the application.;MQCC_FAILED;Specify the selector of a user-defined data item, or remove the call.;
MQRC_TARGET_BUFFER_ERROR;2146;0862;RC2146;On the MQXCNVC call, the TargetBuffer parameter pointer is not valid, or points to read-only storage, or to storage that cannot be accessed for the entire length specified by TargetLength. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);This reason code can also occur on the MQGET call when the MQGMO_CONVERT option is specified. In this case it indicates that the MQRC_TARGET_BUFFER_ERROR reason was returned by an MQXCNVC call issued by the data conversion exit.;MQCC_WARNING or MQCC_FAILED;Specify a valid buffer. If the reason code occurs on the MQGET call, check that the logic in the data-conversion exit is correct.;
MQRC_TARGET_CCSID_ERROR;2115;0843;RC2115;The coded character-set identifier to which character data is to be converted is not valid or not supported.;This can occur on the MQGET call when the MQGMO_CONVERT option is included in the GetMsgOpts parameter; the coded character-set identifier in error is the CodedCharSetId field in the MsgDesc parameter. In this case, the message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;This reason can also occur on the MQGET call when the message contains one or more MQ header structures (MQCIH, MQDLH, MQIIH, MQRMH), and the CodedCharSetId field in the MsgDesc parameter specifies a character set that does not have SBCS characters for the characters that are valid in queue names. The Unicode character set UCS-2 is an example of such a character set.;This reason can also occur on the MQXCNVC call; the coded character-set identifier in error is the TargetCCSID parameter. Either the TargetCCSID parameter specifies a value that is not valid or not supported, or the TargetCCSID parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_WARNING or MQCC_FAILED;Check the character-set identifier that was specified for the CodedCharSetId field in the MsgDesc parameter on the MQGET call, or that was specified for the SourceCCSID parameter on the MQXCNVC call. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the specified character set, conversion must be carried out by the application.;
MQRC_TARGET_DECIMAL_ENC_ERROR;2117;0845;RC2117;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the MsgDesc parameter specifies a decimal encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;MQCC_WARNING;Check the decimal encoding that was specified. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required decimal encoding, conversion must be carried out by the application.;
MQRC_TARGET_FLOAT_ENC_ERROR;2118;0846;RC2118;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the MsgDesc parameter specifies a floating-point encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message returned, and the call completes with MQCC_WARNING.;MQCC_WARNING;Check the floating-point encoding that was specified. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required floating-point encoding, conversion must be carried out by the application.;
MQRC_TARGET_INTEGER_ENC_ERROR;2116;0844;RC2116;On an MQGET call with the MQGMO_CONVERT option included in the GetMsgOpts parameter, the Encoding value in the MsgDesc parameter specifies an integer encoding that is not recognized. The message data is returned unconverted, the values of the CodedCharSetId and Encoding fields in the MsgDesc parameter are set to those of the message being retrieved, and the call completes with MQCC_WARNING.;This reason code can also occur on the MQXCNVC call, when the Options parameter contains an unsupported MQDCC_TARGET_* value, or when MQDCC_TARGET_ENC_UNDEFINED is specified for a UCS-2 code page.;MQCC_WARNING or MQCC_FAILED;Check the integer encoding that was specified. If this is correct, check that it is one for which queue-manager conversion is supported. If queue-manager conversion is not supported for the required integer encoding, conversion must be carried out by the application.;
MQRC_TARGET_LENGTH_ERROR;2144;0860;RC2144;On the MQXCNVC call, the TargetLength parameter is not valid for one of the following reasons: TargetLength is less than zero. The TargetLength parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The MQDCC_FILL_TARGET_BUFFER option is specified, but the value of TargetLength is such that the target buffer cannot be filled completely with valid characters. This can occur when TargetCCSID is a pure DBCS character set (such as UCS-2), but TargetLength specifies a length that is an odd number of bytes.;This reason code can also occur on the MQGET call when the MQGMO_CONVERT option is specified. In this case it indicates that the MQRC_TARGET_LENGTH_ERROR reason was returned by an MQXCNVC call issued by the data conversion exit.;MQCC_WARNING or MQCC_FAILED;Specify a length that is zero or greater. If the MQDCC_FILL_TARGET_BUFFER option is specified, and TargetCCSID is a pure DBCS character set, ensure that TargetLength specifies a length that is a multiple of two.;If the reason code occurs on the MQGET call, check that the logic in the data-conversion exit is correct.;
MQRC_TERMINATION_FAILED;2287;08EF;RC2287;This reason should be returned by an installable service component when the component is unable to complete termination successfully. On z/OS®, this reason code does not occur.;MQCC_FAILED;Correct the error and retry the operation.;
MQRC_TMC_ERROR;2191;088F;RC2191;An MQPUT or MQPUT1 call was issued, but the message data contains an MQTMC2 structure that is not valid. Possible errors include the following: The StrucId field is not MQTMC_STRUC_ID. The Version field is not MQTMC_VERSION_2. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_TM_ERROR;2265;08D9;RC2265;An MQPUT or MQPUT1 call was issued, but the message data contains an MQTM structure that is not valid. Possible errors include the following: The StrucId field is not MQTM_STRUC_ID. The Version field is not MQTM_VERSION_1. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_TOPIC_NOT_ALTERABLE;2510;09CE;RC2510;An MQSUB call using option MQSO_ALTER was made changing the one or more of the fields in the MQSD that provide the topic being subscribed to. These fields are the ObjectName, ObjectString, or wildcard options. The topic subscribed to cannot be changed.;MQCC_FAILED;Remove the subscription using MQCLOSE and recreate it again with MQSUB with the attributes set correctly, or change the attributes and options used on the MQSUB call so that it matches the existing subscription.;
MQRC_TOPIC_STRING_ERROR;2425;0979;RC2425;On the MQOPEN or MQPUT1 call in the Object Descriptor MQOD, or on the MQSUB call in the Subscription Descriptor MQSD the resultant full topic string is not valid.;One of the following applies: ObjectName contains the name of a TOPIC object whose TOPICSTR attribute contains an empty topic string. The fully resolved topic string contains the escape character '%' and it is not followed by one of the characters, '*', '?' or '%', and the MQSO_WILDCARD_CHAR option has been used on an MQSUB call.;MQCC_FAILED;Ensure that there are no invalid topic string characters in either ObjectString or ObjectName.;
MQRC_TRIGGER_CONTROL_ERROR;2075;081B;RC2075;On an MQSET call, the value specified for the MQIA_TRIGGER_CONTROL attribute selector is not valid.;MQCC_FAILED;Specify a valid value.;
MQRC_TRIGGER_DEPTH_ERROR;2076;081C;RC2076;On an MQSET call, the value specified for the MQIA_TRIGGER_DEPTH attribute selector is not valid.;MQCC_FAILED;Specify a value that is greater than zero.;
MQRC_TRIGGER_MSG_PRIORITY_ERR;2077;081D;RC2077;On an MQSET call, the value specified for the MQIA_TRIGGER_MSG_PRIORITY attribute selector is not valid.;MQCC_FAILED;Specify a value in the range zero through the value of MaxPriority queue-manager attribute.;
MQRC_TRIGGER_TYPE_ERROR;2078;081E;RC2078;On an MQSET call, the value specified for the MQIA_TRIGGER_TYPE attribute selector is not valid.;MQCC_FAILED;Specify a valid value.;
MQRC_TRUNCATED_MSG_ACCEPTED;2079;081F;RC2079;On an MQGET call, the message length was too large to fit into the supplied buffer. The MQGMO_ACCEPT_TRUNCATED_MSG option was specified, so the call completes. The message is removed from the queue (subject to unit-of-work considerations), or, if this was a browse operation, the browse cursor is advanced to this message.;The DataLength parameter is set to the length of the message before truncation, the Buffer parameter contains as much of the message as fits, and the MQMD structure is filled in.;MQCC_WARNING;None, because the application expected this situation.;
MQRC_TRUNCATED_MSG_FAILED;2080;0820;RC2080;On an MQGET call, the message length was too large to fit into the supplied buffer. The MQGMO_ACCEPT_TRUNCATED_MSG option was not specified, so the message has not been removed from the queue. If this was a browse operation, the browse cursor remains where it was before this call, but if MQGMO_BROWSE_FIRST was specified, the browse cursor is positioned logically before the highest-priority message on the queue.;The DataLength field is set to the length of the message before truncation, the Buffer parameter contains as much of the message as fits, and the MQMD structure is filled in.;MQCC_WARNING;Supply a buffer that is at least as large as DataLength, or specify MQGMO_ACCEPT_TRUNCATED_MSG if not all of the message data is required.;
MQRC_UCS2_CONVERSION_ERROR;2341;0925;RC2341;This reason code is returned by the Java MQQueueManager constructor when a required character set conversion is not available. The conversion required is between the UCS-2 Unicode character set and the character set of the queue manager which defaults to IBM-500 if no specific value is available.;MQCC_FAILED;Ensure that the relevant Unicode conversion tables are available for the JVM. For z/OS® ensure that the Unicode conversion tables are available to the z/OS Language Environment®. The conversion tables should be installed as part of the z/OS C/C++ optional feature. Refer to the z/OS C/C++ Programming Guide for more information about enabling UCS-2 conversions.;
MQRC_UNEXPECTED_ERROR;2195;0893;RC2195;The call was rejected because an unexpected error occurred.;MQCC_FAILED;Check the application's parameter list to ensure, for example, that the correct number of parameters was passed, and that data pointers and storage keys are valid. If the problem cannot be resolved, contact your system programmer. On z/OS®, check whether any information has been displayed on the console. If this error occurs on an MQCONN or MQCONNX call, check that the subsystem named is an active MQ subsystem. In particular, check that it is not a DB2™ subsystem. If the problem cannot be resolved, rerun the application with a CSQSNAP DD card (if you have not already got a dump) and send the resulting dump to IBM®. On i5/OS®, consult the FFST™ record to obtain more detail about the problem. On HP OpenVMS, Compaq NonStop Kernel, and UNIX systems, consult the FDC file to obtain more detail about the problem.;
MQRC_UNIT_OF_WORK_NOT_STARTED;2232;08B8;RC2232;An MQGET, MQPUT or MQPUT1 call was issued to get or put a message within a unit of work, but no TM/MP transaction had been started. If MQGMO_NO_SYNCPOINT is not specified on MQGET, or MQPMO_NO_SYNCPOINT is not specified on MQPUT or MQPUT1 (the default), the call requires a unit of work.;MQCC_FAILED;Ensure a TM/MP transaction is available, or issue the MQGET call with the MQGMO_NO_SYNCPOINT option, or the MQPUT or MQPUT1 call with the MQPMO_NO_SYNCPOINT option, which will cause a transaction to be started automatically.;
MQRC_UNKNOWN_ALIAS_BASE_Q;2082;0822;RC2082;An MQOPEN or MQPUT1 call was issued specifying an alias queue as the target, but the BaseQName in the alias queue attributes is not recognized as a queue name.;This reason code can also occur when BaseQName is the name of a cluster queue that cannot be resolved successfully.;MQRC_UNKNOWN_ALIAS_BASE_Q might indicate that the application is specifying theObjectQmgrName of the queue manager that it is connecting to, and the queue manager that is hosting the alias queue. This means that the queue manager looks for the alias target queue on the specified queue manager and fails because the alias target queue is not on the local queue manager. The ObjectQmgrName parameter is typically left blank so that the clustering decides which queue manager to route to.;MQCC_FAILED;Correct the queue definitions.;
MQRC_UNKNOWN_CHANNEL_NAME;2540;09EC;RC2540;An MQCONN call was issued from a client to connect to a queue manager but the attempt to establish communication failed because the queue manager did not recognise the channel name.;MQCC_FAILED;Ensure that the client is configured to use the correct channel name.;
MQRC_UNKNOWN_DEF_XMIT_Q;2197;0895;RC2197;An MQOPEN or MQPUT1 call was issued specifying a remote queue as the destination. If a local definition of the remote queue was specified, or if a queue-manager alias is being resolved, the XmitQName attribute in the local definition is blank.;Because there is no queue defined with the same name as the destination queue manager, the queue manager has attempted to use the default transmission queue. However, the name defined by the DefXmitQName queue-manager attribute is not the name of a locally-defined queue.;MQCC_FAILED;Correct the queue definitions, or the queue-manager attribute. See the WebSphere MQ Application Programming Guide for more information.;
MQRC_UNKNOWN_ENTITY;2292;08F4;RC2292;This reason should be returned by the authority installable service component when the name specified by the EntityName parameter is not recognized. On z/OS®, this reason code does not occur.;MQCC_FAILED;Ensure that the entity is defined.;
MQRC_UNKNOWN_OBJECT_NAME;2085;0825;RC2085;An MQOPEN or MQPUT1 call was issued, but the object identified by the ObjectName and ObjectQMgrName fields in the object descriptor MQOD cannot be found. One of the following applies: The ObjectQMgrName field is one of the following: Blank The name of the local queue manager The name of a local definition of a remote queue (a queue-manager alias) in which the RemoteQMgrName attribute is the name of the local queue manager but no object with the specified ObjectName and ObjectType exists on the local queue manager. The object being opened is a cluster queue that is hosted on a remote queue manager, but the local queue manager does not have a defined route to the remote queue manager. The object being opened is a queue definition that has QSGDISP(GROUP). Such definitions cannot be used with the MQOPEN and MQPUT1 calls.;This can also occur in response to a command that specifies the name of an object or other item that does not exist.;MQCC_FAILED;Specify a valid object name. Ensure that the name is padded to the right with blanks if necessary. If this is correct, check the object definitions.;
MQRC_UNKNOWN_OBJECT_Q_MGR;2086;0826;RC2086;On an MQOPEN or MQPUT1 call, the ObjectQMgrName field in the object descriptor MQOD does not satisfy the naming rules for objects. For more information, see the WebSphere MQ Application Programming Guide.;This reason also occurs if the ObjectType field in the object descriptor has the value MQOT_Q_MGR, and the ObjectQMgrName field is not blank, but the name specified is not the name of the local queue manager.;MQCC_FAILED;Specify a valid queue manager name. To refer to the local queue manager, a name consisting entirely of blanks or beginning with a null character can be used. Ensure that the name is padded to the right with blanks or terminated with a null character if necessary.;
MQRC_UNKNOWN_Q_NAME;2288;08F0;RC2288;This reason should be returned by the MQZ_LOOKUP_NAME installable service component when the name specified for the QName parameter is not recognized. On z/OS®, this reason code does not occur.;MQCC_FAILED;None. See the WebSphere MQ System Administration Guide book for information about installable services.;
MQRC_UNKNOWN_REF_OBJECT;2294;08F6;RC2294;This reason should be returned by the MQZ_COPY_ALL_AUTHORITY installable service component when the name specified by the RefObjectName parameter is not recognized. On z/OS®, this reason code does not occur.;MQCC_FAILED;Ensure that the reference object is defined. See the WebSphere MQ System Administration Guide book for information about installable services.;
MQRC_UNKNOWN_REMOTE_Q_MGR;2087;0827;RC2087;On an MQOPEN or MQPUT1 call, an error occurred with the queue-name resolution, for one of the following reasons: ObjectQMgrName is blank or the name of the local queue manager, ObjectName is the name of a local definition of a remote queue (or an alias to one), and one of the following is true: RemoteQMgrName is blank or the name of the local queue manager. Note that this error occurs even if XmitQName is not blank. XmitQName is blank, but there is no transmission queue defined with the name of RemoteQMgrName, and the DefXmitQName queue-manager attribute is blank. RemoteQMgrName and RemoteQName specify a cluster queue that cannot be resolved successfully, and the DefXmitQName queue-manager attribute is blank. On z/OS only, the RemoteQMgrName is the name of a queue manager in the Queue Sharing group but intra-group queuing is disabled. ObjectQMgrName is the name of a local definition of a remote queue (containing a queue-manager alias definition), and one of the following is true: RemoteQName is not blank. XmitQName is blank, but there is no transmission queue defined with the name of RemoteQMgrName, and the DefXmitQName queue-manager attribute is blank. ObjectQMgrName is not: Blank The name of the local queue manager The name of a transmission queue The name of a queue-manager alias definition (that is, a local definition of a remote queue with a blank RemoteQName) but the DefXmitQName queue-manager attribute is blank and the queue manager is not part of a queue-sharing group with intra-group queuing enabled. ObjectQMgrName is the name of a model queue. The queue name is resolved through a cell directory. However, there is no queue defined with the same name as the remote queue manager name obtained from the cell directory, and the DefXmitQName queue-manager attribute is blank.;MQCC_FAILED;Check the values specified for ObjectQMgrName and ObjectName. If these are correct, check the queue definitions.;
MQRC_UNKNOWN_REPORT_OPTION;2104;0838;RC2104;An MQPUT or MQPUT1 call was issued, but the Report field in the message descriptor MQMD contains one or more options that are not recognized by the local queue manager. The options are accepted.;The options that cause this reason code to be returned depend on the destination of the message; see the description of REPORT in the WebSphere MQ Application Programming Reference for more details.;MQCC_WARNING;If this reason code is expected, no corrective action is required. If this reason code is not expected, do the following: Ensure that the Report field in the message descriptor is initialized with a value when the message descriptor is declared, or is assigned a value prior to the MQPUT or MQPUT1 call. Ensure that the report options specified are valid; see the Report field described in the description of MQMD in the WebSphere MQ Application Programming Reference for valid report options. If multiple report options are being set by adding the individual report options together, ensure that the same report option is not added twice. Check that conflicting report options are not specified. For example, do not add both MQRO_EXCEPTION and MQRO_EXCEPTION_WITH_DATA to the Report field; only one of these can be specified.;
MQRC_UNKNOWN_XMIT_Q;2196;0894;RC2196;On an MQOPEN or MQPUT1 call, a message is to be sent to a remote queue manager. The ObjectName or the ObjectQMgrName in the object descriptor specifies the name of a local definition of a remote queue (in the latter case queue-manager aliasing is being used), but the XmitQName attribute of the definition is not blank and not the name of a locally-defined queue.;MQCC_FAILED;Check the values specified for ObjectName and ObjectQMgrName. If these are correct, check the queue definitions. For more information on transmission queues, see the WebSphere MQ Application Programming Guide.;
MQRC_UNSUPPORTED_CIPHER_SUITE;2400;0960;RC2400;A connection to a queue manager was requested, specifying SSL encryption. However, JSSE reported that it does not support the CipherSuite specified by the application.;This reason code occurs only with Java applications.;MQCC_FAILED;Check the CipherSuite specified by the application. Note that the names of JSSE CipherSuites differ from their equivalent CipherSpecs used by the queue manager.;Also, check that JSSE is correctly installed.;
MQRC_UNSUPPORTED_PROPERTY;2490;09BA;RC2490;A message was found to contain a property that the queue manager does not support. The operation that failed required all the properties to be supported by the queue manager. This can occur on the MQPUT/MQPUT1 call or when a message is about to be sent down a channel to a queue manager than does not support message properties.;MQCC_FAILED;Determine which property of the message is not supported by the queue manager and decide whether to remove the property from the message or connect to a queue manager which does support the property.;
MQRC_UOW_CANCELED;2297;08F9;RC2297;An MQI call was issued, but the unit of work (TM/MP transaction) being used for the MQ operation had been canceled. This may have been done by TM/MP itself (for example, due to the transaction running for too long, or exceeding audit trail sizes), or by the application program issuing an ABORT_TRANSACTION. All updates performed to resources owned by the queue manager are backed out.;MQCC_FAILED;Refer to the operating system’s Transaction Management Operations Guide to determine how the Transaction Manager can be tuned to avoid the problem of system limits being exceeded.;
MQRC_UOW_ENLISTMENT_ERROR;2354;0932;RC2354;This reason code can occur for a variety of reasons. The most likely reason is that an object created by a DTC transaction does not issue a transactional MQI call until after the DTC transaction has timed out. (If the DTC transaction times out after a transactional MQI call has been issued, reason code MQRC_HANDLE_IN_USE_FOR_UOW is returned by the failing MQI call.);Another cause of MQRC_UOW_ENLISTMENT_ERROR is incorrect installation; Windows NT Service pack must be installed after the Windows NT Option pack.;This reason code occurs only on Windows.;MQCC_FAILED;Check the DTC “Transaction timeout” value. If necessary, verify the NT installation order.;
MQRC_UOW_IN_PROGRESS;2128;0850;RC2128;An MQBEGIN call was issued to start a unit of work coordinated by the queue manager, but a unit of work is already in existence for the connection handle specified. This may be a global unit of work started by a previous MQBEGIN call, or a unit of work that is local to the queue manager or one of the cooperating resource managers. No more than one unit of work can exist concurrently for a connection handle.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows.;MQCC_FAILED;Review the application logic to determine why there is a unit of work already in existence. Move the MQBEGIN call to the appropriate place in the application.;
MQRC_UOW_MIX_NOT_SUPPORTED;2355;0933;RC2355;The mixture of calls used by the application to perform operations within a unit of work is not supported. In particular, it is not possible to mix within the same process a local unit of work coordinated by the queue manager with a global unit of work coordinated by DTC (Distributed Transaction Coordinator).;An application may cause this mixture to arise if some objects in a package are coordinated by DTC and others are not. It can also occur if transactional MQI calls from an MTS client are mixed with transactional MQI calls from a library package transactional MTS object.;No problem arises if all transactional MQI calls originate from transactional MTS objects, or all transactional MQI calls originate from nontransactional MTS objects. But when a mixture of styles is used, the first style used fixes the style for the unit of work, and subsequent attempts to use the other style within the process fail with reason code MQRC_UOW_MIX_NOT_SUPPORTED.;When an application is run twice, scheduling factors in the operating system mean that it is possible for the queue-manager-coordinated transactional calls to fail in one run, and for the DTC-coordinated transactional calls to fail in the other run.;This reason code occurs only on Windows when running a version of the queue manager prior to version 5.2.;MQCC_FAILED;Check that the “MTS Transaction Support” attribute defined for the object’s class is set correctly. If necessary, modify the application so that objects executing within different units of work do not try to use the same connection handle.;
MQRC_UOW_NOT_AVAILABLE;2255;08CF;RC2255;An MQGET, MQPUT, or MQPUT1 call was issued to get or put a message outside a unit of work, but the options specified on the call required the queue manager to process the call within a unit of work. Because there is already a user-defined unit of work in existence, the queue manager was unable to create a temporary unit of work for the duration of the call.;This reason occurs in the following circumstances: On an MQGET call, when the MQGMO_COMPLETE_MSG option is specified in MQGMO and the logical message to be retrieved is persistent and consists of two or more segments. On an MQPUT or MQPUT1 call, when the MQMF_SEGMENTATION_ALLOWED flag is specified in MQMD and the message requires segmentation.;This reason code occurs in the following environments: AIX®, HP-UX, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Issue the MQGET, MQPUT, or MQPUT1 call inside the user-defined unit of work. Alternatively, for the MQPUT or MQPUT1 call, reduce the size of the message so that it does not require segmentation by the queue manager.;
MQRC_USER_ID_NOT_AVAILABLE;2291;08F3;RC2291;This reason should be returned by the MQZ_FIND_USERID installable service component when the user ID cannot be determined. On z/OS®, this reason code does not occur.;MQCC_FAILED;None. See the WebSphere MQ System Administration Guide book for information about installable services.;
MQRC_WAIT_INTERVAL_ERROR;2090;082A;RC2090;On the MQGET call, the value specified for the WaitInterval field in the GetMsgOpts parameter is not valid.;MQCC_FAILED;Specify a value greater than or equal to zero, or the special value MQWI_UNLIMITED if an indefinite wait is required.;
MQRC_WIH_ERROR;2333;091D;RC2333;An MQPUT or MQPUT1 call was issued, but the message data contains an MQWIH structure that is not valid. Possible errors include the following: The StrucId field is not MQWIH_STRUC_ID. The Version field is not MQWIH_VERSION_1. The StrucLength field is not MQWIH_LENGTH_1. The CodedCharSetId field is zero, or a negative value that is not valid. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message). On z/OS®, this error also occurs when the IndexType attribute of the queue is MQIT_MSG_TOKEN, but the message data does not begin with an MQWIH structure.;MQCC_FAILED;Check that the fields in the structure are set correctly. Ensure that the application sets the CodedCharSetId field to a valid value (note: MQCCSI_DEFAULT, MQCCSI_EMBEDDED, MQCCSI_Q_MGR, and MQCCSI_UNDEFINED are not valid in this field). On z/OS, if the queue has an IndexType of MQIT_MSG_TOKEN, ensure that the message data begins with an MQWIH structure.;
MQRC_WRONG_CF_LEVEL;2366;093E;RC2366;An MQOPEN or MQPUT1 call was issued specifying a shared queue, but the queue requires a coupling-facility structure with a different level of capability.;This reason code occurs only on z/OS®.;MQCC_FAILED;Ensure that the coupling-facility structure used for the queue is at the level required to support the capabilities that the queue provides.;You can use the DISPLAY CFSTRUCT command to display the level, and ALTER CFSTRUCT() CFLEVEL() command to modify the level. See The MQSC commands;
MQRC_WRONG_GMO_VERSION;2256;08D0;RC2256;An MQGET call was issued specifying options that required an MQGMO with a version number not less than MQGMO_VERSION_2, but the MQGMO supplied did not satisfy this condition.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Modify the application to pass a version-2 MQGMO. Check the application logic to ensure that the Version field in MQGMO has been set to MQGMO_VERSION_2. Alternatively, remove the option that requires the version-2 MQGMO.;
MQRC_WRONG_MD_VERSION;2257;08D1;RC2257;An MQGET, MQPUT, or MQPUT1 call was issued specifying options that required an MQMD with a version number not less than MQMD_VERSION_2, but the MQMD supplied did not satisfy this condition.;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Modify the application to pass a version-2 MQMD. Check the application logic to ensure that the Version field in MQMD has been set to MQMD_VERSION_2. Alternatively, remove the option that requires the version-2 MQMD.;
MQRC_WRONG_VERSION;6128;17FO;RC6128;A method failed because a version number specified or encountered is either incorrect or not supported.;For the ImqCICSBridgeHeader class, the problem is with the version attribute.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;If you are specifying a version number, use one that is supported by the class. If you are receiving message data from another program, ensure that both programs are using consistent and supported version numbers.;
MQRC_WXP_ERROR;2356;0934;RC2356;An MQXCLWLN call was issued from a cluster workload exit to obtain the address of the next record in the chain, but the workload exit parameter structure ExitParms is not valid, for one of the following reasons: The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.) The StrucId field is not MQWXP_STRUC_ID. The Version field is not MQWXP_VERSION_2. The CacheContext field does not contain the value passed to the exit by the queue manager.;MQCC_FAILED;Ensure that the parameter specified for ExitParms is the MQWXP structure that was passed to the exit when the exit was invoked.;
MQRC_XEPO_ERROR;2507;09CB;RC2507;On an MQXEP call, the exit options structure MQXEPO is not valid, for one of the following reasons: The StrucId field is not MQXEPO_STRUC_ID. The Version field specifies a value that is not valid or not supported. The parameter pointer is not valid. (It is not always possible to detect parameter pointers that are not valid; if not detected, unpredictable results occur.);MQCC_FAILED;Ensure that input fields in the MQXEPO structure are set correctly.;
MQRC_XMIT_Q_TYPE_ERROR;2091;082B;RC2091;On an MQOPEN or MQPUT1 call, a message is to be sent to a remote queue manager. The ObjectName or ObjectQMgrName field in the object descriptor specifies the name of a local definition of a remote queue but one of the following applies to the XmitQName attribute of the definition: XmitQName is not blank, but specifies a queue that is not a local queue XmitQName is blank, but RemoteQMgrName specifies a queue that is not a local queue;This reason also occurs if the queue name is resolved through a cell directory, and the remote queue manager name obtained from the cell directory is the name of a queue, but this is not a local queue.;MQCC_FAILED;Check the values specified for ObjectName and ObjectQMgrName. If these are correct, check the queue definitions. For more information on transmission queues, see the WebSphere MQ Application Programming Guide.;
MQRC_XMIT_Q_USAGE_ERROR;2092;082C;RC2092;On an MQOPEN or MQPUT1 call, a message is to be sent to a remote queue manager, but one of the following occurred: ObjectQMgrName specifies the name of a local queue, but it does not have a Usage attribute of MQUS_TRANSMISSION. The ObjectName or ObjectQMgrName field in the object descriptor specifies the name of a local definition of a remote queue but one of the following applies to the XmitQName attribute of the definition: XmitQName is not blank, but specifies a queue that does not have a Usage attribute of MQUS_TRANSMISSION XmitQName is blank, but RemoteQMgrName specifies a queue that does not have a Usage attribute of MQUS_TRANSMISSION XmitQName specifies the queue SYSTEM.QSG.TRANSMIT.QUEUE the IGQ queue manager attribute indicates that IGQ is DISABLED. The queue name is resolved through a cell directory, and the remote queue manager name obtained from the cell directory is the name of a local queue, but it does not have a Usage attribute of MQUS_TRANSMISSION.;MQCC_FAILED;Check the values specified for ObjectName and ObjectQMgrName. If these are correct, check the queue definitions. For more information on transmission queues, see the WebSphere MQ Application Programming Guide.;
MQRC_XQH_ERROR;2260;08D4;RC2260;An MQPUT or MQPUT1 call was issued, but the message data contains an MQXQH structure that is not valid. Possible errors include the following: The StrucId field is not MQXQH_STRUC_ID. The Version field is not MQXQH_VERSION_1. The BufferLength parameter of the call has a value that is too small to accommodate the structure (the structure extends beyond the end of the message).;This reason code occurs in the following environments: AIX®, HP-UX, z/OS®, i5/OS®, Solaris, Windows, plus WebSphere® MQ clients connected to these systems.;MQCC_FAILED;Check that the fields in the structure are set correctly.;
MQRC_XWAIT_CANCELED;2107;083B;RC2107;An MQXWAIT call was issued, but the call has been canceled because a STOP CHINIT command has been issued (or the queue manager has been stopped, which causes the same effect). Refer to the WebSphere® MQ Intercommunication book for details of the MQXWAIT call.;This reason code occurs only on z/OS®.;MQCC_FAILED;Tidy up and terminate.;
MQRC_XWAIT_ERROR;2108;083C;RC2108;An MQXWAIT call was issued, but the invocation was not valid for one of the following reasons: The wait descriptor MQXWD contains data that is not valid. The linkage stack level is not valid. The addressing mode is not valid. There are too many wait events outstanding.;This reason code occurs only on z/OS®.;MQCC_FAILED;Obey the rules for using the MQXWAIT call. Refer to the WebSphere® MQ Intercommunication book for details of this call.;
MQRC_ZERO_LENGTH;6116;17E4;RC6116;A zero length has been supplied where a positive length is either required or implied.;This reason code occurs in the WebSphere® MQ C++ environment.;MQCC_FAILED;;
